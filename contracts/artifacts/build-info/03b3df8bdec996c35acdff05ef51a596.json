{
	"id": "03b3df8bdec996c35acdff05ef51a596",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BonDeFiToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract BonDeFiToken is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {\n    bytes32 public constant ADMIN = keccak256(\"ADMIN\");\n    bytes32 public constant BOND_ISSUER = keccak256(\"BOND_ISSUER\");\n    address public immutable stableCoin;\n    uint256 public immutable maturityDate;\n    address public interestToken;\n\n    constructor(address administrator, address bondIssuer, address _stableCoin,\n    uint256 _faceValue, uint256 _maturityDate)\n        ERC20(\"BonDeFiToken\", \"BDF\")\n    {\n        _grantRole(ADMIN, administrator);\n        _grantRole(BOND_ISSUER, bondIssuer);\n        stableCoin = _stableCoin;\n        maturityDate = _maturityDate;\n        _mint(msg.sender, _faceValue * 10 ** decimals());\n    }\n    function setInterestToken(address interestTokenAddr) public {\n        interestToken = interestTokenAddr;\n    }\n\n    function buyBond(uint256 amountTokens) public{\n        require(IERC20(stableCoin).transferFrom(msg.sender,address(this),amountTokens),\"Stable coin transfer failed\");\n        require(ERC20(this).transfer(msg.sender,amountTokens),\"Bond token transfer failed\");\n    }\n\n    function distributeInterest(address tokenHolder,uint256 amount) public onlyRole(ADMIN){\n        require(IERC20(interestToken).transferFrom(interestToken,tokenHolder,amount),\"Transfer failed\");\n    }\n\n    function distributeInterestAll(address[] memory tokenHolders, uint256[] memory amounts) public onlyRole(ADMIN) {\n        require(tokenHolders.length == amounts.length, \"Token holders and amounts length mismatch\");\n        for (uint256 i = 0; i < tokenHolders.length; i++) {\n            require(IERC20(interestToken).transferFrom(msg.sender, tokenHolders[i], amounts[i]), \"Transfer failed\");\n        }\n    }\n\n    function claimInvestorFunds() public onlyRole(BOND_ISSUER){\n        uint256 amountInvestorCoins = IERC20(stableCoin).balanceOf(address(this));\n        require(amountInvestorCoins > 0,\"No investor funds available.\");\n        require(ERC20(this).transfer(msg.sender,amountInvestorCoins),\"Failed to transfer stable coins\");\n    }\n\n    function claimFaceValue(uint256 amountTokens) public{\n        //check maturity\n        require(block.timestamp >= maturityDate,\"Maturity not yet reached\");\n        //execute transfer\n        require(amountTokens > 0,\"Can't claim zero coins\");\n        require(ERC20(this).transferFrom(msg.sender,address(this),amountTokens),\"Bond token transfer failed\");\n        require(IERC20(stableCoin).transfer(msg.sender,amountTokens),\"Stable coin transfer failed\");\n        //burn coins\n        _burn(address(this),amountTokens);\n    }\n    //for demonstration only\n    function showBondTokens() public view returns (uint256) {\n        return ERC20(this).balanceOf(address(this));\n    }\n    function showInterestTokens() public view returns (uint256){\n        return IERC20(interestToken).balanceOf(msg.sender);\n    }\n    function showStableCoins() public view returns (uint256){\n        return IERC20(stableCoin).balanceOf(msg.sender);\n    }\n\n    // The following functions are overrides required by Solidity.\n    // Override required for pausable\n    function _update(address from, address to, uint256 value)\n        internal\n        override(ERC20, ERC20Pausable)\n    {\n        super._update(from, to, value);\n    }\n        function pause() public onlyRole(ADMIN) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(ADMIN) {\n        _unpause();\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1253,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1253,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BonDeFiToken.sol": {
				"BonDeFiToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "administrator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "bondIssuer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stableCoin",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_faceValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maturityDate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BOND_ISSUER",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountTokens",
									"type": "uint256"
								}
							],
							"name": "buyBond",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountTokens",
									"type": "uint256"
								}
							],
							"name": "claimFaceValue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimInvestorFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "distributeInterest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "tokenHolders",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "distributeInterestAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "interestToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maturityDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "interestTokenAddr",
									"type": "address"
								}
							],
							"name": "setInterestToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "showBondTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "showInterestTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "showStableCoins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BonDeFiToken.sol\":373:3782  contract BonDeFiToken is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/BonDeFiToken.sol\":698:1086  constructor(address administrator, address bondIssuer, address _stableCoin,... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x426f6e44654669546f6b656e0000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4244460000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BonDeFiToken.sol\":872:904  _grantRole(ADMIN, administrator) */\n  tag_13\n    /* \"contracts/BonDeFiToken.sol\":487:505  keccak256(\"ADMIN\") */\n  0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n    /* \"contracts/BonDeFiToken.sol\":890:903  administrator */\n  dup7\n    /* \"contracts/BonDeFiToken.sol\":872:882  _grantRole */\n  shl(0x20, tag_14)\n    /* \"contracts/BonDeFiToken.sol\":872:904  _grantRole(ADMIN, administrator) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/BonDeFiToken.sol\":914:949  _grantRole(BOND_ISSUER, bondIssuer) */\n  tag_15\n    /* \"contracts/BonDeFiToken.sol\":549:573  keccak256(\"BOND_ISSUER\") */\n  0xf877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7\n    /* \"contracts/BonDeFiToken.sol\":938:948  bondIssuer */\n  dup6\n    /* \"contracts/BonDeFiToken.sol\":914:924  _grantRole */\n  shl(0x20, tag_14)\n    /* \"contracts/BonDeFiToken.sol\":914:949  _grantRole(BOND_ISSUER, bondIssuer) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/BonDeFiToken.sol\":972:983  _stableCoin */\n  dup3\n    /* \"contracts/BonDeFiToken.sol\":959:983  stableCoin = _stableCoin */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/BonDeFiToken.sol\":1008:1021  _maturityDate */\n  dup1\n    /* \"contracts/BonDeFiToken.sol\":993:1021  maturityDate = _maturityDate */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/BonDeFiToken.sol\":1031:1079  _mint(msg.sender, _faceValue * 10 ** decimals()) */\n  tag_16\n    /* \"contracts/BonDeFiToken.sol\":1037:1047  msg.sender */\n  caller\n    /* \"contracts/BonDeFiToken.sol\":1068:1078  decimals() */\n  tag_17\n    /* \"contracts/BonDeFiToken.sol\":1068:1076  decimals */\n  shl(0x20, tag_18)\n    /* \"contracts/BonDeFiToken.sol\":1068:1078  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"contracts/BonDeFiToken.sol\":1062:1064  10 */\n  0x0a\n    /* \"contracts/BonDeFiToken.sol\":1062:1078  10 ** decimals() */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/BonDeFiToken.sol\":1049:1059  _faceValue */\n  dup5\n    /* \"contracts/BonDeFiToken.sol\":1049:1078  _faceValue * 10 ** decimals() */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/BonDeFiToken.sol\":1031:1036  _mint */\n  shl(0x20, tag_23)\n    /* \"contracts/BonDeFiToken.sol\":1031:1079  _mint(msg.sender, _faceValue * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"contracts/BonDeFiToken.sol\":698:1086  constructor(address administrator, address bondIssuer, address _stableCoin,... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/BonDeFiToken.sol\":373:3782  contract BonDeFiToken is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_26\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_27)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_29\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_30)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_25:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_37\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/BonDeFiToken.sol\":3466:3631  function _update(address from, address to, uint256 value)... */\ntag_38:\n    /* \"contracts/BonDeFiToken.sol\":3594:3624  super._update(from, to, value) */\n  tag_42\n    /* \"contracts/BonDeFiToken.sol\":3608:3612  from */\n  dup4\n    /* \"contracts/BonDeFiToken.sol\":3614:3616  to */\n  dup4\n    /* \"contracts/BonDeFiToken.sol\":3618:3623  value */\n  dup4\n    /* \"contracts/BonDeFiToken.sol\":3594:3607  super._update */\n  shl(0x20, tag_43)\n    /* \"contracts/BonDeFiToken.sol\":3594:3624  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"contracts/BonDeFiToken.sol\":3466:3631  function _update(address from, address to, uint256 value)... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\ntag_43:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n  tag_45\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n  shl(0x20, tag_46)\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n  0x20\n  shr\n  jump\t// in\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n  tag_48\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1234:1238  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1240:1242  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1244:1249  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1233  super._update */\n  shl(0x20, tag_49)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\ntag_46:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n  tag_51\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n  shl(0x20, tag_52)\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n  0x20\n  shr\n  jump\t// in\ntag_51:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n  iszero\n  tag_53\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n  mload(0x40)\n  0xd93c066500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_55\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_56\n  swap2\n  swap1\n  tag_57\n  jump\t// in\ntag_56:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_58)\ntag_55:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_59\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_60\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_61\n  jump\t// in\ntag_60:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_59:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_58:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_62\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_63)\ntag_62:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_63:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_64\n  swap2\n  swap1\n  tag_65\n  jump\t// in\ntag_64:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\ntag_52:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_68:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_70:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_71:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_109\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_70\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_72:\n    /* \"#utility.yul\":641:665   */\n  tag_111\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_71\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_112\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_112:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_73:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_114\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_72\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_74:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_75:\n    /* \"#utility.yul\":1001:1025   */\n  tag_117\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_74\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_118\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_118:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_76:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_120\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_75\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2182   */\ntag_3:\n    /* \"#utility.yul\":1311:1317   */\n  0x00\n    /* \"#utility.yul\":1319:1325   */\n  dup1\n    /* \"#utility.yul\":1327:1333   */\n  0x00\n    /* \"#utility.yul\":1335:1341   */\n  dup1\n    /* \"#utility.yul\":1343:1349   */\n  0x00\n    /* \"#utility.yul\":1392:1395   */\n  0xa0\n    /* \"#utility.yul\":1380:1389   */\n  dup7\n    /* \"#utility.yul\":1371:1378   */\n  dup9\n    /* \"#utility.yul\":1367:1390   */\n  sub\n    /* \"#utility.yul\":1363:1396   */\n  slt\n    /* \"#utility.yul\":1360:1480   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":1399:1478   */\n  tag_123\n  tag_68\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":1360:1480   */\ntag_122:\n    /* \"#utility.yul\":1519:1520   */\n  0x00\n    /* \"#utility.yul\":1544:1608   */\n  tag_124\n    /* \"#utility.yul\":1600:1607   */\n  dup9\n    /* \"#utility.yul\":1591:1597   */\n  dup3\n    /* \"#utility.yul\":1580:1589   */\n  dup10\n    /* \"#utility.yul\":1576:1598   */\n  add\n    /* \"#utility.yul\":1544:1608   */\n  tag_73\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":1534:1608   */\n  swap6\n  pop\n    /* \"#utility.yul\":1490:1618   */\n  pop\n    /* \"#utility.yul\":1657:1659   */\n  0x20\n    /* \"#utility.yul\":1683:1747   */\n  tag_125\n    /* \"#utility.yul\":1739:1746   */\n  dup9\n    /* \"#utility.yul\":1730:1736   */\n  dup3\n    /* \"#utility.yul\":1719:1728   */\n  dup10\n    /* \"#utility.yul\":1715:1737   */\n  add\n    /* \"#utility.yul\":1683:1747   */\n  tag_73\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":1673:1747   */\n  swap5\n  pop\n    /* \"#utility.yul\":1628:1757   */\n  pop\n    /* \"#utility.yul\":1796:1798   */\n  0x40\n    /* \"#utility.yul\":1822:1886   */\n  tag_126\n    /* \"#utility.yul\":1878:1885   */\n  dup9\n    /* \"#utility.yul\":1869:1875   */\n  dup3\n    /* \"#utility.yul\":1858:1867   */\n  dup10\n    /* \"#utility.yul\":1854:1876   */\n  add\n    /* \"#utility.yul\":1822:1886   */\n  tag_73\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":1812:1886   */\n  swap4\n  pop\n    /* \"#utility.yul\":1767:1896   */\n  pop\n    /* \"#utility.yul\":1935:1937   */\n  0x60\n    /* \"#utility.yul\":1961:2025   */\n  tag_127\n    /* \"#utility.yul\":2017:2024   */\n  dup9\n    /* \"#utility.yul\":2008:2014   */\n  dup3\n    /* \"#utility.yul\":1997:2006   */\n  dup10\n    /* \"#utility.yul\":1993:2015   */\n  add\n    /* \"#utility.yul\":1961:2025   */\n  tag_76\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":1951:2025   */\n  swap3\n  pop\n    /* \"#utility.yul\":1906:2035   */\n  pop\n    /* \"#utility.yul\":2074:2077   */\n  0x80\n    /* \"#utility.yul\":2101:2165   */\n  tag_128\n    /* \"#utility.yul\":2157:2164   */\n  dup9\n    /* \"#utility.yul\":2148:2154   */\n  dup3\n    /* \"#utility.yul\":2137:2146   */\n  dup10\n    /* \"#utility.yul\":2133:2155   */\n  add\n    /* \"#utility.yul\":2101:2165   */\n  tag_76\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":2091:2165   */\n  swap2\n  pop\n    /* \"#utility.yul\":2045:2175   */\n  pop\n    /* \"#utility.yul\":1205:2182   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2188:2287   */\ntag_77:\n    /* \"#utility.yul\":2240:2246   */\n  0x00\n    /* \"#utility.yul\":2274:2279   */\n  dup2\n    /* \"#utility.yul\":2268:2280   */\n  mload\n    /* \"#utility.yul\":2258:2280   */\n  swap1\n  pop\n    /* \"#utility.yul\":2188:2287   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2293:2473   */\ntag_78:\n    /* \"#utility.yul\":2341:2418   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2338:2339   */\n  0x00\n    /* \"#utility.yul\":2331:2419   */\n  mstore\n    /* \"#utility.yul\":2438:2442   */\n  0x41\n    /* \"#utility.yul\":2435:2436   */\n  0x04\n    /* \"#utility.yul\":2428:2443   */\n  mstore\n    /* \"#utility.yul\":2462:2466   */\n  0x24\n    /* \"#utility.yul\":2459:2460   */\n  0x00\n    /* \"#utility.yul\":2452:2467   */\n  revert\n    /* \"#utility.yul\":2479:2659   */\ntag_79:\n    /* \"#utility.yul\":2527:2604   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2524:2525   */\n  0x00\n    /* \"#utility.yul\":2517:2605   */\n  mstore\n    /* \"#utility.yul\":2624:2628   */\n  0x22\n    /* \"#utility.yul\":2621:2622   */\n  0x04\n    /* \"#utility.yul\":2614:2629   */\n  mstore\n    /* \"#utility.yul\":2648:2652   */\n  0x24\n    /* \"#utility.yul\":2645:2646   */\n  0x00\n    /* \"#utility.yul\":2638:2653   */\n  revert\n    /* \"#utility.yul\":2665:2985   */\ntag_80:\n    /* \"#utility.yul\":2709:2715   */\n  0x00\n    /* \"#utility.yul\":2746:2747   */\n  0x02\n    /* \"#utility.yul\":2740:2744   */\n  dup3\n    /* \"#utility.yul\":2736:2748   */\n  div\n    /* \"#utility.yul\":2726:2748   */\n  swap1\n  pop\n    /* \"#utility.yul\":2793:2794   */\n  0x01\n    /* \"#utility.yul\":2787:2791   */\n  dup3\n    /* \"#utility.yul\":2783:2795   */\n  and\n    /* \"#utility.yul\":2814:2832   */\n  dup1\n    /* \"#utility.yul\":2804:2885   */\n  tag_133\n  jumpi\n    /* \"#utility.yul\":2870:2874   */\n  0x7f\n    /* \"#utility.yul\":2862:2868   */\n  dup3\n    /* \"#utility.yul\":2858:2875   */\n  and\n    /* \"#utility.yul\":2848:2875   */\n  swap2\n  pop\n    /* \"#utility.yul\":2804:2885   */\ntag_133:\n    /* \"#utility.yul\":2932:2934   */\n  0x20\n    /* \"#utility.yul\":2924:2930   */\n  dup3\n    /* \"#utility.yul\":2921:2935   */\n  lt\n    /* \"#utility.yul\":2901:2919   */\n  dup2\n    /* \"#utility.yul\":2898:2936   */\n  sub\n    /* \"#utility.yul\":2895:2979   */\n  tag_134\n  jumpi\n    /* \"#utility.yul\":2951:2969   */\n  tag_135\n  tag_79\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2895:2979   */\ntag_134:\n    /* \"#utility.yul\":2716:2985   */\n  pop\n    /* \"#utility.yul\":2665:2985   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2991:3132   */\ntag_81:\n    /* \"#utility.yul\":3040:3044   */\n  0x00\n    /* \"#utility.yul\":3063:3066   */\n  dup2\n    /* \"#utility.yul\":3055:3066   */\n  swap1\n  pop\n    /* \"#utility.yul\":3086:3089   */\n  dup2\n    /* \"#utility.yul\":3083:3084   */\n  0x00\n    /* \"#utility.yul\":3076:3090   */\n  mstore\n    /* \"#utility.yul\":3120:3124   */\n  0x20\n    /* \"#utility.yul\":3117:3118   */\n  0x00\n    /* \"#utility.yul\":3107:3125   */\n  keccak256\n    /* \"#utility.yul\":3099:3125   */\n  swap1\n  pop\n    /* \"#utility.yul\":2991:3132   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3138:3231   */\ntag_82:\n    /* \"#utility.yul\":3175:3181   */\n  0x00\n    /* \"#utility.yul\":3222:3224   */\n  0x20\n    /* \"#utility.yul\":3217:3219   */\n  0x1f\n    /* \"#utility.yul\":3210:3215   */\n  dup4\n    /* \"#utility.yul\":3206:3220   */\n  add\n    /* \"#utility.yul\":3202:3225   */\n  div\n    /* \"#utility.yul\":3192:3225   */\n  swap1\n  pop\n    /* \"#utility.yul\":3138:3231   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3237:3344   */\ntag_83:\n    /* \"#utility.yul\":3281:3289   */\n  0x00\n    /* \"#utility.yul\":3331:3336   */\n  dup3\n    /* \"#utility.yul\":3325:3329   */\n  dup3\n    /* \"#utility.yul\":3321:3337   */\n  shl\n    /* \"#utility.yul\":3300:3337   */\n  swap1\n  pop\n    /* \"#utility.yul\":3237:3344   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3350:3743   */\ntag_84:\n    /* \"#utility.yul\":3419:3425   */\n  0x00\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3457:3467   */\n  dup4\n    /* \"#utility.yul\":3453:3471   */\n  mul\n    /* \"#utility.yul\":3492:3589   */\n  tag_140\n    /* \"#utility.yul\":3522:3588   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3511:3520   */\n  dup3\n    /* \"#utility.yul\":3492:3589   */\n  tag_83\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":3610:3649   */\n  tag_141\n    /* \"#utility.yul\":3640:3648   */\n  dup7\n    /* \"#utility.yul\":3629:3638   */\n  dup4\n    /* \"#utility.yul\":3610:3649   */\n  tag_83\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3598:3649   */\n  swap6\n  pop\n    /* \"#utility.yul\":3682:3686   */\n  dup1\n    /* \"#utility.yul\":3678:3687   */\n  not\n    /* \"#utility.yul\":3671:3676   */\n  dup5\n    /* \"#utility.yul\":3667:3688   */\n  and\n    /* \"#utility.yul\":3658:3688   */\n  swap4\n  pop\n    /* \"#utility.yul\":3731:3735   */\n  dup1\n    /* \"#utility.yul\":3721:3729   */\n  dup7\n    /* \"#utility.yul\":3717:3736   */\n  and\n    /* \"#utility.yul\":3710:3715   */\n  dup5\n    /* \"#utility.yul\":3707:3737   */\n  or\n    /* \"#utility.yul\":3697:3737   */\n  swap3\n  pop\n    /* \"#utility.yul\":3426:3743   */\n  pop\n  pop\n    /* \"#utility.yul\":3350:3743   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3749:3809   */\ntag_85:\n    /* \"#utility.yul\":3777:3780   */\n  0x00\n    /* \"#utility.yul\":3798:3803   */\n  dup2\n    /* \"#utility.yul\":3791:3803   */\n  swap1\n  pop\n    /* \"#utility.yul\":3749:3809   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3815:3957   */\ntag_86:\n    /* \"#utility.yul\":3865:3874   */\n  0x00\n    /* \"#utility.yul\":3898:3951   */\n  tag_144\n    /* \"#utility.yul\":3916:3950   */\n  tag_145\n    /* \"#utility.yul\":3925:3949   */\n  tag_146\n    /* \"#utility.yul\":3943:3948   */\n  dup5\n    /* \"#utility.yul\":3925:3949   */\n  tag_74\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":3916:3950   */\n  tag_85\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":3898:3951   */\n  tag_74\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3885:3951   */\n  swap1\n  pop\n    /* \"#utility.yul\":3815:3957   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3963:4038   */\ntag_87:\n    /* \"#utility.yul\":4006:4009   */\n  0x00\n    /* \"#utility.yul\":4027:4032   */\n  dup2\n    /* \"#utility.yul\":4020:4032   */\n  swap1\n  pop\n    /* \"#utility.yul\":3963:4038   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4044:4313   */\ntag_88:\n    /* \"#utility.yul\":4154:4193   */\n  tag_149\n    /* \"#utility.yul\":4185:4192   */\n  dup4\n    /* \"#utility.yul\":4154:4193   */\n  tag_86\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":4215:4306   */\n  tag_150\n    /* \"#utility.yul\":4264:4305   */\n  tag_151\n    /* \"#utility.yul\":4288:4304   */\n  dup3\n    /* \"#utility.yul\":4264:4305   */\n  tag_87\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":4256:4262   */\n  dup5\n    /* \"#utility.yul\":4249:4253   */\n  dup5\n    /* \"#utility.yul\":4243:4254   */\n  sload\n    /* \"#utility.yul\":4215:4306   */\n  tag_84\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":4209:4213   */\n  dup3\n    /* \"#utility.yul\":4202:4307   */\n  sstore\n    /* \"#utility.yul\":4120:4313   */\n  pop\n    /* \"#utility.yul\":4044:4313   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4319:4392   */\ntag_89:\n    /* \"#utility.yul\":4364:4367   */\n  0x00\n    /* \"#utility.yul\":4319:4392   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4398:4587   */\ntag_90:\n    /* \"#utility.yul\":4475:4507   */\n  tag_154\n  tag_89\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4516:4581   */\n  tag_155\n    /* \"#utility.yul\":4574:4580   */\n  dup2\n    /* \"#utility.yul\":4566:4572   */\n  dup5\n    /* \"#utility.yul\":4560:4564   */\n  dup5\n    /* \"#utility.yul\":4516:4581   */\n  tag_88\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":4451:4587   */\n  pop\n    /* \"#utility.yul\":4398:4587   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4593:4779   */\ntag_91:\n    /* \"#utility.yul\":4653:4773   */\ntag_157:\n    /* \"#utility.yul\":4670:4673   */\n  dup2\n    /* \"#utility.yul\":4663:4668   */\n  dup2\n    /* \"#utility.yul\":4660:4674   */\n  lt\n    /* \"#utility.yul\":4653:4773   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":4724:4763   */\n  tag_160\n    /* \"#utility.yul\":4761:4762   */\n  0x00\n    /* \"#utility.yul\":4754:4759   */\n  dup3\n    /* \"#utility.yul\":4724:4763   */\n  tag_90\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":4697:4698   */\n  0x01\n    /* \"#utility.yul\":4690:4695   */\n  dup2\n    /* \"#utility.yul\":4686:4699   */\n  add\n    /* \"#utility.yul\":4677:4699   */\n  swap1\n  pop\n    /* \"#utility.yul\":4653:4773   */\n  jump(tag_157)\ntag_159:\n    /* \"#utility.yul\":4593:4779   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4785:5328   */\ntag_92:\n    /* \"#utility.yul\":4886:4888   */\n  0x1f\n    /* \"#utility.yul\":4881:4884   */\n  dup3\n    /* \"#utility.yul\":4878:4889   */\n  gt\n    /* \"#utility.yul\":4875:5321   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":4920:4958   */\n  tag_163\n    /* \"#utility.yul\":4952:4957   */\n  dup2\n    /* \"#utility.yul\":4920:4958   */\n  tag_81\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":5004:5033   */\n  tag_164\n    /* \"#utility.yul\":5022:5032   */\n  dup5\n    /* \"#utility.yul\":5004:5033   */\n  tag_82\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":4994:5002   */\n  dup2\n    /* \"#utility.yul\":4990:5034   */\n  add\n    /* \"#utility.yul\":5187:5189   */\n  0x20\n    /* \"#utility.yul\":5175:5185   */\n  dup6\n    /* \"#utility.yul\":5172:5190   */\n  lt\n    /* \"#utility.yul\":5169:5218   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":5208:5216   */\n  dup2\n    /* \"#utility.yul\":5193:5216   */\n  swap1\n  pop\n    /* \"#utility.yul\":5169:5218   */\ntag_165:\n    /* \"#utility.yul\":5231:5311   */\n  tag_166\n    /* \"#utility.yul\":5287:5309   */\n  tag_167\n    /* \"#utility.yul\":5305:5308   */\n  dup6\n    /* \"#utility.yul\":5287:5309   */\n  tag_82\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":5277:5285   */\n  dup4\n    /* \"#utility.yul\":5273:5310   */\n  add\n    /* \"#utility.yul\":5260:5271   */\n  dup3\n    /* \"#utility.yul\":5231:5311   */\n  tag_91\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":4890:5321   */\n  pop\n  pop\n    /* \"#utility.yul\":4875:5321   */\ntag_162:\n    /* \"#utility.yul\":4785:5328   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5334:5451   */\ntag_93:\n    /* \"#utility.yul\":5388:5396   */\n  0x00\n    /* \"#utility.yul\":5438:5443   */\n  dup3\n    /* \"#utility.yul\":5432:5436   */\n  dup3\n    /* \"#utility.yul\":5428:5444   */\n  shr\n    /* \"#utility.yul\":5407:5444   */\n  swap1\n  pop\n    /* \"#utility.yul\":5334:5451   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5457:5626   */\ntag_94:\n    /* \"#utility.yul\":5501:5507   */\n  0x00\n    /* \"#utility.yul\":5534:5585   */\n  tag_170\n    /* \"#utility.yul\":5582:5583   */\n  0x00\n    /* \"#utility.yul\":5578:5584   */\n  not\n    /* \"#utility.yul\":5570:5575   */\n  dup5\n    /* \"#utility.yul\":5567:5568   */\n  0x08\n    /* \"#utility.yul\":5563:5576   */\n  mul\n    /* \"#utility.yul\":5534:5585   */\n  tag_93\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":5530:5586   */\n  not\n    /* \"#utility.yul\":5615:5619   */\n  dup1\n    /* \"#utility.yul\":5609:5613   */\n  dup4\n    /* \"#utility.yul\":5605:5620   */\n  and\n    /* \"#utility.yul\":5595:5620   */\n  swap2\n  pop\n    /* \"#utility.yul\":5508:5626   */\n  pop\n    /* \"#utility.yul\":5457:5626   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5631:5926   */\ntag_95:\n    /* \"#utility.yul\":5707:5711   */\n  0x00\n    /* \"#utility.yul\":5853:5882   */\n  tag_172\n    /* \"#utility.yul\":5878:5881   */\n  dup4\n    /* \"#utility.yul\":5872:5876   */\n  dup4\n    /* \"#utility.yul\":5853:5882   */\n  tag_94\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":5845:5882   */\n  swap2\n  pop\n    /* \"#utility.yul\":5915:5918   */\n  dup3\n    /* \"#utility.yul\":5912:5913   */\n  0x02\n    /* \"#utility.yul\":5908:5919   */\n  mul\n    /* \"#utility.yul\":5902:5906   */\n  dup3\n    /* \"#utility.yul\":5899:5920   */\n  or\n    /* \"#utility.yul\":5891:5920   */\n  swap1\n  pop\n    /* \"#utility.yul\":5631:5926   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5931:7326   */\ntag_9:\n    /* \"#utility.yul\":6048:6085   */\n  tag_174\n    /* \"#utility.yul\":6081:6084   */\n  dup3\n    /* \"#utility.yul\":6048:6085   */\n  tag_77\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6150:6168   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6142:6148   */\n  dup2\n    /* \"#utility.yul\":6139:6169   */\n  gt\n    /* \"#utility.yul\":6136:6192   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":6172:6190   */\n  tag_176\n  tag_78\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6136:6192   */\ntag_175:\n    /* \"#utility.yul\":6216:6254   */\n  tag_177\n    /* \"#utility.yul\":6248:6252   */\n  dup3\n    /* \"#utility.yul\":6242:6253   */\n  sload\n    /* \"#utility.yul\":6216:6254   */\n  tag_80\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6301:6368   */\n  tag_178\n    /* \"#utility.yul\":6361:6367   */\n  dup3\n    /* \"#utility.yul\":6353:6359   */\n  dup3\n    /* \"#utility.yul\":6347:6351   */\n  dup6\n    /* \"#utility.yul\":6301:6368   */\n  tag_92\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":6395:6396   */\n  0x00\n    /* \"#utility.yul\":6419:6423   */\n  0x20\n    /* \"#utility.yul\":6406:6423   */\n  swap1\n  pop\n    /* \"#utility.yul\":6451:6453   */\n  0x1f\n    /* \"#utility.yul\":6443:6449   */\n  dup4\n    /* \"#utility.yul\":6440:6454   */\n  gt\n    /* \"#utility.yul\":6468:6469   */\n  0x01\n    /* \"#utility.yul\":6463:7081   */\n  dup2\n  eq\n  tag_180\n  jumpi\n    /* \"#utility.yul\":7125:7126   */\n  0x00\n    /* \"#utility.yul\":7142:7148   */\n  dup5\n    /* \"#utility.yul\":7139:7216   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":7191:7200   */\n  dup3\n    /* \"#utility.yul\":7186:7189   */\n  dup8\n    /* \"#utility.yul\":7182:7201   */\n  add\n    /* \"#utility.yul\":7176:7202   */\n  mload\n    /* \"#utility.yul\":7167:7202   */\n  swap1\n  pop\n    /* \"#utility.yul\":7139:7216   */\ntag_181:\n    /* \"#utility.yul\":7242:7309   */\n  tag_182\n    /* \"#utility.yul\":7302:7308   */\n  dup6\n    /* \"#utility.yul\":7295:7300   */\n  dup3\n    /* \"#utility.yul\":7242:7309   */\n  tag_95\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7236:7240   */\n  dup7\n    /* \"#utility.yul\":7229:7310   */\n  sstore\n    /* \"#utility.yul\":7098:7320   */\n  pop\n    /* \"#utility.yul\":6433:7320   */\n  jump(tag_179)\n    /* \"#utility.yul\":6463:7081   */\ntag_180:\n    /* \"#utility.yul\":6515:6519   */\n  0x1f\n    /* \"#utility.yul\":6511:6520   */\n  not\n    /* \"#utility.yul\":6503:6509   */\n  dup5\n    /* \"#utility.yul\":6499:6521   */\n  and\n    /* \"#utility.yul\":6549:6586   */\n  tag_183\n    /* \"#utility.yul\":6581:6585   */\n  dup7\n    /* \"#utility.yul\":6549:6586   */\n  tag_81\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":6608:6609   */\n  0x00\n    /* \"#utility.yul\":6622:6830   */\ntag_184:\n    /* \"#utility.yul\":6636:6643   */\n  dup3\n    /* \"#utility.yul\":6633:6634   */\n  dup2\n    /* \"#utility.yul\":6630:6644   */\n  lt\n    /* \"#utility.yul\":6622:6830   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":6715:6724   */\n  dup5\n    /* \"#utility.yul\":6710:6713   */\n  dup10\n    /* \"#utility.yul\":6706:6725   */\n  add\n    /* \"#utility.yul\":6700:6726   */\n  mload\n    /* \"#utility.yul\":6692:6698   */\n  dup3\n    /* \"#utility.yul\":6685:6727   */\n  sstore\n    /* \"#utility.yul\":6766:6767   */\n  0x01\n    /* \"#utility.yul\":6758:6764   */\n  dup3\n    /* \"#utility.yul\":6754:6768   */\n  add\n    /* \"#utility.yul\":6744:6768   */\n  swap2\n  pop\n    /* \"#utility.yul\":6813:6815   */\n  0x20\n    /* \"#utility.yul\":6802:6811   */\n  dup6\n    /* \"#utility.yul\":6798:6816   */\n  add\n    /* \"#utility.yul\":6785:6816   */\n  swap5\n  pop\n    /* \"#utility.yul\":6659:6663   */\n  0x20\n    /* \"#utility.yul\":6656:6657   */\n  dup2\n    /* \"#utility.yul\":6652:6664   */\n  add\n    /* \"#utility.yul\":6647:6664   */\n  swap1\n  pop\n    /* \"#utility.yul\":6622:6830   */\n  jump(tag_184)\ntag_186:\n    /* \"#utility.yul\":6858:6864   */\n  dup7\n    /* \"#utility.yul\":6849:6856   */\n  dup4\n    /* \"#utility.yul\":6846:6865   */\n  lt\n    /* \"#utility.yul\":6843:7022   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":6916:6925   */\n  dup5\n    /* \"#utility.yul\":6911:6914   */\n  dup10\n    /* \"#utility.yul\":6907:6926   */\n  add\n    /* \"#utility.yul\":6901:6927   */\n  mload\n    /* \"#utility.yul\":6959:7007   */\n  tag_188\n    /* \"#utility.yul\":7001:7005   */\n  0x1f\n    /* \"#utility.yul\":6993:6999   */\n  dup10\n    /* \"#utility.yul\":6989:7006   */\n  and\n    /* \"#utility.yul\":6978:6987   */\n  dup3\n    /* \"#utility.yul\":6959:7007   */\n  tag_94\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":6951:6957   */\n  dup4\n    /* \"#utility.yul\":6944:7008   */\n  sstore\n    /* \"#utility.yul\":6866:7022   */\n  pop\n    /* \"#utility.yul\":6843:7022   */\ntag_187:\n    /* \"#utility.yul\":7068:7069   */\n  0x01\n    /* \"#utility.yul\":7064:7065   */\n  0x02\n    /* \"#utility.yul\":7056:7062   */\n  dup9\n    /* \"#utility.yul\":7052:7066   */\n  mul\n    /* \"#utility.yul\":7048:7070   */\n  add\n    /* \"#utility.yul\":7042:7046   */\n  dup9\n    /* \"#utility.yul\":7035:7071   */\n  sstore\n    /* \"#utility.yul\":6470:7081   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6433:7320   */\ntag_179:\n  pop\n    /* \"#utility.yul\":6023:7326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5931:7326   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7332:7512   */\ntag_96:\n    /* \"#utility.yul\":7380:7457   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7377:7378   */\n  0x00\n    /* \"#utility.yul\":7370:7458   */\n  mstore\n    /* \"#utility.yul\":7477:7481   */\n  0x11\n    /* \"#utility.yul\":7474:7475   */\n  0x04\n    /* \"#utility.yul\":7467:7482   */\n  mstore\n    /* \"#utility.yul\":7501:7505   */\n  0x24\n    /* \"#utility.yul\":7498:7499   */\n  0x00\n    /* \"#utility.yul\":7491:7506   */\n  revert\n    /* \"#utility.yul\":7518:7620   */\ntag_97:\n    /* \"#utility.yul\":7560:7568   */\n  0x00\n    /* \"#utility.yul\":7607:7612   */\n  dup2\n    /* \"#utility.yul\":7604:7605   */\n  0x01\n    /* \"#utility.yul\":7600:7613   */\n  shr\n    /* \"#utility.yul\":7579:7613   */\n  swap1\n  pop\n    /* \"#utility.yul\":7518:7620   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7626:8474   */\ntag_98:\n    /* \"#utility.yul\":7687:7692   */\n  0x00\n    /* \"#utility.yul\":7694:7698   */\n  dup1\n    /* \"#utility.yul\":7718:7724   */\n  dup3\n    /* \"#utility.yul\":7709:7724   */\n  swap2\n  pop\n    /* \"#utility.yul\":7742:7747   */\n  dup4\n    /* \"#utility.yul\":7733:7747   */\n  swap1\n  pop\n    /* \"#utility.yul\":7756:8468   */\ntag_192:\n    /* \"#utility.yul\":7777:7778   */\n  0x01\n    /* \"#utility.yul\":7767:7775   */\n  dup6\n    /* \"#utility.yul\":7764:7779   */\n  gt\n    /* \"#utility.yul\":7756:8468   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":7872:7876   */\n  dup1\n    /* \"#utility.yul\":7867:7870   */\n  dup7\n    /* \"#utility.yul\":7863:7877   */\n  div\n    /* \"#utility.yul\":7857:7861   */\n  dup2\n    /* \"#utility.yul\":7854:7878   */\n  gt\n    /* \"#utility.yul\":7851:7901   */\n  iszero\n  tag_195\n  jumpi\n    /* \"#utility.yul\":7881:7899   */\n  tag_196\n  tag_96\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":7851:7901   */\ntag_195:\n    /* \"#utility.yul\":7931:7932   */\n  0x01\n    /* \"#utility.yul\":7921:7929   */\n  dup6\n    /* \"#utility.yul\":7917:7933   */\n  and\n    /* \"#utility.yul\":7914:8365   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":8346:8350   */\n  dup1\n    /* \"#utility.yul\":8339:8344   */\n  dup3\n    /* \"#utility.yul\":8335:8351   */\n  mul\n    /* \"#utility.yul\":8326:8351   */\n  swap2\n  pop\n    /* \"#utility.yul\":7914:8365   */\ntag_197:\n    /* \"#utility.yul\":8396:8400   */\n  dup1\n    /* \"#utility.yul\":8390:8394   */\n  dup2\n    /* \"#utility.yul\":8386:8401   */\n  mul\n    /* \"#utility.yul\":8378:8401   */\n  swap1\n  pop\n    /* \"#utility.yul\":8426:8458   */\n  tag_198\n    /* \"#utility.yul\":8449:8457   */\n  dup6\n    /* \"#utility.yul\":8426:8458   */\n  tag_97\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":8414:8458   */\n  swap5\n  pop\n    /* \"#utility.yul\":7756:8468   */\n  jump(tag_192)\ntag_194:\n    /* \"#utility.yul\":7626:8474   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8480:9553   */\ntag_99:\n    /* \"#utility.yul\":8534:8539   */\n  0x00\n    /* \"#utility.yul\":8725:8733   */\n  dup3\n    /* \"#utility.yul\":8715:8755   */\n  tag_200\n  jumpi\n    /* \"#utility.yul\":8746:8747   */\n  0x01\n    /* \"#utility.yul\":8737:8747   */\n  swap1\n  pop\n    /* \"#utility.yul\":8748:8753   */\n  jump(tag_199)\n    /* \"#utility.yul\":8715:8755   */\ntag_200:\n    /* \"#utility.yul\":8774:8778   */\n  dup2\n    /* \"#utility.yul\":8764:8800   */\n  tag_201\n  jumpi\n    /* \"#utility.yul\":8791:8792   */\n  0x00\n    /* \"#utility.yul\":8782:8792   */\n  swap1\n  pop\n    /* \"#utility.yul\":8793:8798   */\n  jump(tag_199)\n    /* \"#utility.yul\":8764:8800   */\ntag_201:\n    /* \"#utility.yul\":8860:8864   */\n  dup2\n    /* \"#utility.yul\":8908:8909   */\n  0x01\n    /* \"#utility.yul\":8903:8930   */\n  dup2\n  eq\n  tag_203\n  jumpi\n    /* \"#utility.yul\":8944:8945   */\n  0x02\n    /* \"#utility.yul\":8939:9130   */\n  dup2\n  eq\n  tag_204\n  jumpi\n    /* \"#utility.yul\":8853:9130   */\n  jump(tag_202)\n    /* \"#utility.yul\":8903:8930   */\ntag_203:\n    /* \"#utility.yul\":8921:8922   */\n  0x01\n    /* \"#utility.yul\":8912:8922   */\n  swap2\n  pop\n    /* \"#utility.yul\":8923:8928   */\n  pop\n  jump(tag_199)\n    /* \"#utility.yul\":8939:9130   */\ntag_204:\n    /* \"#utility.yul\":8984:8987   */\n  0xff\n    /* \"#utility.yul\":8974:8982   */\n  dup5\n    /* \"#utility.yul\":8971:8988   */\n  gt\n    /* \"#utility.yul\":8968:9011   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":8991:9009   */\n  tag_206\n  tag_96\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":8968:9011   */\ntag_205:\n    /* \"#utility.yul\":9040:9048   */\n  dup4\n    /* \"#utility.yul\":9037:9038   */\n  0x02\n    /* \"#utility.yul\":9033:9049   */\n  exp\n    /* \"#utility.yul\":9024:9049   */\n  swap2\n  pop\n    /* \"#utility.yul\":9075:9078   */\n  dup5\n    /* \"#utility.yul\":9068:9073   */\n  dup3\n    /* \"#utility.yul\":9065:9079   */\n  gt\n    /* \"#utility.yul\":9062:9102   */\n  iszero\n  tag_207\n  jumpi\n    /* \"#utility.yul\":9082:9100   */\n  tag_208\n  tag_96\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":9062:9102   */\ntag_207:\n    /* \"#utility.yul\":9115:9120   */\n  pop\n  jump(tag_199)\n    /* \"#utility.yul\":8853:9130   */\ntag_202:\n  pop\n    /* \"#utility.yul\":9239:9241   */\n  0x20\n    /* \"#utility.yul\":9229:9237   */\n  dup4\n    /* \"#utility.yul\":9226:9242   */\n  lt\n    /* \"#utility.yul\":9220:9223   */\n  0x0133\n    /* \"#utility.yul\":9214:9218   */\n  dup4\n    /* \"#utility.yul\":9211:9224   */\n  lt\n    /* \"#utility.yul\":9207:9243   */\n  and\n    /* \"#utility.yul\":9189:9191   */\n  0x4e\n    /* \"#utility.yul\":9179:9187   */\n  dup5\n    /* \"#utility.yul\":9176:9192   */\n  lt\n    /* \"#utility.yul\":9171:9173   */\n  0x0b\n    /* \"#utility.yul\":9165:9169   */\n  dup5\n    /* \"#utility.yul\":9162:9174   */\n  lt\n    /* \"#utility.yul\":9158:9193   */\n  and\n    /* \"#utility.yul\":9142:9253   */\n  or\n    /* \"#utility.yul\":9139:9385   */\n  iszero\n  tag_209\n  jumpi\n    /* \"#utility.yul\":9295:9303   */\n  dup3\n    /* \"#utility.yul\":9289:9293   */\n  dup3\n    /* \"#utility.yul\":9285:9304   */\n  exp\n    /* \"#utility.yul\":9276:9304   */\n  swap1\n  pop\n    /* \"#utility.yul\":9330:9333   */\n  dup4\n    /* \"#utility.yul\":9323:9328   */\n  dup2\n    /* \"#utility.yul\":9320:9334   */\n  gt\n    /* \"#utility.yul\":9317:9357   */\n  iszero\n  tag_210\n  jumpi\n    /* \"#utility.yul\":9337:9355   */\n  tag_211\n  tag_96\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":9317:9357   */\ntag_210:\n    /* \"#utility.yul\":9370:9375   */\n  jump(tag_199)\n    /* \"#utility.yul\":9139:9385   */\ntag_209:\n    /* \"#utility.yul\":9410:9452   */\n  tag_212\n    /* \"#utility.yul\":9448:9451   */\n  dup5\n    /* \"#utility.yul\":9438:9446   */\n  dup5\n    /* \"#utility.yul\":9432:9436   */\n  dup5\n    /* \"#utility.yul\":9429:9430   */\n  0x01\n    /* \"#utility.yul\":9410:9452   */\n  tag_98\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":9395:9452   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":9484:9488   */\n  dup2\n    /* \"#utility.yul\":9479:9482   */\n  dup5\n    /* \"#utility.yul\":9475:9489   */\n  div\n    /* \"#utility.yul\":9468:9473   */\n  dup2\n    /* \"#utility.yul\":9465:9490   */\n  gt\n    /* \"#utility.yul\":9462:9513   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":9493:9511   */\n  tag_214\n  tag_96\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":9462:9513   */\ntag_213:\n    /* \"#utility.yul\":9542:9546   */\n  dup2\n    /* \"#utility.yul\":9535:9540   */\n  dup2\n    /* \"#utility.yul\":9531:9547   */\n  mul\n    /* \"#utility.yul\":9522:9547   */\n  swap1\n  pop\n    /* \"#utility.yul\":8480:9553   */\ntag_199:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9559:9645   */\ntag_100:\n    /* \"#utility.yul\":9594:9601   */\n  0x00\n    /* \"#utility.yul\":9634:9638   */\n  0xff\n    /* \"#utility.yul\":9627:9632   */\n  dup3\n    /* \"#utility.yul\":9623:9639   */\n  and\n    /* \"#utility.yul\":9612:9639   */\n  swap1\n  pop\n    /* \"#utility.yul\":9559:9645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9651:9932   */\ntag_20:\n    /* \"#utility.yul\":9709:9714   */\n  0x00\n    /* \"#utility.yul\":9733:9756   */\n  tag_217\n    /* \"#utility.yul\":9751:9755   */\n  dup3\n    /* \"#utility.yul\":9733:9756   */\n  tag_74\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":9725:9756   */\n  swap2\n  pop\n    /* \"#utility.yul\":9777:9802   */\n  tag_218\n    /* \"#utility.yul\":9793:9801   */\n  dup4\n    /* \"#utility.yul\":9777:9802   */\n  tag_100\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":9765:9802   */\n  swap3\n  pop\n    /* \"#utility.yul\":9821:9925   */\n  tag_219\n    /* \"#utility.yul\":9858:9924   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9848:9856   */\n  dup5\n    /* \"#utility.yul\":9842:9846   */\n  dup5\n    /* \"#utility.yul\":9821:9925   */\n  tag_99\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":9812:9925   */\n  swap1\n  pop\n    /* \"#utility.yul\":9651:9932   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9938:10348   */\ntag_22:\n    /* \"#utility.yul\":9978:9985   */\n  0x00\n    /* \"#utility.yul\":10001:10021   */\n  tag_221\n    /* \"#utility.yul\":10019:10020   */\n  dup3\n    /* \"#utility.yul\":10001:10021   */\n  tag_74\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":9996:10021   */\n  swap2\n  pop\n    /* \"#utility.yul\":10035:10055   */\n  tag_222\n    /* \"#utility.yul\":10053:10054   */\n  dup4\n    /* \"#utility.yul\":10035:10055   */\n  tag_74\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":10030:10055   */\n  swap3\n  pop\n    /* \"#utility.yul\":10090:10091   */\n  dup3\n    /* \"#utility.yul\":10087:10088   */\n  dup3\n    /* \"#utility.yul\":10083:10092   */\n  mul\n    /* \"#utility.yul\":10112:10142   */\n  tag_223\n    /* \"#utility.yul\":10130:10141   */\n  dup2\n    /* \"#utility.yul\":10112:10142   */\n  tag_74\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":10101:10142   */\n  swap2\n  pop\n    /* \"#utility.yul\":10291:10292   */\n  dup3\n    /* \"#utility.yul\":10282:10289   */\n  dup3\n    /* \"#utility.yul\":10278:10293   */\n  div\n    /* \"#utility.yul\":10275:10276   */\n  dup5\n    /* \"#utility.yul\":10272:10294   */\n  eq\n    /* \"#utility.yul\":10252:10253   */\n  dup4\n    /* \"#utility.yul\":10245:10254   */\n  iszero\n    /* \"#utility.yul\":10225:10308   */\n  or\n    /* \"#utility.yul\":10202:10341   */\n  tag_224\n  jumpi\n    /* \"#utility.yul\":10321:10339   */\n  tag_225\n  tag_96\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":10202:10341   */\ntag_224:\n    /* \"#utility.yul\":9986:10348   */\n  pop\n    /* \"#utility.yul\":9938:10348   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10354:10472   */\ntag_101:\n    /* \"#utility.yul\":10441:10465   */\n  tag_227\n    /* \"#utility.yul\":10459:10464   */\n  dup2\n    /* \"#utility.yul\":10441:10465   */\n  tag_71\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":10436:10439   */\n  dup3\n    /* \"#utility.yul\":10429:10466   */\n  mstore\n    /* \"#utility.yul\":10354:10472   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10478:10700   */\ntag_36:\n    /* \"#utility.yul\":10571:10575   */\n  0x00\n    /* \"#utility.yul\":10609:10611   */\n  0x20\n    /* \"#utility.yul\":10598:10607   */\n  dup3\n    /* \"#utility.yul\":10594:10612   */\n  add\n    /* \"#utility.yul\":10586:10612   */\n  swap1\n  pop\n    /* \"#utility.yul\":10622:10693   */\n  tag_229\n    /* \"#utility.yul\":10690:10691   */\n  0x00\n    /* \"#utility.yul\":10679:10688   */\n  dup4\n    /* \"#utility.yul\":10675:10692   */\n  add\n    /* \"#utility.yul\":10666:10672   */\n  dup5\n    /* \"#utility.yul\":10622:10693   */\n  tag_101\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":10478:10700   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10706:10897   */\ntag_57:\n    /* \"#utility.yul\":10746:10749   */\n  0x00\n    /* \"#utility.yul\":10765:10785   */\n  tag_231\n    /* \"#utility.yul\":10783:10784   */\n  dup3\n    /* \"#utility.yul\":10765:10785   */\n  tag_74\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":10760:10785   */\n  swap2\n  pop\n    /* \"#utility.yul\":10799:10819   */\n  tag_232\n    /* \"#utility.yul\":10817:10818   */\n  dup4\n    /* \"#utility.yul\":10799:10819   */\n  tag_74\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":10794:10819   */\n  swap3\n  pop\n    /* \"#utility.yul\":10842:10843   */\n  dup3\n    /* \"#utility.yul\":10839:10840   */\n  dup3\n    /* \"#utility.yul\":10835:10844   */\n  add\n    /* \"#utility.yul\":10828:10844   */\n  swap1\n  pop\n    /* \"#utility.yul\":10863:10866   */\n  dup1\n    /* \"#utility.yul\":10860:10861   */\n  dup3\n    /* \"#utility.yul\":10857:10867   */\n  gt\n    /* \"#utility.yul\":10854:10890   */\n  iszero\n  tag_233\n  jumpi\n    /* \"#utility.yul\":10870:10888   */\n  tag_234\n  tag_96\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":10854:10890   */\ntag_233:\n    /* \"#utility.yul\":10706:10897   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10903:11021   */\ntag_102:\n    /* \"#utility.yul\":10990:11014   */\n  tag_236\n    /* \"#utility.yul\":11008:11013   */\n  dup2\n    /* \"#utility.yul\":10990:11014   */\n  tag_74\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":10985:10988   */\n  dup3\n    /* \"#utility.yul\":10978:11015   */\n  mstore\n    /* \"#utility.yul\":10903:11021   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11027:11469   */\ntag_61:\n    /* \"#utility.yul\":11176:11180   */\n  0x00\n    /* \"#utility.yul\":11214:11216   */\n  0x60\n    /* \"#utility.yul\":11203:11212   */\n  dup3\n    /* \"#utility.yul\":11199:11217   */\n  add\n    /* \"#utility.yul\":11191:11217   */\n  swap1\n  pop\n    /* \"#utility.yul\":11227:11298   */\n  tag_238\n    /* \"#utility.yul\":11295:11296   */\n  0x00\n    /* \"#utility.yul\":11284:11293   */\n  dup4\n    /* \"#utility.yul\":11280:11297   */\n  add\n    /* \"#utility.yul\":11271:11277   */\n  dup7\n    /* \"#utility.yul\":11227:11298   */\n  tag_101\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":11308:11380   */\n  tag_239\n    /* \"#utility.yul\":11376:11378   */\n  0x20\n    /* \"#utility.yul\":11365:11374   */\n  dup4\n    /* \"#utility.yul\":11361:11379   */\n  add\n    /* \"#utility.yul\":11352:11358   */\n  dup6\n    /* \"#utility.yul\":11308:11380   */\n  tag_102\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":11390:11462   */\n  tag_240\n    /* \"#utility.yul\":11458:11460   */\n  0x40\n    /* \"#utility.yul\":11447:11456   */\n  dup4\n    /* \"#utility.yul\":11443:11461   */\n  add\n    /* \"#utility.yul\":11434:11440   */\n  dup5\n    /* \"#utility.yul\":11390:11462   */\n  tag_102\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":11027:11469   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11475:11697   */\ntag_65:\n    /* \"#utility.yul\":11568:11572   */\n  0x00\n    /* \"#utility.yul\":11606:11608   */\n  0x20\n    /* \"#utility.yul\":11595:11604   */\n  dup3\n    /* \"#utility.yul\":11591:11609   */\n  add\n    /* \"#utility.yul\":11583:11609   */\n  swap1\n  pop\n    /* \"#utility.yul\":11619:11690   */\n  tag_242\n    /* \"#utility.yul\":11687:11688   */\n  0x00\n    /* \"#utility.yul\":11676:11685   */\n  dup4\n    /* \"#utility.yul\":11672:11689   */\n  add\n    /* \"#utility.yul\":11663:11669   */\n  dup5\n    /* \"#utility.yul\":11619:11690   */\n  tag_102\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":11475:11697   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/BonDeFiToken.sol\":373:3782  contract BonDeFiToken is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {... */\ntag_24:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xc6fa869c00cca07fff5e26638bf9bc331de0994499fcf1ee63eb1a2437869a1b\")\n  0x00\n  assignImmutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/BonDeFiToken.sol\":373:3782  contract BonDeFiToken is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xacd17a99\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd59624b4\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xe091a39b\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf57d283e\n      eq\n      tag_37\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0xacd17a99\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xca19c11c\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xce4120da\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xced0550f\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x94d7cc88\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x94d7cc88\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x992642e5\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x8456cb59\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x86d71654\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x904835c4\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x42966c68\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x764b666c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x2f2ff15d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x18160ddd\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2a0acc6a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x10002dbd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":1207:1471  function buyBond(uint256 amountTokens) public{... */\n    tag_6:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":455:505  bytes32 public constant ADMIN = keccak256(\"ADMIN\") */\n    tag_10:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_11:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_12:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_13:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/BonDeFiToken.sol\":3711:3780  function unpause() public onlyRole(ADMIN) {... */\n    tag_14:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_15:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_16:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":663:691  address public interestToken */\n    tag_18:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_19:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      stop\n        /* \"contracts/BonDeFiToken.sol\":3640:3705  function pause() public onlyRole(ADMIN) {... */\n    tag_20:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      stop\n        /* \"contracts/BonDeFiToken.sol\":2983:3099  function showBondTokens() public view returns (uint256) {... */\n    tag_21:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":1681:2087  function distributeInterestAll(address[] memory tokenHolders, uint256[] memory amounts) public onlyRole(ADMIN) {... */\n    tag_22:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n    tag_118:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_23:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":1091:1201  function setInterestToken(address interestTokenAddr) public {... */\n    tag_24:\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_25:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":579:614  address public immutable stableCoin */\n    tag_26:\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_27:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":3235:3355  function showStableCoins() public view returns (uint256){... */\n    tag_29:\n      tag_142\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":2425:2949  function claimFaceValue(uint256 amountTokens) public{... */\n    tag_30:\n      tag_145\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n    tag_145:\n      stop\n        /* \"contracts/BonDeFiToken.sol\":3104:3230  function showInterestTokens() public view returns (uint256){... */\n    tag_31:\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":2093:2419  function claimInvestorFunds() public onlyRole(BOND_ISSUER){... */\n    tag_32:\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_33:\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_154:\n      tag_155\n      jump\t// in\n    tag_153:\n      stop\n        /* \"contracts/BonDeFiToken.sol\":620:657  uint256 public immutable maturityDate */\n    tag_34:\n      tag_156\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_35:\n      tag_159\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      tag_162\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":511:573  bytes32 public constant BOND_ISSUER = keccak256(\"BOND_ISSUER\") */\n    tag_36:\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      tag_166\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BonDeFiToken.sol\":1477:1675  function distributeInterest(address tokenHolder,uint256 amount) public onlyRole(ADMIN){... */\n    tag_37:\n      tag_167\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n    tag_167:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_171\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_172\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_171:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_176\n      jump\t// in\n    tag_177:\n      dup1\n      iszero\n      tag_178\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_179\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_178)\n    tag_179:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_180:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_180\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":1207:1471  function buyBond(uint256 amountTokens) public{... */\n    tag_63:\n        /* \"contracts/BonDeFiToken.sol\":1277:1287  stableCoin */\n      immutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n        /* \"contracts/BonDeFiToken.sol\":1270:1301  IERC20(stableCoin).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/BonDeFiToken.sol\":1302:1312  msg.sender */\n      caller\n        /* \"contracts/BonDeFiToken.sol\":1321:1325  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":1327:1339  amountTokens */\n      dup5\n        /* \"contracts/BonDeFiToken.sol\":1270:1340  IERC20(stableCoin).transferFrom(msg.sender,address(this),amountTokens) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"contracts/BonDeFiToken.sol\":1262:1371  require(IERC20(stableCoin).transferFrom(msg.sender,address(this),amountTokens),\"Stable coin transfer failed\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"contracts/BonDeFiToken.sol\":1395:1399  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":1389:1409  ERC20(this).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/BonDeFiToken.sol\":1410:1420  msg.sender */\n      caller\n        /* \"contracts/BonDeFiToken.sol\":1421:1433  amountTokens */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":1389:1434  ERC20(this).transfer(msg.sender,amountTokens) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_199\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_199:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_200\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_200:\n        /* \"contracts/BonDeFiToken.sol\":1381:1464  require(ERC20(this).transfer(msg.sender,amountTokens),\"Bond token transfer failed\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contracts/BonDeFiToken.sol\":1207:1471  function buyBond(uint256 amountTokens) public{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":455:505  bytes32 public constant ADMIN = keccak256(\"ADMIN\") */\n    tag_80:\n        /* \"contracts/BonDeFiToken.sol\":487:505  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"contracts/BonDeFiToken.sol\":455:505  bytes32 public constant ADMIN = keccak256(\"ADMIN\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_212\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_76\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_214\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_215\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_217\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_218\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_217:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_221\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_224\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_223:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":3711:3780  function unpause() public onlyRole(ADMIN) {... */\n    tag_94:\n        /* \"contracts/BonDeFiToken.sol\":487:505  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_226\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_215\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/BonDeFiToken.sol\":3763:3773  _unpause() */\n      tag_228\n        /* \"contracts/BonDeFiToken.sol\":3763:3771  _unpause */\n      tag_229\n        /* \"contracts/BonDeFiToken.sol\":3763:3773  _unpause() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/BonDeFiToken.sol\":3711:3780  function unpause() public onlyRole(ADMIN) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":663:691  address public interestToken */\n    tag_107:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":3640:3705  function pause() public onlyRole(ADMIN) {... */\n    tag_114:\n        /* \"contracts/BonDeFiToken.sol\":487:505  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_241\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_215\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_241:\n        /* \"contracts/BonDeFiToken.sol\":3690:3698  _pause() */\n      tag_243\n        /* \"contracts/BonDeFiToken.sol\":3690:3696  _pause */\n      tag_244\n        /* \"contracts/BonDeFiToken.sol\":3690:3698  _pause() */\n      jump\t// in\n    tag_243:\n        /* \"contracts/BonDeFiToken.sol\":3640:3705  function pause() public onlyRole(ADMIN) {... */\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":2983:3099  function showBondTokens() public view returns (uint256) {... */\n    tag_116:\n        /* \"contracts/BonDeFiToken.sol\":3030:3037  uint256 */\n      0x00\n        /* \"contracts/BonDeFiToken.sol\":3062:3066  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":3056:3077  ERC20(this).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BonDeFiToken.sol\":3086:3090  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":3056:3092  ERC20(this).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_246:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_248\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_249\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n        /* \"contracts/BonDeFiToken.sol\":3049:3092  return ERC20(this).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/BonDeFiToken.sol\":2983:3099  function showBondTokens() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":1681:2087  function distributeInterestAll(address[] memory tokenHolders, uint256[] memory amounts) public onlyRole(ADMIN) {... */\n    tag_121:\n        /* \"contracts/BonDeFiToken.sol\":487:505  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_252\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_215\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/BonDeFiToken.sol\":1833:1840  amounts */\n      dup2\n        /* \"contracts/BonDeFiToken.sol\":1833:1847  amounts.length */\n      mload\n        /* \"contracts/BonDeFiToken.sol\":1810:1822  tokenHolders */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":1810:1829  tokenHolders.length */\n      mload\n        /* \"contracts/BonDeFiToken.sol\":1810:1847  tokenHolders.length == amounts.length */\n      eq\n        /* \"contracts/BonDeFiToken.sol\":1802:1893  require(tokenHolders.length == amounts.length, \"Token holders and amounts length mismatch\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"contracts/BonDeFiToken.sol\":1908:1917  uint256 i */\n      0x00\n        /* \"contracts/BonDeFiToken.sol\":1903:2081  for (uint256 i = 0; i < tokenHolders.length; i++) {... */\n    tag_257:\n        /* \"contracts/BonDeFiToken.sol\":1927:1939  tokenHolders */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":1927:1946  tokenHolders.length */\n      mload\n        /* \"contracts/BonDeFiToken.sol\":1923:1924  i */\n      dup2\n        /* \"contracts/BonDeFiToken.sol\":1923:1946  i < tokenHolders.length */\n      lt\n        /* \"contracts/BonDeFiToken.sol\":1903:2081  for (uint256 i = 0; i < tokenHolders.length; i++) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/BonDeFiToken.sol\":1982:1995  interestToken */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BonDeFiToken.sol\":1975:2009  IERC20(interestToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/BonDeFiToken.sol\":2010:2020  msg.sender */\n      caller\n        /* \"contracts/BonDeFiToken.sol\":2022:2034  tokenHolders */\n      dup7\n        /* \"contracts/BonDeFiToken.sol\":2035:2036  i */\n      dup5\n        /* \"contracts/BonDeFiToken.sol\":2022:2037  tokenHolders[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_260\n      jumpi\n      tag_261\n      tag_262\n      jump\t// in\n    tag_261:\n    tag_260:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BonDeFiToken.sol\":2039:2046  amounts */\n      dup7\n        /* \"contracts/BonDeFiToken.sol\":2047:2048  i */\n      dup6\n        /* \"contracts/BonDeFiToken.sol\":2039:2049  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_263\n      jumpi\n      tag_264\n      tag_262\n      jump\t// in\n    tag_264:\n    tag_263:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/BonDeFiToken.sol\":1975:2050  IERC20(interestToken).transferFrom(msg.sender, tokenHolders[i], amounts[i]) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_265:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_267\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_268\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_268:\n        /* \"contracts/BonDeFiToken.sol\":1967:2070  require(IERC20(interestToken).transferFrom(msg.sender, tokenHolders[i], amounts[i]), \"Transfer failed\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_269:\n        /* \"contracts/BonDeFiToken.sol\":1948:1951  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/BonDeFiToken.sol\":1903:2081  for (uint256 i = 0; i < tokenHolders.length; i++) {... */\n      jump(tag_257)\n    tag_258:\n      pop\n        /* \"contracts/BonDeFiToken.sol\":1681:2087  function distributeInterestAll(address[] memory tokenHolders, uint256[] memory amounts) public onlyRole(ADMIN) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":1091:1201  function setInterestToken(address interestTokenAddr) public {... */\n    tag_128:\n        /* \"contracts/BonDeFiToken.sol\":1177:1194  interestTokenAddr */\n      dup1\n        /* \"contracts/BonDeFiToken.sol\":1161:1174  interestToken */\n      0x07\n      0x00\n        /* \"contracts/BonDeFiToken.sol\":1161:1194  interestToken = interestTokenAddr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BonDeFiToken.sol\":1091:1201  function setInterestToken(address interestTokenAddr) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_275\n      swap1\n      tag_176\n      jump\t// in\n    tag_275:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_276\n      swap1\n      tag_176\n      jump\t// in\n    tag_276:\n      dup1\n      iszero\n      tag_277\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_278\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_277)\n    tag_278:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_279:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_279\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_277:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":579:614  address public immutable stableCoin */\n    tag_133:\n      immutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":3235:3355  function showStableCoins() public view returns (uint256){... */\n    tag_143:\n        /* \"contracts/BonDeFiToken.sol\":3283:3290  uint256 */\n      0x00\n        /* \"contracts/BonDeFiToken.sol\":3315:3325  stableCoin */\n      immutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n        /* \"contracts/BonDeFiToken.sol\":3308:3336  IERC20(stableCoin).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BonDeFiToken.sol\":3337:3347  msg.sender */\n      caller\n        /* \"contracts/BonDeFiToken.sol\":3308:3348  IERC20(stableCoin).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_284:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_287\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_287:\n        /* \"contracts/BonDeFiToken.sol\":3301:3348  return IERC20(stableCoin).balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/BonDeFiToken.sol\":3235:3355  function showStableCoins() public view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":2425:2949  function claimFaceValue(uint256 amountTokens) public{... */\n    tag_147:\n        /* \"contracts/BonDeFiToken.sol\":2539:2551  maturityDate */\n      immutable(\"0xc6fa869c00cca07fff5e26638bf9bc331de0994499fcf1ee63eb1a2437869a1b\")\n        /* \"contracts/BonDeFiToken.sol\":2520:2535  block.timestamp */\n      timestamp\n        /* \"contracts/BonDeFiToken.sol\":2520:2551  block.timestamp >= maturityDate */\n      lt\n      iszero\n        /* \"contracts/BonDeFiToken.sol\":2512:2579  require(block.timestamp >= maturityDate,\"Maturity not yet reached\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap1\n      tag_291\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_289:\n        /* \"contracts/BonDeFiToken.sol\":2639:2640  0 */\n      0x00\n        /* \"contracts/BonDeFiToken.sol\":2624:2636  amountTokens */\n      dup2\n        /* \"contracts/BonDeFiToken.sol\":2624:2640  amountTokens > 0 */\n      gt\n        /* \"contracts/BonDeFiToken.sol\":2616:2666  require(amountTokens > 0,\"Can't claim zero coins\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_292:\n        /* \"contracts/BonDeFiToken.sol\":2690:2694  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":2684:2708  ERC20(this).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/BonDeFiToken.sol\":2709:2719  msg.sender */\n      caller\n        /* \"contracts/BonDeFiToken.sol\":2728:2732  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":2734:2746  amountTokens */\n      dup5\n        /* \"contracts/BonDeFiToken.sol\":2684:2747  ERC20(this).transferFrom(msg.sender,address(this),amountTokens) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_295:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_297\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_297:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_298\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_298:\n        /* \"contracts/BonDeFiToken.sol\":2676:2777  require(ERC20(this).transferFrom(msg.sender,address(this),amountTokens),\"Bond token transfer failed\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap1\n      tag_203\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_299:\n        /* \"contracts/BonDeFiToken.sol\":2802:2812  stableCoin */\n      immutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n        /* \"contracts/BonDeFiToken.sol\":2795:2822  IERC20(stableCoin).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/BonDeFiToken.sol\":2823:2833  msg.sender */\n      caller\n        /* \"contracts/BonDeFiToken.sol\":2834:2846  amountTokens */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":2795:2847  IERC20(stableCoin).transfer(msg.sender,amountTokens) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_301:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_303\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_303:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_304\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_304:\n        /* \"contracts/BonDeFiToken.sol\":2787:2878  require(IERC20(stableCoin).transfer(msg.sender,amountTokens),\"Stable coin transfer failed\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap1\n      tag_195\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_305:\n        /* \"contracts/BonDeFiToken.sol\":2909:2942  _burn(address(this),amountTokens) */\n      tag_307\n        /* \"contracts/BonDeFiToken.sol\":2923:2927  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":2929:2941  amountTokens */\n      dup3\n        /* \"contracts/BonDeFiToken.sol\":2909:2914  _burn */\n      tag_233\n        /* \"contracts/BonDeFiToken.sol\":2909:2942  _burn(address(this),amountTokens) */\n      jump\t// in\n    tag_307:\n        /* \"contracts/BonDeFiToken.sol\":2425:2949  function claimFaceValue(uint256 amountTokens) public{... */\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":3104:3230  function showInterestTokens() public view returns (uint256){... */\n    tag_149:\n        /* \"contracts/BonDeFiToken.sol\":3155:3162  uint256 */\n      0x00\n        /* \"contracts/BonDeFiToken.sol\":3187:3200  interestToken */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BonDeFiToken.sol\":3180:3211  IERC20(interestToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BonDeFiToken.sol\":3212:3222  msg.sender */\n      caller\n        /* \"contracts/BonDeFiToken.sol\":3180:3223  IERC20(interestToken).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_309:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_311\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_311:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_312\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_312:\n        /* \"contracts/BonDeFiToken.sol\":3173:3223  return IERC20(interestToken).balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/BonDeFiToken.sol\":3104:3230  function showInterestTokens() public view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":2093:2419  function claimInvestorFunds() public onlyRole(BOND_ISSUER){... */\n    tag_152:\n        /* \"contracts/BonDeFiToken.sol\":549:573  keccak256(\"BOND_ISSUER\") */\n      0xf877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_314\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_215\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_314:\n        /* \"contracts/BonDeFiToken.sol\":2161:2188  uint256 amountInvestorCoins */\n      0x00\n        /* \"contracts/BonDeFiToken.sol\":2198:2208  stableCoin */\n      immutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n        /* \"contracts/BonDeFiToken.sol\":2191:2219  IERC20(stableCoin).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/BonDeFiToken.sol\":2228:2232  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":2191:2234  IERC20(stableCoin).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_316\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_316:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_318\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_318:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_319\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_319:\n        /* \"contracts/BonDeFiToken.sol\":2161:2234  uint256 amountInvestorCoins = IERC20(stableCoin).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/BonDeFiToken.sol\":2274:2275  0 */\n      0x00\n        /* \"contracts/BonDeFiToken.sol\":2252:2271  amountInvestorCoins */\n      dup2\n        /* \"contracts/BonDeFiToken.sol\":2252:2275  amountInvestorCoins > 0 */\n      gt\n        /* \"contracts/BonDeFiToken.sol\":2244:2307  require(amountInvestorCoins > 0,\"No investor funds available.\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_320:\n        /* \"contracts/BonDeFiToken.sol\":2331:2335  this */\n      address\n        /* \"contracts/BonDeFiToken.sol\":2325:2345  ERC20(this).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/BonDeFiToken.sol\":2346:2356  msg.sender */\n      caller\n        /* \"contracts/BonDeFiToken.sol\":2357:2376  amountInvestorCoins */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":2325:2377  ERC20(this).transfer(msg.sender,amountInvestorCoins) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_323:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_325\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_325:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_326\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_326:\n        /* \"contracts/BonDeFiToken.sol\":2317:2412  require(ERC20(this).transfer(msg.sender,amountInvestorCoins),\"Failed to transfer stable coins\") */\n      tag_327\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap1\n      tag_329\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_327:\n        /* \"contracts/BonDeFiToken.sol\":2151:2419  {... */\n      pop\n        /* \"contracts/BonDeFiToken.sol\":2093:2419  function claimInvestorFunds() public onlyRole(BOND_ISSUER){... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_330\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_76\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_332\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_215\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_334\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_224\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_334:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":620:657  uint256 public immutable maturityDate */\n    tag_157:\n      immutable(\"0xc6fa869c00cca07fff5e26638bf9bc331de0994499fcf1ee63eb1a2437869a1b\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":511:573  bytes32 public constant BOND_ISSUER = keccak256(\"BOND_ISSUER\") */\n    tag_165:\n        /* \"contracts/BonDeFiToken.sol\":549:573  keccak256(\"BOND_ISSUER\") */\n      0xf877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7\n        /* \"contracts/BonDeFiToken.sol\":511:573  bytes32 public constant BOND_ISSUER = keccak256(\"BOND_ISSUER\") */\n      dup2\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":1477:1675  function distributeInterest(address tokenHolder,uint256 amount) public onlyRole(ADMIN){... */\n    tag_169:\n        /* \"contracts/BonDeFiToken.sol\":487:505  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_337\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_215\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_337:\n        /* \"contracts/BonDeFiToken.sol\":1588:1601  interestToken */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BonDeFiToken.sol\":1581:1615  IERC20(interestToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/BonDeFiToken.sol\":1616:1629  interestToken */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BonDeFiToken.sol\":1630:1641  tokenHolder */\n      dup6\n        /* \"contracts/BonDeFiToken.sol\":1642:1648  amount */\n      dup6\n        /* \"contracts/BonDeFiToken.sol\":1581:1649  IERC20(interestToken).transferFrom(interestToken,tokenHolder,amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_339\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_339:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_341\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_341:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_342\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_342:\n        /* \"contracts/BonDeFiToken.sol\":1573:1668  require(IERC20(interestToken).transferFrom(interestToken,tokenHolder,amount),\"Transfer failed\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap1\n      tag_271\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_343:\n        /* \"contracts/BonDeFiToken.sol\":1477:1675  function distributeInterest(address tokenHolder,uint256 amount) public onlyRole(ADMIN){... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_348\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_349\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_351\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_353\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_356\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_349\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_358\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_359\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_359:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_358:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_361\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_362\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_363\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_365\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_366\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_367\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_369\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_371\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_371:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_368)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_368:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_374\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_375\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_376\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_373)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_375:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_373:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_379\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_380\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2778:2783  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      tag_382\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2817  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      jump\t// in\n    tag_382:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_383\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_383:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_385\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_386\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_386:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_385:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_387\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_363\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_389\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_390\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_392\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2568  _msgSender */\n      tag_183\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      jump\t// in\n    tag_392:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      mload(0x40)\n      tag_393\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_393:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_395\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_396\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_397\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_398\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_398:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_397:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_399\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_400\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_400:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_399:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BonDeFiToken.sol\":3466:3631  function _update(address from, address to, uint256 value)... */\n    tag_363:\n        /* \"contracts/BonDeFiToken.sol\":3594:3624  super._update(from, to, value) */\n      tag_402\n        /* \"contracts/BonDeFiToken.sol\":3608:3612  from */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":3614:3616  to */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":3618:3623  value */\n      dup4\n        /* \"contracts/BonDeFiToken.sol\":3594:3607  super._update */\n      tag_403\n        /* \"contracts/BonDeFiToken.sol\":3594:3624  super._update(from, to, value) */\n      jump\t// in\n    tag_402:\n        /* \"contracts/BonDeFiToken.sol\":3466:3631  function _update(address from, address to, uint256 value)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_405\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_405:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_406\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_407\n      swap3\n      swap2\n      swap1\n      tag_408\n      jump\t// in\n    tag_407:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_406:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_380:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      tag_410\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2271  paused */\n      tag_99\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      jump\t// in\n    tag_410:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_411\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n    tag_411:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_390:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      tag_413\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n      tag_99\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      jump\t// in\n    tag_413:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_414\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_414:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n    tag_403:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_416\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_390\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_416:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n      tag_418\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1234:1238  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1240:1242  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1244:1249  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1233  super._update */\n      tag_419\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n      jump\t// in\n    tag_418:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_419:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_421\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_422\n      swap2\n      swap1\n      tag_423\n      jump\t// in\n    tag_422:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_424)\n    tag_421:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_425\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_426\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_426:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_425:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_424:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_427\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_428)\n    tag_427:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_428:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_429\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_429:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_430:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_431:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_432:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_433:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_434:\n        /* \"#utility.yul\":561:584   */\n      tag_496\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_433\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_497:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_435:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_499\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_434\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_47:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_502\n      tag_431\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":833:952   */\n    tag_501:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_503\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_435\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_436:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_437:\n        /* \"#utility.yul\":1268:1289   */\n      tag_506\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_436\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_50:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_508\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_437\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_438:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_439:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_440:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_441:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_442:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_514\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_438\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":2222:2293   */\n      tag_515\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_439\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_516\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_440\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":2392:2421   */\n      tag_517\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_441\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_54:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_519\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_442\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_443:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_444:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_522\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_443\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_445:\n        /* \"#utility.yul\":3060:3084   */\n      tag_524\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_444\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_525\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      dup1\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_525:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_446:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_527\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_445\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_447:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_448:\n        /* \"#utility.yul\":3416:3440   */\n      tag_530\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_447\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      dup1\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_531:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_449:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_533\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_448\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_57:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      dup1\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_536\n      tag_431\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":3709:3828   */\n    tag_535:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_537\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_446\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_538\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_449\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4425   */\n    tag_62:\n        /* \"#utility.yul\":4155:4161   */\n      0x00\n        /* \"#utility.yul\":4204:4206   */\n      0x20\n        /* \"#utility.yul\":4192:4201   */\n      dup3\n        /* \"#utility.yul\":4183:4190   */\n      dup5\n        /* \"#utility.yul\":4179:4202   */\n      sub\n        /* \"#utility.yul\":4175:4207   */\n      slt\n        /* \"#utility.yul\":4172:4291   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":4210:4289   */\n      tag_541\n      tag_431\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":4172:4291   */\n    tag_540:\n        /* \"#utility.yul\":4330:4331   */\n      0x00\n        /* \"#utility.yul\":4355:4408   */\n      tag_542\n        /* \"#utility.yul\":4400:4407   */\n      dup5\n        /* \"#utility.yul\":4391:4397   */\n      dup3\n        /* \"#utility.yul\":4380:4389   */\n      dup6\n        /* \"#utility.yul\":4376:4398   */\n      add\n        /* \"#utility.yul\":4355:4408   */\n      tag_449\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":4345:4408   */\n      swap2\n      pop\n        /* \"#utility.yul\":4301:4418   */\n      pop\n        /* \"#utility.yul\":4096:4425   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4431:4549   */\n    tag_450:\n        /* \"#utility.yul\":4518:4542   */\n      tag_544\n        /* \"#utility.yul\":4536:4541   */\n      dup2\n        /* \"#utility.yul\":4518:4542   */\n      tag_447\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":4513:4516   */\n      dup3\n        /* \"#utility.yul\":4506:4543   */\n      mstore\n        /* \"#utility.yul\":4431:4549   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:4777   */\n    tag_67:\n        /* \"#utility.yul\":4648:4652   */\n      0x00\n        /* \"#utility.yul\":4686:4688   */\n      0x20\n        /* \"#utility.yul\":4675:4684   */\n      dup3\n        /* \"#utility.yul\":4671:4689   */\n      add\n        /* \"#utility.yul\":4663:4689   */\n      swap1\n      pop\n        /* \"#utility.yul\":4699:4770   */\n      tag_546\n        /* \"#utility.yul\":4767:4768   */\n      0x00\n        /* \"#utility.yul\":4756:4765   */\n      dup4\n        /* \"#utility.yul\":4752:4769   */\n      add\n        /* \"#utility.yul\":4743:4749   */\n      dup5\n        /* \"#utility.yul\":4699:4770   */\n      tag_450\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":4555:4777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_70:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_549\n      tag_431\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":4893:5012   */\n    tag_548:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_550\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_446\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_551\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_446\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_552\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_449\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5485   */\n    tag_451:\n        /* \"#utility.yul\":5445:5452   */\n      0x00\n        /* \"#utility.yul\":5474:5479   */\n      dup2\n        /* \"#utility.yul\":5463:5479   */\n      swap1\n      pop\n        /* \"#utility.yul\":5408:5485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5491:5613   */\n    tag_452:\n        /* \"#utility.yul\":5564:5588   */\n      tag_555\n        /* \"#utility.yul\":5582:5587   */\n      dup2\n        /* \"#utility.yul\":5564:5588   */\n      tag_451\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":5557:5562   */\n      dup2\n        /* \"#utility.yul\":5554:5589   */\n      eq\n        /* \"#utility.yul\":5544:5607   */\n      tag_556\n      jumpi\n        /* \"#utility.yul\":5603:5604   */\n      0x00\n        /* \"#utility.yul\":5600:5601   */\n      dup1\n        /* \"#utility.yul\":5593:5605   */\n      revert\n        /* \"#utility.yul\":5544:5607   */\n    tag_556:\n        /* \"#utility.yul\":5491:5613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5619:5758   */\n    tag_453:\n        /* \"#utility.yul\":5665:5670   */\n      0x00\n        /* \"#utility.yul\":5703:5709   */\n      dup2\n        /* \"#utility.yul\":5690:5710   */\n      calldataload\n        /* \"#utility.yul\":5681:5710   */\n      swap1\n      pop\n        /* \"#utility.yul\":5719:5752   */\n      tag_558\n        /* \"#utility.yul\":5746:5751   */\n      dup2\n        /* \"#utility.yul\":5719:5752   */\n      tag_452\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":5619:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:6093   */\n    tag_75:\n        /* \"#utility.yul\":5823:5829   */\n      0x00\n        /* \"#utility.yul\":5872:5874   */\n      0x20\n        /* \"#utility.yul\":5860:5869   */\n      dup3\n        /* \"#utility.yul\":5851:5858   */\n      dup5\n        /* \"#utility.yul\":5847:5870   */\n      sub\n        /* \"#utility.yul\":5843:5875   */\n      slt\n        /* \"#utility.yul\":5840:5959   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":5878:5957   */\n      tag_561\n      tag_431\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":5840:5959   */\n    tag_560:\n        /* \"#utility.yul\":5998:5999   */\n      0x00\n        /* \"#utility.yul\":6023:6076   */\n      tag_562\n        /* \"#utility.yul\":6068:6075   */\n      dup5\n        /* \"#utility.yul\":6059:6065   */\n      dup3\n        /* \"#utility.yul\":6048:6057   */\n      dup6\n        /* \"#utility.yul\":6044:6066   */\n      add\n        /* \"#utility.yul\":6023:6076   */\n      tag_453\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":6013:6076   */\n      swap2\n      pop\n        /* \"#utility.yul\":5969:6086   */\n      pop\n        /* \"#utility.yul\":5764:6093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6099:6217   */\n    tag_454:\n        /* \"#utility.yul\":6186:6210   */\n      tag_564\n        /* \"#utility.yul\":6204:6209   */\n      dup2\n        /* \"#utility.yul\":6186:6210   */\n      tag_451\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":6181:6184   */\n      dup3\n        /* \"#utility.yul\":6174:6211   */\n      mstore\n        /* \"#utility.yul\":6099:6217   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6223:6445   */\n    tag_78:\n        /* \"#utility.yul\":6316:6320   */\n      0x00\n        /* \"#utility.yul\":6354:6356   */\n      0x20\n        /* \"#utility.yul\":6343:6352   */\n      dup3\n        /* \"#utility.yul\":6339:6357   */\n      add\n        /* \"#utility.yul\":6331:6357   */\n      swap1\n      pop\n        /* \"#utility.yul\":6367:6438   */\n      tag_566\n        /* \"#utility.yul\":6435:6436   */\n      0x00\n        /* \"#utility.yul\":6424:6433   */\n      dup4\n        /* \"#utility.yul\":6420:6437   */\n      add\n        /* \"#utility.yul\":6411:6417   */\n      dup5\n        /* \"#utility.yul\":6367:6438   */\n      tag_454\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":6223:6445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6451:6925   */\n    tag_84:\n        /* \"#utility.yul\":6519:6525   */\n      0x00\n        /* \"#utility.yul\":6527:6533   */\n      dup1\n        /* \"#utility.yul\":6576:6578   */\n      0x40\n        /* \"#utility.yul\":6564:6573   */\n      dup4\n        /* \"#utility.yul\":6555:6562   */\n      dup6\n        /* \"#utility.yul\":6551:6574   */\n      sub\n        /* \"#utility.yul\":6547:6579   */\n      slt\n        /* \"#utility.yul\":6544:6663   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":6582:6661   */\n      tag_569\n      tag_431\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":6544:6663   */\n    tag_568:\n        /* \"#utility.yul\":6702:6703   */\n      0x00\n        /* \"#utility.yul\":6727:6780   */\n      tag_570\n        /* \"#utility.yul\":6772:6779   */\n      dup6\n        /* \"#utility.yul\":6763:6769   */\n      dup3\n        /* \"#utility.yul\":6752:6761   */\n      dup7\n        /* \"#utility.yul\":6748:6770   */\n      add\n        /* \"#utility.yul\":6727:6780   */\n      tag_453\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":6717:6780   */\n      swap3\n      pop\n        /* \"#utility.yul\":6673:6790   */\n      pop\n        /* \"#utility.yul\":6829:6831   */\n      0x20\n        /* \"#utility.yul\":6855:6908   */\n      tag_571\n        /* \"#utility.yul\":6900:6907   */\n      dup6\n        /* \"#utility.yul\":6891:6897   */\n      dup3\n        /* \"#utility.yul\":6880:6889   */\n      dup7\n        /* \"#utility.yul\":6876:6898   */\n      add\n        /* \"#utility.yul\":6855:6908   */\n      tag_446\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":6845:6908   */\n      swap2\n      pop\n        /* \"#utility.yul\":6800:6918   */\n      pop\n        /* \"#utility.yul\":6451:6925   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6931:7017   */\n    tag_455:\n        /* \"#utility.yul\":6966:6973   */\n      0x00\n        /* \"#utility.yul\":7006:7010   */\n      0xff\n        /* \"#utility.yul\":6999:7004   */\n      dup3\n        /* \"#utility.yul\":6995:7011   */\n      and\n        /* \"#utility.yul\":6984:7011   */\n      swap1\n      pop\n        /* \"#utility.yul\":6931:7017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7023:7135   */\n    tag_456:\n        /* \"#utility.yul\":7106:7128   */\n      tag_574\n        /* \"#utility.yul\":7122:7127   */\n      dup2\n        /* \"#utility.yul\":7106:7128   */\n      tag_455\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":7101:7104   */\n      dup3\n        /* \"#utility.yul\":7094:7129   */\n      mstore\n        /* \"#utility.yul\":7023:7135   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7141:7355   */\n    tag_89:\n        /* \"#utility.yul\":7230:7234   */\n      0x00\n        /* \"#utility.yul\":7268:7270   */\n      0x20\n        /* \"#utility.yul\":7257:7266   */\n      dup3\n        /* \"#utility.yul\":7253:7271   */\n      add\n        /* \"#utility.yul\":7245:7271   */\n      swap1\n      pop\n        /* \"#utility.yul\":7281:7348   */\n      tag_576\n        /* \"#utility.yul\":7345:7346   */\n      0x00\n        /* \"#utility.yul\":7334:7343   */\n      dup4\n        /* \"#utility.yul\":7330:7347   */\n      add\n        /* \"#utility.yul\":7321:7327   */\n      dup5\n        /* \"#utility.yul\":7281:7348   */\n      tag_456\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":7141:7355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7690   */\n    tag_103:\n        /* \"#utility.yul\":7420:7426   */\n      0x00\n        /* \"#utility.yul\":7469:7471   */\n      0x20\n        /* \"#utility.yul\":7457:7466   */\n      dup3\n        /* \"#utility.yul\":7448:7455   */\n      dup5\n        /* \"#utility.yul\":7444:7467   */\n      sub\n        /* \"#utility.yul\":7440:7472   */\n      slt\n        /* \"#utility.yul\":7437:7556   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":7475:7554   */\n      tag_579\n      tag_431\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":7437:7556   */\n    tag_578:\n        /* \"#utility.yul\":7595:7596   */\n      0x00\n        /* \"#utility.yul\":7620:7673   */\n      tag_580\n        /* \"#utility.yul\":7665:7672   */\n      dup5\n        /* \"#utility.yul\":7656:7662   */\n      dup3\n        /* \"#utility.yul\":7645:7654   */\n      dup6\n        /* \"#utility.yul\":7641:7663   */\n      add\n        /* \"#utility.yul\":7620:7673   */\n      tag_446\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":7610:7673   */\n      swap2\n      pop\n        /* \"#utility.yul\":7566:7683   */\n      pop\n        /* \"#utility.yul\":7361:7690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7696:7814   */\n    tag_457:\n        /* \"#utility.yul\":7783:7807   */\n      tag_582\n        /* \"#utility.yul\":7801:7806   */\n      dup2\n        /* \"#utility.yul\":7783:7807   */\n      tag_444\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":7778:7781   */\n      dup3\n        /* \"#utility.yul\":7771:7808   */\n      mstore\n        /* \"#utility.yul\":7696:7814   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7820:8042   */\n    tag_109:\n        /* \"#utility.yul\":7913:7917   */\n      0x00\n        /* \"#utility.yul\":7951:7953   */\n      0x20\n        /* \"#utility.yul\":7940:7949   */\n      dup3\n        /* \"#utility.yul\":7936:7954   */\n      add\n        /* \"#utility.yul\":7928:7954   */\n      swap1\n      pop\n        /* \"#utility.yul\":7964:8035   */\n      tag_584\n        /* \"#utility.yul\":8032:8033   */\n      0x00\n        /* \"#utility.yul\":8021:8030   */\n      dup4\n        /* \"#utility.yul\":8017:8034   */\n      add\n        /* \"#utility.yul\":8008:8014   */\n      dup5\n        /* \"#utility.yul\":7964:8035   */\n      tag_457\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":7820:8042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8048:8165   */\n    tag_458:\n        /* \"#utility.yul\":8157:8158   */\n      0x00\n        /* \"#utility.yul\":8154:8155   */\n      dup1\n        /* \"#utility.yul\":8147:8159   */\n      revert\n        /* \"#utility.yul\":8171:8351   */\n    tag_459:\n        /* \"#utility.yul\":8219:8296   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8216:8217   */\n      0x00\n        /* \"#utility.yul\":8209:8297   */\n      mstore\n        /* \"#utility.yul\":8316:8320   */\n      0x41\n        /* \"#utility.yul\":8313:8314   */\n      0x04\n        /* \"#utility.yul\":8306:8321   */\n      mstore\n        /* \"#utility.yul\":8340:8344   */\n      0x24\n        /* \"#utility.yul\":8337:8338   */\n      0x00\n        /* \"#utility.yul\":8330:8345   */\n      revert\n        /* \"#utility.yul\":8357:8638   */\n    tag_460:\n        /* \"#utility.yul\":8440:8467   */\n      tag_588\n        /* \"#utility.yul\":8462:8466   */\n      dup3\n        /* \"#utility.yul\":8440:8467   */\n      tag_441\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":8432:8438   */\n      dup2\n        /* \"#utility.yul\":8428:8468   */\n      add\n        /* \"#utility.yul\":8570:8576   */\n      dup2\n        /* \"#utility.yul\":8558:8568   */\n      dup2\n        /* \"#utility.yul\":8555:8577   */\n      lt\n        /* \"#utility.yul\":8534:8552   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8522:8532   */\n      dup3\n        /* \"#utility.yul\":8519:8553   */\n      gt\n        /* \"#utility.yul\":8516:8578   */\n      or\n        /* \"#utility.yul\":8513:8601   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":8581:8599   */\n      tag_590\n      tag_459\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":8513:8601   */\n    tag_589:\n        /* \"#utility.yul\":8621:8631   */\n      dup1\n        /* \"#utility.yul\":8617:8619   */\n      0x40\n        /* \"#utility.yul\":8610:8632   */\n      mstore\n        /* \"#utility.yul\":8400:8638   */\n      pop\n        /* \"#utility.yul\":8357:8638   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8644:8773   */\n    tag_461:\n        /* \"#utility.yul\":8678:8684   */\n      0x00\n        /* \"#utility.yul\":8705:8725   */\n      tag_592\n      tag_430\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":8695:8725   */\n      swap1\n      pop\n        /* \"#utility.yul\":8734:8767   */\n      tag_593\n        /* \"#utility.yul\":8762:8766   */\n      dup3\n        /* \"#utility.yul\":8754:8760   */\n      dup3\n        /* \"#utility.yul\":8734:8767   */\n      tag_460\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":8644:8773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8779:9090   */\n    tag_462:\n        /* \"#utility.yul\":8856:8860   */\n      0x00\n        /* \"#utility.yul\":8946:8964   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8938:8944   */\n      dup3\n        /* \"#utility.yul\":8935:8965   */\n      gt\n        /* \"#utility.yul\":8932:8988   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":8968:8986   */\n      tag_596\n      tag_459\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":8932:8988   */\n    tag_595:\n        /* \"#utility.yul\":9018:9022   */\n      0x20\n        /* \"#utility.yul\":9010:9016   */\n      dup3\n        /* \"#utility.yul\":9006:9023   */\n      mul\n        /* \"#utility.yul\":8998:9023   */\n      swap1\n      pop\n        /* \"#utility.yul\":9078:9082   */\n      0x20\n        /* \"#utility.yul\":9072:9076   */\n      dup2\n        /* \"#utility.yul\":9068:9083   */\n      add\n        /* \"#utility.yul\":9060:9083   */\n      swap1\n      pop\n        /* \"#utility.yul\":8779:9090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9096:9213   */\n    tag_463:\n        /* \"#utility.yul\":9205:9206   */\n      0x00\n        /* \"#utility.yul\":9202:9203   */\n      dup1\n        /* \"#utility.yul\":9195:9207   */\n      revert\n        /* \"#utility.yul\":9236:9946   */\n    tag_464:\n        /* \"#utility.yul\":9332:9337   */\n      0x00\n        /* \"#utility.yul\":9357:9438   */\n      tag_599\n        /* \"#utility.yul\":9373:9437   */\n      tag_600\n        /* \"#utility.yul\":9430:9436   */\n      dup5\n        /* \"#utility.yul\":9373:9437   */\n      tag_462\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":9357:9438   */\n      tag_461\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":9348:9438   */\n      swap1\n      pop\n        /* \"#utility.yul\":9458:9463   */\n      dup1\n        /* \"#utility.yul\":9487:9493   */\n      dup4\n        /* \"#utility.yul\":9480:9485   */\n      dup3\n        /* \"#utility.yul\":9473:9494   */\n      mstore\n        /* \"#utility.yul\":9521:9525   */\n      0x20\n        /* \"#utility.yul\":9514:9519   */\n      dup3\n        /* \"#utility.yul\":9510:9526   */\n      add\n        /* \"#utility.yul\":9503:9526   */\n      swap1\n      pop\n        /* \"#utility.yul\":9574:9578   */\n      0x20\n        /* \"#utility.yul\":9566:9572   */\n      dup5\n        /* \"#utility.yul\":9562:9579   */\n      mul\n        /* \"#utility.yul\":9554:9560   */\n      dup4\n        /* \"#utility.yul\":9550:9580   */\n      add\n        /* \"#utility.yul\":9603:9606   */\n      dup6\n        /* \"#utility.yul\":9595:9601   */\n      dup2\n        /* \"#utility.yul\":9592:9607   */\n      gt\n        /* \"#utility.yul\":9589:9711   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":9622:9701   */\n      tag_602\n      tag_463\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":9589:9711   */\n    tag_601:\n        /* \"#utility.yul\":9737:9743   */\n      dup4\n        /* \"#utility.yul\":9720:9940   */\n    tag_603:\n        /* \"#utility.yul\":9754:9760   */\n      dup2\n        /* \"#utility.yul\":9749:9752   */\n      dup2\n        /* \"#utility.yul\":9746:9761   */\n      lt\n        /* \"#utility.yul\":9720:9940   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":9829:9832   */\n      dup1\n        /* \"#utility.yul\":9858:9895   */\n      tag_606\n        /* \"#utility.yul\":9891:9894   */\n      dup9\n        /* \"#utility.yul\":9879:9889   */\n      dup3\n        /* \"#utility.yul\":9858:9895   */\n      tag_446\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":9853:9856   */\n      dup5\n        /* \"#utility.yul\":9846:9896   */\n      mstore\n        /* \"#utility.yul\":9925:9929   */\n      0x20\n        /* \"#utility.yul\":9920:9923   */\n      dup5\n        /* \"#utility.yul\":9916:9930   */\n      add\n        /* \"#utility.yul\":9909:9930   */\n      swap4\n      pop\n        /* \"#utility.yul\":9796:9940   */\n      pop\n        /* \"#utility.yul\":9780:9784   */\n      0x20\n        /* \"#utility.yul\":9775:9778   */\n      dup2\n        /* \"#utility.yul\":9771:9785   */\n      add\n        /* \"#utility.yul\":9764:9785   */\n      swap1\n      pop\n        /* \"#utility.yul\":9720:9940   */\n      jump(tag_603)\n    tag_605:\n        /* \"#utility.yul\":9724:9745   */\n      pop\n        /* \"#utility.yul\":9338:9946   */\n      pop\n      pop\n        /* \"#utility.yul\":9236:9946   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9969:10339   */\n    tag_465:\n        /* \"#utility.yul\":10040:10045   */\n      0x00\n        /* \"#utility.yul\":10089:10092   */\n      dup3\n        /* \"#utility.yul\":10082:10086   */\n      0x1f\n        /* \"#utility.yul\":10074:10080   */\n      dup4\n        /* \"#utility.yul\":10070:10087   */\n      add\n        /* \"#utility.yul\":10066:10093   */\n      slt\n        /* \"#utility.yul\":10056:10178   */\n      tag_608\n      jumpi\n        /* \"#utility.yul\":10097:10176   */\n      tag_609\n      tag_458\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":10056:10178   */\n    tag_608:\n        /* \"#utility.yul\":10214:10220   */\n      dup2\n        /* \"#utility.yul\":10201:10221   */\n      calldataload\n        /* \"#utility.yul\":10239:10333   */\n      tag_610\n        /* \"#utility.yul\":10329:10332   */\n      dup5\n        /* \"#utility.yul\":10321:10327   */\n      dup3\n        /* \"#utility.yul\":10314:10318   */\n      0x20\n        /* \"#utility.yul\":10306:10312   */\n      dup7\n        /* \"#utility.yul\":10302:10319   */\n      add\n        /* \"#utility.yul\":10239:10333   */\n      tag_464\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":10230:10333   */\n      swap2\n      pop\n        /* \"#utility.yul\":10046:10339   */\n      pop\n        /* \"#utility.yul\":9969:10339   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10345:10656   */\n    tag_466:\n        /* \"#utility.yul\":10422:10426   */\n      0x00\n        /* \"#utility.yul\":10512:10530   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10504:10510   */\n      dup3\n        /* \"#utility.yul\":10501:10531   */\n      gt\n        /* \"#utility.yul\":10498:10554   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":10534:10552   */\n      tag_613\n      tag_459\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":10498:10554   */\n    tag_612:\n        /* \"#utility.yul\":10584:10588   */\n      0x20\n        /* \"#utility.yul\":10576:10582   */\n      dup3\n        /* \"#utility.yul\":10572:10589   */\n      mul\n        /* \"#utility.yul\":10564:10589   */\n      swap1\n      pop\n        /* \"#utility.yul\":10644:10648   */\n      0x20\n        /* \"#utility.yul\":10638:10642   */\n      dup2\n        /* \"#utility.yul\":10634:10649   */\n      add\n        /* \"#utility.yul\":10626:10649   */\n      swap1\n      pop\n        /* \"#utility.yul\":10345:10656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10679:11389   */\n    tag_467:\n        /* \"#utility.yul\":10775:10780   */\n      0x00\n        /* \"#utility.yul\":10800:10881   */\n      tag_615\n        /* \"#utility.yul\":10816:10880   */\n      tag_616\n        /* \"#utility.yul\":10873:10879   */\n      dup5\n        /* \"#utility.yul\":10816:10880   */\n      tag_466\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":10800:10881   */\n      tag_461\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":10791:10881   */\n      swap1\n      pop\n        /* \"#utility.yul\":10901:10906   */\n      dup1\n        /* \"#utility.yul\":10930:10936   */\n      dup4\n        /* \"#utility.yul\":10923:10928   */\n      dup3\n        /* \"#utility.yul\":10916:10937   */\n      mstore\n        /* \"#utility.yul\":10964:10968   */\n      0x20\n        /* \"#utility.yul\":10957:10962   */\n      dup3\n        /* \"#utility.yul\":10953:10969   */\n      add\n        /* \"#utility.yul\":10946:10969   */\n      swap1\n      pop\n        /* \"#utility.yul\":11017:11021   */\n      0x20\n        /* \"#utility.yul\":11009:11015   */\n      dup5\n        /* \"#utility.yul\":11005:11022   */\n      mul\n        /* \"#utility.yul\":10997:11003   */\n      dup4\n        /* \"#utility.yul\":10993:11023   */\n      add\n        /* \"#utility.yul\":11046:11049   */\n      dup6\n        /* \"#utility.yul\":11038:11044   */\n      dup2\n        /* \"#utility.yul\":11035:11050   */\n      gt\n        /* \"#utility.yul\":11032:11154   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":11065:11144   */\n      tag_618\n      tag_463\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":11032:11154   */\n    tag_617:\n        /* \"#utility.yul\":11180:11186   */\n      dup4\n        /* \"#utility.yul\":11163:11383   */\n    tag_619:\n        /* \"#utility.yul\":11197:11203   */\n      dup2\n        /* \"#utility.yul\":11192:11195   */\n      dup2\n        /* \"#utility.yul\":11189:11204   */\n      lt\n        /* \"#utility.yul\":11163:11383   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":11272:11275   */\n      dup1\n        /* \"#utility.yul\":11301:11338   */\n      tag_622\n        /* \"#utility.yul\":11334:11337   */\n      dup9\n        /* \"#utility.yul\":11322:11332   */\n      dup3\n        /* \"#utility.yul\":11301:11338   */\n      tag_449\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":11296:11299   */\n      dup5\n        /* \"#utility.yul\":11289:11339   */\n      mstore\n        /* \"#utility.yul\":11368:11372   */\n      0x20\n        /* \"#utility.yul\":11363:11366   */\n      dup5\n        /* \"#utility.yul\":11359:11373   */\n      add\n        /* \"#utility.yul\":11352:11373   */\n      swap4\n      pop\n        /* \"#utility.yul\":11239:11383   */\n      pop\n        /* \"#utility.yul\":11223:11227   */\n      0x20\n        /* \"#utility.yul\":11218:11221   */\n      dup2\n        /* \"#utility.yul\":11214:11228   */\n      add\n        /* \"#utility.yul\":11207:11228   */\n      swap1\n      pop\n        /* \"#utility.yul\":11163:11383   */\n      jump(tag_619)\n    tag_621:\n        /* \"#utility.yul\":11167:11188   */\n      pop\n        /* \"#utility.yul\":10781:11389   */\n      pop\n      pop\n        /* \"#utility.yul\":10679:11389   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11412:11782   */\n    tag_468:\n        /* \"#utility.yul\":11483:11488   */\n      0x00\n        /* \"#utility.yul\":11532:11535   */\n      dup3\n        /* \"#utility.yul\":11525:11529   */\n      0x1f\n        /* \"#utility.yul\":11517:11523   */\n      dup4\n        /* \"#utility.yul\":11513:11530   */\n      add\n        /* \"#utility.yul\":11509:11536   */\n      slt\n        /* \"#utility.yul\":11499:11621   */\n      tag_624\n      jumpi\n        /* \"#utility.yul\":11540:11619   */\n      tag_625\n      tag_458\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":11499:11621   */\n    tag_624:\n        /* \"#utility.yul\":11657:11663   */\n      dup2\n        /* \"#utility.yul\":11644:11664   */\n      calldataload\n        /* \"#utility.yul\":11682:11776   */\n      tag_626\n        /* \"#utility.yul\":11772:11775   */\n      dup5\n        /* \"#utility.yul\":11764:11770   */\n      dup3\n        /* \"#utility.yul\":11757:11761   */\n      0x20\n        /* \"#utility.yul\":11749:11755   */\n      dup7\n        /* \"#utility.yul\":11745:11762   */\n      add\n        /* \"#utility.yul\":11682:11776   */\n      tag_467\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":11673:11776   */\n      swap2\n      pop\n        /* \"#utility.yul\":11489:11782   */\n      pop\n        /* \"#utility.yul\":11412:11782   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11788:12682   */\n    tag_120:\n        /* \"#utility.yul\":11906:11912   */\n      0x00\n        /* \"#utility.yul\":11914:11920   */\n      dup1\n        /* \"#utility.yul\":11963:11965   */\n      0x40\n        /* \"#utility.yul\":11951:11960   */\n      dup4\n        /* \"#utility.yul\":11942:11949   */\n      dup6\n        /* \"#utility.yul\":11938:11961   */\n      sub\n        /* \"#utility.yul\":11934:11966   */\n      slt\n        /* \"#utility.yul\":11931:12050   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":11969:12048   */\n      tag_629\n      tag_431\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":11931:12050   */\n    tag_628:\n        /* \"#utility.yul\":12117:12118   */\n      0x00\n        /* \"#utility.yul\":12106:12115   */\n      dup4\n        /* \"#utility.yul\":12102:12119   */\n      add\n        /* \"#utility.yul\":12089:12120   */\n      calldataload\n        /* \"#utility.yul\":12147:12165   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12139:12145   */\n      dup2\n        /* \"#utility.yul\":12136:12166   */\n      gt\n        /* \"#utility.yul\":12133:12250   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":12169:12248   */\n      tag_631\n      tag_432\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":12133:12250   */\n    tag_630:\n        /* \"#utility.yul\":12274:12352   */\n      tag_632\n        /* \"#utility.yul\":12344:12351   */\n      dup6\n        /* \"#utility.yul\":12335:12341   */\n      dup3\n        /* \"#utility.yul\":12324:12333   */\n      dup7\n        /* \"#utility.yul\":12320:12342   */\n      add\n        /* \"#utility.yul\":12274:12352   */\n      tag_465\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":12264:12352   */\n      swap3\n      pop\n        /* \"#utility.yul\":12060:12362   */\n      pop\n        /* \"#utility.yul\":12429:12431   */\n      0x20\n        /* \"#utility.yul\":12418:12427   */\n      dup4\n        /* \"#utility.yul\":12414:12432   */\n      add\n        /* \"#utility.yul\":12401:12433   */\n      calldataload\n        /* \"#utility.yul\":12460:12478   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12452:12458   */\n      dup2\n        /* \"#utility.yul\":12449:12479   */\n      gt\n        /* \"#utility.yul\":12446:12563   */\n      iszero\n      tag_633\n      jumpi\n        /* \"#utility.yul\":12482:12561   */\n      tag_634\n      tag_432\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":12446:12563   */\n    tag_633:\n        /* \"#utility.yul\":12587:12665   */\n      tag_635\n        /* \"#utility.yul\":12657:12664   */\n      dup6\n        /* \"#utility.yul\":12648:12654   */\n      dup3\n        /* \"#utility.yul\":12637:12646   */\n      dup7\n        /* \"#utility.yul\":12633:12655   */\n      add\n        /* \"#utility.yul\":12587:12665   */\n      tag_468\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":12577:12665   */\n      swap2\n      pop\n        /* \"#utility.yul\":12372:12675   */\n      pop\n        /* \"#utility.yul\":11788:12682   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12688:13162   */\n    tag_161:\n        /* \"#utility.yul\":12756:12762   */\n      0x00\n        /* \"#utility.yul\":12764:12770   */\n      dup1\n        /* \"#utility.yul\":12813:12815   */\n      0x40\n        /* \"#utility.yul\":12801:12810   */\n      dup4\n        /* \"#utility.yul\":12792:12799   */\n      dup6\n        /* \"#utility.yul\":12788:12811   */\n      sub\n        /* \"#utility.yul\":12784:12816   */\n      slt\n        /* \"#utility.yul\":12781:12900   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":12819:12898   */\n      tag_638\n      tag_431\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":12781:12900   */\n    tag_637:\n        /* \"#utility.yul\":12939:12940   */\n      0x00\n        /* \"#utility.yul\":12964:13017   */\n      tag_639\n        /* \"#utility.yul\":13009:13016   */\n      dup6\n        /* \"#utility.yul\":13000:13006   */\n      dup3\n        /* \"#utility.yul\":12989:12998   */\n      dup7\n        /* \"#utility.yul\":12985:13007   */\n      add\n        /* \"#utility.yul\":12964:13017   */\n      tag_446\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":12954:13017   */\n      swap3\n      pop\n        /* \"#utility.yul\":12910:13027   */\n      pop\n        /* \"#utility.yul\":13066:13068   */\n      0x20\n        /* \"#utility.yul\":13092:13145   */\n      tag_640\n        /* \"#utility.yul\":13137:13144   */\n      dup6\n        /* \"#utility.yul\":13128:13134   */\n      dup3\n        /* \"#utility.yul\":13117:13126   */\n      dup7\n        /* \"#utility.yul\":13113:13135   */\n      add\n        /* \"#utility.yul\":13092:13145   */\n      tag_446\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":13082:13145   */\n      swap2\n      pop\n        /* \"#utility.yul\":13037:13155   */\n      pop\n        /* \"#utility.yul\":12688:13162   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13168:13348   */\n    tag_469:\n        /* \"#utility.yul\":13216:13293   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13213:13214   */\n      0x00\n        /* \"#utility.yul\":13206:13294   */\n      mstore\n        /* \"#utility.yul\":13313:13317   */\n      0x22\n        /* \"#utility.yul\":13310:13311   */\n      0x04\n        /* \"#utility.yul\":13303:13318   */\n      mstore\n        /* \"#utility.yul\":13337:13341   */\n      0x24\n        /* \"#utility.yul\":13334:13335   */\n      0x00\n        /* \"#utility.yul\":13327:13342   */\n      revert\n        /* \"#utility.yul\":13354:13674   */\n    tag_176:\n        /* \"#utility.yul\":13398:13404   */\n      0x00\n        /* \"#utility.yul\":13435:13436   */\n      0x02\n        /* \"#utility.yul\":13429:13433   */\n      dup3\n        /* \"#utility.yul\":13425:13437   */\n      div\n        /* \"#utility.yul\":13415:13437   */\n      swap1\n      pop\n        /* \"#utility.yul\":13482:13483   */\n      0x01\n        /* \"#utility.yul\":13476:13480   */\n      dup3\n        /* \"#utility.yul\":13472:13484   */\n      and\n        /* \"#utility.yul\":13503:13521   */\n      dup1\n        /* \"#utility.yul\":13493:13574   */\n      tag_643\n      jumpi\n        /* \"#utility.yul\":13559:13563   */\n      0x7f\n        /* \"#utility.yul\":13551:13557   */\n      dup3\n        /* \"#utility.yul\":13547:13564   */\n      and\n        /* \"#utility.yul\":13537:13564   */\n      swap2\n      pop\n        /* \"#utility.yul\":13493:13574   */\n    tag_643:\n        /* \"#utility.yul\":13621:13623   */\n      0x20\n        /* \"#utility.yul\":13613:13619   */\n      dup3\n        /* \"#utility.yul\":13610:13624   */\n      lt\n        /* \"#utility.yul\":13590:13608   */\n      dup2\n        /* \"#utility.yul\":13587:13625   */\n      sub\n        /* \"#utility.yul\":13584:13668   */\n      tag_644\n      jumpi\n        /* \"#utility.yul\":13640:13658   */\n      tag_645\n      tag_469\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":13584:13668   */\n    tag_644:\n        /* \"#utility.yul\":13405:13674   */\n      pop\n        /* \"#utility.yul\":13354:13674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13680:14122   */\n    tag_188:\n        /* \"#utility.yul\":13829:13833   */\n      0x00\n        /* \"#utility.yul\":13867:13869   */\n      0x60\n        /* \"#utility.yul\":13856:13865   */\n      dup3\n        /* \"#utility.yul\":13852:13870   */\n      add\n        /* \"#utility.yul\":13844:13870   */\n      swap1\n      pop\n        /* \"#utility.yul\":13880:13951   */\n      tag_647\n        /* \"#utility.yul\":13948:13949   */\n      0x00\n        /* \"#utility.yul\":13937:13946   */\n      dup4\n        /* \"#utility.yul\":13933:13950   */\n      add\n        /* \"#utility.yul\":13924:13930   */\n      dup7\n        /* \"#utility.yul\":13880:13951   */\n      tag_457\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":13961:14033   */\n      tag_648\n        /* \"#utility.yul\":14029:14031   */\n      0x20\n        /* \"#utility.yul\":14018:14027   */\n      dup4\n        /* \"#utility.yul\":14014:14032   */\n      add\n        /* \"#utility.yul\":14005:14011   */\n      dup6\n        /* \"#utility.yul\":13961:14033   */\n      tag_457\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":14043:14115   */\n      tag_649\n        /* \"#utility.yul\":14111:14113   */\n      0x40\n        /* \"#utility.yul\":14100:14109   */\n      dup4\n        /* \"#utility.yul\":14096:14114   */\n      add\n        /* \"#utility.yul\":14087:14093   */\n      dup5\n        /* \"#utility.yul\":14043:14115   */\n      tag_450\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":13680:14122   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14128:14244   */\n    tag_470:\n        /* \"#utility.yul\":14198:14219   */\n      tag_651\n        /* \"#utility.yul\":14213:14218   */\n      dup2\n        /* \"#utility.yul\":14198:14219   */\n      tag_436\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":14191:14196   */\n      dup2\n        /* \"#utility.yul\":14188:14220   */\n      eq\n        /* \"#utility.yul\":14178:14238   */\n      tag_652\n      jumpi\n        /* \"#utility.yul\":14234:14235   */\n      0x00\n        /* \"#utility.yul\":14231:14232   */\n      dup1\n        /* \"#utility.yul\":14224:14236   */\n      revert\n        /* \"#utility.yul\":14178:14238   */\n    tag_652:\n        /* \"#utility.yul\":14128:14244   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14250:14387   */\n    tag_471:\n        /* \"#utility.yul\":14304:14309   */\n      0x00\n        /* \"#utility.yul\":14335:14341   */\n      dup2\n        /* \"#utility.yul\":14329:14342   */\n      mload\n        /* \"#utility.yul\":14320:14342   */\n      swap1\n      pop\n        /* \"#utility.yul\":14351:14381   */\n      tag_654\n        /* \"#utility.yul\":14375:14380   */\n      dup2\n        /* \"#utility.yul\":14351:14381   */\n      tag_470\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":14250:14387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14393:14738   */\n    tag_192:\n        /* \"#utility.yul\":14460:14466   */\n      0x00\n        /* \"#utility.yul\":14509:14511   */\n      0x20\n        /* \"#utility.yul\":14497:14506   */\n      dup3\n        /* \"#utility.yul\":14488:14495   */\n      dup5\n        /* \"#utility.yul\":14484:14507   */\n      sub\n        /* \"#utility.yul\":14480:14512   */\n      slt\n        /* \"#utility.yul\":14477:14596   */\n      iszero\n      tag_656\n      jumpi\n        /* \"#utility.yul\":14515:14594   */\n      tag_657\n      tag_431\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":14477:14596   */\n    tag_656:\n        /* \"#utility.yul\":14635:14636   */\n      0x00\n        /* \"#utility.yul\":14660:14721   */\n      tag_658\n        /* \"#utility.yul\":14713:14720   */\n      dup5\n        /* \"#utility.yul\":14704:14710   */\n      dup3\n        /* \"#utility.yul\":14693:14702   */\n      dup6\n        /* \"#utility.yul\":14689:14711   */\n      add\n        /* \"#utility.yul\":14660:14721   */\n      tag_471\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":14650:14721   */\n      swap2\n      pop\n        /* \"#utility.yul\":14606:14731   */\n      pop\n        /* \"#utility.yul\":14393:14738   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14744:14921   */\n    tag_472:\n        /* \"#utility.yul\":14884:14913   */\n      0x537461626c6520636f696e207472616e73666572206661696c65640000000000\n        /* \"#utility.yul\":14880:14881   */\n      0x00\n        /* \"#utility.yul\":14872:14878   */\n      dup3\n        /* \"#utility.yul\":14868:14882   */\n      add\n        /* \"#utility.yul\":14861:14914   */\n      mstore\n        /* \"#utility.yul\":14744:14921   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14927:15293   */\n    tag_473:\n        /* \"#utility.yul\":15069:15072   */\n      0x00\n        /* \"#utility.yul\":15090:15157   */\n      tag_661\n        /* \"#utility.yul\":15154:15156   */\n      0x1b\n        /* \"#utility.yul\":15149:15152   */\n      dup4\n        /* \"#utility.yul\":15090:15157   */\n      tag_439\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":15083:15157   */\n      swap2\n      pop\n        /* \"#utility.yul\":15166:15259   */\n      tag_662\n        /* \"#utility.yul\":15255:15258   */\n      dup3\n        /* \"#utility.yul\":15166:15259   */\n      tag_472\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":15284:15286   */\n      0x20\n        /* \"#utility.yul\":15279:15282   */\n      dup3\n        /* \"#utility.yul\":15275:15287   */\n      add\n        /* \"#utility.yul\":15268:15287   */\n      swap1\n      pop\n        /* \"#utility.yul\":14927:15293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15299:15718   */\n    tag_195:\n        /* \"#utility.yul\":15465:15469   */\n      0x00\n        /* \"#utility.yul\":15503:15505   */\n      0x20\n        /* \"#utility.yul\":15492:15501   */\n      dup3\n        /* \"#utility.yul\":15488:15506   */\n      add\n        /* \"#utility.yul\":15480:15506   */\n      swap1\n      pop\n        /* \"#utility.yul\":15552:15561   */\n      dup2\n        /* \"#utility.yul\":15546:15550   */\n      dup2\n        /* \"#utility.yul\":15542:15562   */\n      sub\n        /* \"#utility.yul\":15538:15539   */\n      0x00\n        /* \"#utility.yul\":15527:15536   */\n      dup4\n        /* \"#utility.yul\":15523:15540   */\n      add\n        /* \"#utility.yul\":15516:15563   */\n      mstore\n        /* \"#utility.yul\":15580:15711   */\n      tag_664\n        /* \"#utility.yul\":15706:15710   */\n      dup2\n        /* \"#utility.yul\":15580:15711   */\n      tag_473\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":15572:15711   */\n      swap1\n      pop\n        /* \"#utility.yul\":15299:15718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15724:16056   */\n    tag_197:\n        /* \"#utility.yul\":15845:15849   */\n      0x00\n        /* \"#utility.yul\":15883:15885   */\n      0x40\n        /* \"#utility.yul\":15872:15881   */\n      dup3\n        /* \"#utility.yul\":15868:15886   */\n      add\n        /* \"#utility.yul\":15860:15886   */\n      swap1\n      pop\n        /* \"#utility.yul\":15896:15967   */\n      tag_666\n        /* \"#utility.yul\":15964:15965   */\n      0x00\n        /* \"#utility.yul\":15953:15962   */\n      dup4\n        /* \"#utility.yul\":15949:15966   */\n      add\n        /* \"#utility.yul\":15940:15946   */\n      dup6\n        /* \"#utility.yul\":15896:15967   */\n      tag_457\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":15977:16049   */\n      tag_667\n        /* \"#utility.yul\":16045:16047   */\n      0x20\n        /* \"#utility.yul\":16034:16043   */\n      dup4\n        /* \"#utility.yul\":16030:16048   */\n      add\n        /* \"#utility.yul\":16021:16027   */\n      dup5\n        /* \"#utility.yul\":15977:16049   */\n      tag_450\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":15724:16056   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16062:16238   */\n    tag_474:\n        /* \"#utility.yul\":16202:16230   */\n      0x426f6e6420746f6b656e207472616e73666572206661696c6564000000000000\n        /* \"#utility.yul\":16198:16199   */\n      0x00\n        /* \"#utility.yul\":16190:16196   */\n      dup3\n        /* \"#utility.yul\":16186:16200   */\n      add\n        /* \"#utility.yul\":16179:16231   */\n      mstore\n        /* \"#utility.yul\":16062:16238   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16244:16610   */\n    tag_475:\n        /* \"#utility.yul\":16386:16389   */\n      0x00\n        /* \"#utility.yul\":16407:16474   */\n      tag_670\n        /* \"#utility.yul\":16471:16473   */\n      0x1a\n        /* \"#utility.yul\":16466:16469   */\n      dup4\n        /* \"#utility.yul\":16407:16474   */\n      tag_439\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":16400:16474   */\n      swap2\n      pop\n        /* \"#utility.yul\":16483:16576   */\n      tag_671\n        /* \"#utility.yul\":16572:16575   */\n      dup3\n        /* \"#utility.yul\":16483:16576   */\n      tag_474\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":16601:16603   */\n      0x20\n        /* \"#utility.yul\":16596:16599   */\n      dup3\n        /* \"#utility.yul\":16592:16604   */\n      add\n        /* \"#utility.yul\":16585:16604   */\n      swap1\n      pop\n        /* \"#utility.yul\":16244:16610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16616:17035   */\n    tag_203:\n        /* \"#utility.yul\":16782:16786   */\n      0x00\n        /* \"#utility.yul\":16820:16822   */\n      0x20\n        /* \"#utility.yul\":16809:16818   */\n      dup3\n        /* \"#utility.yul\":16805:16823   */\n      add\n        /* \"#utility.yul\":16797:16823   */\n      swap1\n      pop\n        /* \"#utility.yul\":16869:16878   */\n      dup2\n        /* \"#utility.yul\":16863:16867   */\n      dup2\n        /* \"#utility.yul\":16859:16879   */\n      sub\n        /* \"#utility.yul\":16855:16856   */\n      0x00\n        /* \"#utility.yul\":16844:16853   */\n      dup4\n        /* \"#utility.yul\":16840:16857   */\n      add\n        /* \"#utility.yul\":16833:16880   */\n      mstore\n        /* \"#utility.yul\":16897:17028   */\n      tag_673\n        /* \"#utility.yul\":17023:17027   */\n      dup2\n        /* \"#utility.yul\":16897:17028   */\n      tag_475\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":16889:17028   */\n      swap1\n      pop\n        /* \"#utility.yul\":16616:17035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17041:17184   */\n    tag_476:\n        /* \"#utility.yul\":17098:17103   */\n      0x00\n        /* \"#utility.yul\":17129:17135   */\n      dup2\n        /* \"#utility.yul\":17123:17136   */\n      mload\n        /* \"#utility.yul\":17114:17136   */\n      swap1\n      pop\n        /* \"#utility.yul\":17145:17178   */\n      tag_675\n        /* \"#utility.yul\":17172:17177   */\n      dup2\n        /* \"#utility.yul\":17145:17178   */\n      tag_448\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":17041:17184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17190:17541   */\n    tag_250:\n        /* \"#utility.yul\":17260:17266   */\n      0x00\n        /* \"#utility.yul\":17309:17311   */\n      0x20\n        /* \"#utility.yul\":17297:17306   */\n      dup3\n        /* \"#utility.yul\":17288:17295   */\n      dup5\n        /* \"#utility.yul\":17284:17307   */\n      sub\n        /* \"#utility.yul\":17280:17312   */\n      slt\n        /* \"#utility.yul\":17277:17396   */\n      iszero\n      tag_677\n      jumpi\n        /* \"#utility.yul\":17315:17394   */\n      tag_678\n      tag_431\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":17277:17396   */\n    tag_677:\n        /* \"#utility.yul\":17435:17436   */\n      0x00\n        /* \"#utility.yul\":17460:17524   */\n      tag_679\n        /* \"#utility.yul\":17516:17523   */\n      dup5\n        /* \"#utility.yul\":17507:17513   */\n      dup3\n        /* \"#utility.yul\":17496:17505   */\n      dup6\n        /* \"#utility.yul\":17492:17514   */\n      add\n        /* \"#utility.yul\":17460:17524   */\n      tag_476\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":17450:17524   */\n      swap2\n      pop\n        /* \"#utility.yul\":17406:17534   */\n      pop\n        /* \"#utility.yul\":17190:17541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17547:17775   */\n    tag_477:\n        /* \"#utility.yul\":17687:17721   */\n      0x546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e677468\n        /* \"#utility.yul\":17683:17684   */\n      0x00\n        /* \"#utility.yul\":17675:17681   */\n      dup3\n        /* \"#utility.yul\":17671:17685   */\n      add\n        /* \"#utility.yul\":17664:17722   */\n      mstore\n        /* \"#utility.yul\":17756:17767   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17751:17753   */\n      0x20\n        /* \"#utility.yul\":17743:17749   */\n      dup3\n        /* \"#utility.yul\":17739:17754   */\n      add\n        /* \"#utility.yul\":17732:17768   */\n      mstore\n        /* \"#utility.yul\":17547:17775   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17781:18147   */\n    tag_478:\n        /* \"#utility.yul\":17923:17926   */\n      0x00\n        /* \"#utility.yul\":17944:18011   */\n      tag_682\n        /* \"#utility.yul\":18008:18010   */\n      0x29\n        /* \"#utility.yul\":18003:18006   */\n      dup4\n        /* \"#utility.yul\":17944:18011   */\n      tag_439\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":17937:18011   */\n      swap2\n      pop\n        /* \"#utility.yul\":18020:18113   */\n      tag_683\n        /* \"#utility.yul\":18109:18112   */\n      dup3\n        /* \"#utility.yul\":18020:18113   */\n      tag_477\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":18138:18140   */\n      0x40\n        /* \"#utility.yul\":18133:18136   */\n      dup3\n        /* \"#utility.yul\":18129:18141   */\n      add\n        /* \"#utility.yul\":18122:18141   */\n      swap1\n      pop\n        /* \"#utility.yul\":17781:18147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18153:18572   */\n    tag_256:\n        /* \"#utility.yul\":18319:18323   */\n      0x00\n        /* \"#utility.yul\":18357:18359   */\n      0x20\n        /* \"#utility.yul\":18346:18355   */\n      dup3\n        /* \"#utility.yul\":18342:18360   */\n      add\n        /* \"#utility.yul\":18334:18360   */\n      swap1\n      pop\n        /* \"#utility.yul\":18406:18415   */\n      dup2\n        /* \"#utility.yul\":18400:18404   */\n      dup2\n        /* \"#utility.yul\":18396:18416   */\n      sub\n        /* \"#utility.yul\":18392:18393   */\n      0x00\n        /* \"#utility.yul\":18381:18390   */\n      dup4\n        /* \"#utility.yul\":18377:18394   */\n      add\n        /* \"#utility.yul\":18370:18417   */\n      mstore\n        /* \"#utility.yul\":18434:18565   */\n      tag_685\n        /* \"#utility.yul\":18560:18564   */\n      dup2\n        /* \"#utility.yul\":18434:18565   */\n      tag_478\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":18426:18565   */\n      swap1\n      pop\n        /* \"#utility.yul\":18153:18572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18578:18758   */\n    tag_262:\n        /* \"#utility.yul\":18626:18703   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18623:18624   */\n      0x00\n        /* \"#utility.yul\":18616:18704   */\n      mstore\n        /* \"#utility.yul\":18723:18727   */\n      0x32\n        /* \"#utility.yul\":18720:18721   */\n      0x04\n        /* \"#utility.yul\":18713:18728   */\n      mstore\n        /* \"#utility.yul\":18747:18751   */\n      0x24\n        /* \"#utility.yul\":18744:18745   */\n      0x00\n        /* \"#utility.yul\":18737:18752   */\n      revert\n        /* \"#utility.yul\":18764:18929   */\n    tag_479:\n        /* \"#utility.yul\":18904:18921   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":18900:18901   */\n      0x00\n        /* \"#utility.yul\":18892:18898   */\n      dup3\n        /* \"#utility.yul\":18888:18902   */\n      add\n        /* \"#utility.yul\":18881:18922   */\n      mstore\n        /* \"#utility.yul\":18764:18929   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18935:19301   */\n    tag_480:\n        /* \"#utility.yul\":19077:19080   */\n      0x00\n        /* \"#utility.yul\":19098:19165   */\n      tag_689\n        /* \"#utility.yul\":19162:19164   */\n      0x0f\n        /* \"#utility.yul\":19157:19160   */\n      dup4\n        /* \"#utility.yul\":19098:19165   */\n      tag_439\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":19091:19165   */\n      swap2\n      pop\n        /* \"#utility.yul\":19174:19267   */\n      tag_690\n        /* \"#utility.yul\":19263:19266   */\n      dup3\n        /* \"#utility.yul\":19174:19267   */\n      tag_479\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":19292:19294   */\n      0x20\n        /* \"#utility.yul\":19287:19290   */\n      dup3\n        /* \"#utility.yul\":19283:19295   */\n      add\n        /* \"#utility.yul\":19276:19295   */\n      swap1\n      pop\n        /* \"#utility.yul\":18935:19301   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19307:19726   */\n    tag_271:\n        /* \"#utility.yul\":19473:19477   */\n      0x00\n        /* \"#utility.yul\":19511:19513   */\n      0x20\n        /* \"#utility.yul\":19500:19509   */\n      dup3\n        /* \"#utility.yul\":19496:19514   */\n      add\n        /* \"#utility.yul\":19488:19514   */\n      swap1\n      pop\n        /* \"#utility.yul\":19560:19569   */\n      dup2\n        /* \"#utility.yul\":19554:19558   */\n      dup2\n        /* \"#utility.yul\":19550:19570   */\n      sub\n        /* \"#utility.yul\":19546:19547   */\n      0x00\n        /* \"#utility.yul\":19535:19544   */\n      dup4\n        /* \"#utility.yul\":19531:19548   */\n      add\n        /* \"#utility.yul\":19524:19571   */\n      mstore\n        /* \"#utility.yul\":19588:19719   */\n      tag_692\n        /* \"#utility.yul\":19714:19718   */\n      dup2\n        /* \"#utility.yul\":19588:19719   */\n      tag_480\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":19580:19719   */\n      swap1\n      pop\n        /* \"#utility.yul\":19307:19726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19732:19906   */\n    tag_481:\n        /* \"#utility.yul\":19872:19898   */\n      0x4d61747572697479206e6f742079657420726561636865640000000000000000\n        /* \"#utility.yul\":19868:19869   */\n      0x00\n        /* \"#utility.yul\":19860:19866   */\n      dup3\n        /* \"#utility.yul\":19856:19870   */\n      add\n        /* \"#utility.yul\":19849:19899   */\n      mstore\n        /* \"#utility.yul\":19732:19906   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19912:20278   */\n    tag_482:\n        /* \"#utility.yul\":20054:20057   */\n      0x00\n        /* \"#utility.yul\":20075:20142   */\n      tag_695\n        /* \"#utility.yul\":20139:20141   */\n      0x18\n        /* \"#utility.yul\":20134:20137   */\n      dup4\n        /* \"#utility.yul\":20075:20142   */\n      tag_439\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":20068:20142   */\n      swap2\n      pop\n        /* \"#utility.yul\":20151:20244   */\n      tag_696\n        /* \"#utility.yul\":20240:20243   */\n      dup3\n        /* \"#utility.yul\":20151:20244   */\n      tag_481\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":20269:20271   */\n      0x20\n        /* \"#utility.yul\":20264:20267   */\n      dup3\n        /* \"#utility.yul\":20260:20272   */\n      add\n        /* \"#utility.yul\":20253:20272   */\n      swap1\n      pop\n        /* \"#utility.yul\":19912:20278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20284:20703   */\n    tag_291:\n        /* \"#utility.yul\":20450:20454   */\n      0x00\n        /* \"#utility.yul\":20488:20490   */\n      0x20\n        /* \"#utility.yul\":20477:20486   */\n      dup3\n        /* \"#utility.yul\":20473:20491   */\n      add\n        /* \"#utility.yul\":20465:20491   */\n      swap1\n      pop\n        /* \"#utility.yul\":20537:20546   */\n      dup2\n        /* \"#utility.yul\":20531:20535   */\n      dup2\n        /* \"#utility.yul\":20527:20547   */\n      sub\n        /* \"#utility.yul\":20523:20524   */\n      0x00\n        /* \"#utility.yul\":20512:20521   */\n      dup4\n        /* \"#utility.yul\":20508:20525   */\n      add\n        /* \"#utility.yul\":20501:20548   */\n      mstore\n        /* \"#utility.yul\":20565:20696   */\n      tag_698\n        /* \"#utility.yul\":20691:20695   */\n      dup2\n        /* \"#utility.yul\":20565:20696   */\n      tag_482\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":20557:20696   */\n      swap1\n      pop\n        /* \"#utility.yul\":20284:20703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20709:20881   */\n    tag_483:\n        /* \"#utility.yul\":20849:20873   */\n      0x43616e277420636c61696d207a65726f20636f696e7300000000000000000000\n        /* \"#utility.yul\":20845:20846   */\n      0x00\n        /* \"#utility.yul\":20837:20843   */\n      dup3\n        /* \"#utility.yul\":20833:20847   */\n      add\n        /* \"#utility.yul\":20826:20874   */\n      mstore\n        /* \"#utility.yul\":20709:20881   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20887:21253   */\n    tag_484:\n        /* \"#utility.yul\":21029:21032   */\n      0x00\n        /* \"#utility.yul\":21050:21117   */\n      tag_701\n        /* \"#utility.yul\":21114:21116   */\n      0x16\n        /* \"#utility.yul\":21109:21112   */\n      dup4\n        /* \"#utility.yul\":21050:21117   */\n      tag_439\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":21043:21117   */\n      swap2\n      pop\n        /* \"#utility.yul\":21126:21219   */\n      tag_702\n        /* \"#utility.yul\":21215:21218   */\n      dup3\n        /* \"#utility.yul\":21126:21219   */\n      tag_483\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":21244:21246   */\n      0x20\n        /* \"#utility.yul\":21239:21242   */\n      dup3\n        /* \"#utility.yul\":21235:21247   */\n      add\n        /* \"#utility.yul\":21228:21247   */\n      swap1\n      pop\n        /* \"#utility.yul\":20887:21253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21259:21678   */\n    tag_294:\n        /* \"#utility.yul\":21425:21429   */\n      0x00\n        /* \"#utility.yul\":21463:21465   */\n      0x20\n        /* \"#utility.yul\":21452:21461   */\n      dup3\n        /* \"#utility.yul\":21448:21466   */\n      add\n        /* \"#utility.yul\":21440:21466   */\n      swap1\n      pop\n        /* \"#utility.yul\":21512:21521   */\n      dup2\n        /* \"#utility.yul\":21506:21510   */\n      dup2\n        /* \"#utility.yul\":21502:21522   */\n      sub\n        /* \"#utility.yul\":21498:21499   */\n      0x00\n        /* \"#utility.yul\":21487:21496   */\n      dup4\n        /* \"#utility.yul\":21483:21500   */\n      add\n        /* \"#utility.yul\":21476:21523   */\n      mstore\n        /* \"#utility.yul\":21540:21671   */\n      tag_704\n        /* \"#utility.yul\":21666:21670   */\n      dup2\n        /* \"#utility.yul\":21540:21671   */\n      tag_484\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":21532:21671   */\n      swap1\n      pop\n        /* \"#utility.yul\":21259:21678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21684:21862   */\n    tag_485:\n        /* \"#utility.yul\":21824:21854   */\n      0x4e6f20696e766573746f722066756e647320617661696c61626c652e00000000\n        /* \"#utility.yul\":21820:21821   */\n      0x00\n        /* \"#utility.yul\":21812:21818   */\n      dup3\n        /* \"#utility.yul\":21808:21822   */\n      add\n        /* \"#utility.yul\":21801:21855   */\n      mstore\n        /* \"#utility.yul\":21684:21862   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21868:22234   */\n    tag_486:\n        /* \"#utility.yul\":22010:22013   */\n      0x00\n        /* \"#utility.yul\":22031:22098   */\n      tag_707\n        /* \"#utility.yul\":22095:22097   */\n      0x1c\n        /* \"#utility.yul\":22090:22093   */\n      dup4\n        /* \"#utility.yul\":22031:22098   */\n      tag_439\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":22024:22098   */\n      swap2\n      pop\n        /* \"#utility.yul\":22107:22200   */\n      tag_708\n        /* \"#utility.yul\":22196:22199   */\n      dup3\n        /* \"#utility.yul\":22107:22200   */\n      tag_485\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":22225:22227   */\n      0x20\n        /* \"#utility.yul\":22220:22223   */\n      dup3\n        /* \"#utility.yul\":22216:22228   */\n      add\n        /* \"#utility.yul\":22209:22228   */\n      swap1\n      pop\n        /* \"#utility.yul\":21868:22234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22240:22659   */\n    tag_322:\n        /* \"#utility.yul\":22406:22410   */\n      0x00\n        /* \"#utility.yul\":22444:22446   */\n      0x20\n        /* \"#utility.yul\":22433:22442   */\n      dup3\n        /* \"#utility.yul\":22429:22447   */\n      add\n        /* \"#utility.yul\":22421:22447   */\n      swap1\n      pop\n        /* \"#utility.yul\":22493:22502   */\n      dup2\n        /* \"#utility.yul\":22487:22491   */\n      dup2\n        /* \"#utility.yul\":22483:22503   */\n      sub\n        /* \"#utility.yul\":22479:22480   */\n      0x00\n        /* \"#utility.yul\":22468:22477   */\n      dup4\n        /* \"#utility.yul\":22464:22481   */\n      add\n        /* \"#utility.yul\":22457:22504   */\n      mstore\n        /* \"#utility.yul\":22521:22652   */\n      tag_710\n        /* \"#utility.yul\":22647:22651   */\n      dup2\n        /* \"#utility.yul\":22521:22652   */\n      tag_486\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":22513:22652   */\n      swap1\n      pop\n        /* \"#utility.yul\":22240:22659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22665:22846   */\n    tag_487:\n        /* \"#utility.yul\":22805:22838   */\n      0x4661696c656420746f207472616e7366657220737461626c6520636f696e7300\n        /* \"#utility.yul\":22801:22802   */\n      0x00\n        /* \"#utility.yul\":22793:22799   */\n      dup3\n        /* \"#utility.yul\":22789:22803   */\n      add\n        /* \"#utility.yul\":22782:22839   */\n      mstore\n        /* \"#utility.yul\":22665:22846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22852:23218   */\n    tag_488:\n        /* \"#utility.yul\":22994:22997   */\n      0x00\n        /* \"#utility.yul\":23015:23082   */\n      tag_713\n        /* \"#utility.yul\":23079:23081   */\n      0x1f\n        /* \"#utility.yul\":23074:23077   */\n      dup4\n        /* \"#utility.yul\":23015:23082   */\n      tag_439\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":23008:23082   */\n      swap2\n      pop\n        /* \"#utility.yul\":23091:23184   */\n      tag_714\n        /* \"#utility.yul\":23180:23183   */\n      dup3\n        /* \"#utility.yul\":23091:23184   */\n      tag_487\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":23209:23211   */\n      0x20\n        /* \"#utility.yul\":23204:23207   */\n      dup3\n        /* \"#utility.yul\":23200:23212   */\n      add\n        /* \"#utility.yul\":23193:23212   */\n      swap1\n      pop\n        /* \"#utility.yul\":22852:23218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23224:23643   */\n    tag_329:\n        /* \"#utility.yul\":23390:23394   */\n      0x00\n        /* \"#utility.yul\":23428:23430   */\n      0x20\n        /* \"#utility.yul\":23417:23426   */\n      dup3\n        /* \"#utility.yul\":23413:23431   */\n      add\n        /* \"#utility.yul\":23405:23431   */\n      swap1\n      pop\n        /* \"#utility.yul\":23477:23486   */\n      dup2\n        /* \"#utility.yul\":23471:23475   */\n      dup2\n        /* \"#utility.yul\":23467:23487   */\n      sub\n        /* \"#utility.yul\":23463:23464   */\n      0x00\n        /* \"#utility.yul\":23452:23461   */\n      dup4\n        /* \"#utility.yul\":23448:23465   */\n      add\n        /* \"#utility.yul\":23441:23488   */\n      mstore\n        /* \"#utility.yul\":23505:23636   */\n      tag_716\n        /* \"#utility.yul\":23631:23635   */\n      dup2\n        /* \"#utility.yul\":23505:23636   */\n      tag_488\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":23497:23636   */\n      swap1\n      pop\n        /* \"#utility.yul\":23224:23643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23649:24091   */\n    tag_355:\n        /* \"#utility.yul\":23798:23802   */\n      0x00\n        /* \"#utility.yul\":23836:23838   */\n      0x60\n        /* \"#utility.yul\":23825:23834   */\n      dup3\n        /* \"#utility.yul\":23821:23839   */\n      add\n        /* \"#utility.yul\":23813:23839   */\n      swap1\n      pop\n        /* \"#utility.yul\":23849:23920   */\n      tag_718\n        /* \"#utility.yul\":23917:23918   */\n      0x00\n        /* \"#utility.yul\":23906:23915   */\n      dup4\n        /* \"#utility.yul\":23902:23919   */\n      add\n        /* \"#utility.yul\":23893:23899   */\n      dup7\n        /* \"#utility.yul\":23849:23920   */\n      tag_457\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":23930:24002   */\n      tag_719\n        /* \"#utility.yul\":23998:24000   */\n      0x20\n        /* \"#utility.yul\":23987:23996   */\n      dup4\n        /* \"#utility.yul\":23983:24001   */\n      add\n        /* \"#utility.yul\":23974:23980   */\n      dup6\n        /* \"#utility.yul\":23930:24002   */\n      tag_450\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":24012:24084   */\n      tag_720\n        /* \"#utility.yul\":24080:24082   */\n      0x40\n        /* \"#utility.yul\":24069:24078   */\n      dup4\n        /* \"#utility.yul\":24065:24083   */\n      add\n        /* \"#utility.yul\":24056:24062   */\n      dup5\n        /* \"#utility.yul\":24012:24084   */\n      tag_450\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":23649:24091   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24097:24429   */\n    tag_408:\n        /* \"#utility.yul\":24218:24222   */\n      0x00\n        /* \"#utility.yul\":24256:24258   */\n      0x40\n        /* \"#utility.yul\":24245:24254   */\n      dup3\n        /* \"#utility.yul\":24241:24259   */\n      add\n        /* \"#utility.yul\":24233:24259   */\n      swap1\n      pop\n        /* \"#utility.yul\":24269:24340   */\n      tag_722\n        /* \"#utility.yul\":24337:24338   */\n      0x00\n        /* \"#utility.yul\":24326:24335   */\n      dup4\n        /* \"#utility.yul\":24322:24339   */\n      add\n        /* \"#utility.yul\":24313:24319   */\n      dup6\n        /* \"#utility.yul\":24269:24340   */\n      tag_457\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":24350:24422   */\n      tag_723\n        /* \"#utility.yul\":24418:24420   */\n      0x20\n        /* \"#utility.yul\":24407:24416   */\n      dup4\n        /* \"#utility.yul\":24403:24421   */\n      add\n        /* \"#utility.yul\":24394:24400   */\n      dup5\n        /* \"#utility.yul\":24350:24422   */\n      tag_454\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":24097:24429   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24435:24615   */\n    tag_489:\n        /* \"#utility.yul\":24483:24560   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24480:24481   */\n      0x00\n        /* \"#utility.yul\":24473:24561   */\n      mstore\n        /* \"#utility.yul\":24580:24584   */\n      0x11\n        /* \"#utility.yul\":24577:24578   */\n      0x04\n        /* \"#utility.yul\":24570:24585   */\n      mstore\n        /* \"#utility.yul\":24604:24608   */\n      0x24\n        /* \"#utility.yul\":24601:24602   */\n      0x00\n        /* \"#utility.yul\":24594:24609   */\n      revert\n        /* \"#utility.yul\":24621:24812   */\n    tag_423:\n        /* \"#utility.yul\":24661:24664   */\n      0x00\n        /* \"#utility.yul\":24680:24700   */\n      tag_726\n        /* \"#utility.yul\":24698:24699   */\n      dup3\n        /* \"#utility.yul\":24680:24700   */\n      tag_447\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":24675:24700   */\n      swap2\n      pop\n        /* \"#utility.yul\":24714:24734   */\n      tag_727\n        /* \"#utility.yul\":24732:24733   */\n      dup4\n        /* \"#utility.yul\":24714:24734   */\n      tag_447\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":24709:24734   */\n      swap3\n      pop\n        /* \"#utility.yul\":24757:24758   */\n      dup3\n        /* \"#utility.yul\":24754:24755   */\n      dup3\n        /* \"#utility.yul\":24750:24759   */\n      add\n        /* \"#utility.yul\":24743:24759   */\n      swap1\n      pop\n        /* \"#utility.yul\":24778:24781   */\n      dup1\n        /* \"#utility.yul\":24775:24776   */\n      dup3\n        /* \"#utility.yul\":24772:24782   */\n      gt\n        /* \"#utility.yul\":24769:24805   */\n      iszero\n      tag_728\n      jumpi\n        /* \"#utility.yul\":24785:24803   */\n      tag_729\n      tag_489\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":24769:24805   */\n    tag_728:\n        /* \"#utility.yul\":24621:24812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200f7e65f7206b52c18eac87858610629e4d35d9ae5049cb7aacf3b4819923f75564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1278": {
									"entryPoint": null,
									"id": 1278,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1474": {
									"entryPoint": null,
									"id": 1474,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 436,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_870": {
									"entryPoint": 690,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1226": {
									"entryPoint": 923,
									"id": 1226,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_requireNotPaused_1315": {
									"entryPoint": 988,
									"id": 1315,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1187": {
									"entryPoint": 952,
									"id": 1187,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1753": {
									"entryPoint": 930,
									"id": 1753,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 1059,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_594": {
									"entryPoint": 682,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 823,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@paused_1303": {
									"entryPoint": 1596,
									"id": 1303,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 1762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3254,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2706,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2788,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2305,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2649,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1617,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11700:13",
										"nodeType": "YulBlock",
										"src": "0:11700:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "890:32:13",
													"nodeType": "YulBlock",
													"src": "890:32:13",
													"statements": [
														{
															"nativeSrc": "900:16:13",
															"nodeType": "YulAssignment",
															"src": "900:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:13",
																"nodeType": "YulIdentifier",
																"src": "911:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:13",
														"nodeType": "YulTypedName",
														"src": "872:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:13",
														"nodeType": "YulTypedName",
														"src": "882:7:13",
														"type": ""
													}
												],
												"src": "845:77:13"
											},
											{
												"body": {
													"nativeSrc": "971:79:13",
													"nodeType": "YulBlock",
													"src": "971:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:13",
																"nodeType": "YulBlock",
																"src": "1028:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:13"
																			},
																			"nativeSrc": "1030:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:13"
																		},
																		"nativeSrc": "1030:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:13"
																				},
																				"nativeSrc": "1001:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:13"
																		},
																		"nativeSrc": "991:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:13"
																},
																"nativeSrc": "984:43:13",
																"nodeType": "YulFunctionCall",
																"src": "984:43:13"
															},
															"nativeSrc": "981:63:13",
															"nodeType": "YulIf",
															"src": "981:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:13",
														"nodeType": "YulTypedName",
														"src": "964:5:13",
														"type": ""
													}
												],
												"src": "928:122:13"
											},
											{
												"body": {
													"nativeSrc": "1119:80:13",
													"nodeType": "YulBlock",
													"src": "1119:80:13",
													"statements": [
														{
															"nativeSrc": "1129:22:13",
															"nodeType": "YulAssignment",
															"src": "1129:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:13"
																},
																"nativeSrc": "1138:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:13"
																},
																"nativeSrc": "1160:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:13"
															},
															"nativeSrc": "1160:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:13",
														"nodeType": "YulTypedName",
														"src": "1097:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:13",
														"nodeType": "YulTypedName",
														"src": "1105:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:13",
														"nodeType": "YulTypedName",
														"src": "1113:5:13",
														"type": ""
													}
												],
												"src": "1056:143:13"
											},
											{
												"body": {
													"nativeSrc": "1350:832:13",
													"nodeType": "YulBlock",
													"src": "1350:832:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1397:83:13",
																"nodeType": "YulBlock",
																"src": "1397:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1399:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1399:77:13"
																			},
																			"nativeSrc": "1399:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1399:79:13"
																		},
																		"nativeSrc": "1399:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1399:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1380:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1380:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1367:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:13"
																		},
																		"nativeSrc": "1367:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1367:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1392:3:13",
																		"nodeType": "YulLiteral",
																		"src": "1392:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1363:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1363:3:13"
																},
																"nativeSrc": "1363:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1363:33:13"
															},
															"nativeSrc": "1360:120:13",
															"nodeType": "YulIf",
															"src": "1360:120:13"
														},
														{
															"nativeSrc": "1490:128:13",
															"nodeType": "YulBlock",
															"src": "1490:128:13",
															"statements": [
																{
																	"nativeSrc": "1505:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1505:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1519:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1519:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1509:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1509:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1534:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1534:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1580:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1580:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1591:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1591:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1576:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1576:3:13"
																				},
																				"nativeSrc": "1576:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1576:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1600:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1600:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1544:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1544:31:13"
																		},
																		"nativeSrc": "1544:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1544:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1534:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1534:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1628:129:13",
															"nodeType": "YulBlock",
															"src": "1628:129:13",
															"statements": [
																{
																	"nativeSrc": "1643:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1643:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1657:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1647:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1647:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1673:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1673:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1719:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1719:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1730:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1730:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1715:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1715:3:13"
																				},
																				"nativeSrc": "1715:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1715:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1739:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1739:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1683:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1683:31:13"
																		},
																		"nativeSrc": "1683:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1683:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1673:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1673:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1767:129:13",
															"nodeType": "YulBlock",
															"src": "1767:129:13",
															"statements": [
																{
																	"nativeSrc": "1782:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1782:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1796:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1796:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1786:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1786:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1812:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1812:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1858:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1858:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1869:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1869:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1854:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1854:3:13"
																				},
																				"nativeSrc": "1854:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1854:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1878:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1878:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1822:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1822:31:13"
																		},
																		"nativeSrc": "1822:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1822:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1812:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1812:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1906:129:13",
															"nodeType": "YulBlock",
															"src": "1906:129:13",
															"statements": [
																{
																	"nativeSrc": "1921:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1921:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1935:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1935:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1925:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1925:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1951:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1951:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1997:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1997:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2008:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2008:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1993:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1993:3:13"
																				},
																				"nativeSrc": "1993:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1993:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2017:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2017:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1961:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1961:31:13"
																		},
																		"nativeSrc": "1961:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1951:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1951:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2045:130:13",
															"nodeType": "YulBlock",
															"src": "2045:130:13",
															"statements": [
																{
																	"nativeSrc": "2060:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2060:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2074:3:13",
																		"nodeType": "YulLiteral",
																		"src": "2074:3:13",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2064:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2064:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2091:74:13",
																	"nodeType": "YulAssignment",
																	"src": "2091:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2137:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2137:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2148:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2148:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2133:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2133:3:13"
																				},
																				"nativeSrc": "2133:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2133:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2157:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2157:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2101:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "2101:31:13"
																		},
																		"nativeSrc": "2101:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2101:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2091:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2091:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory",
												"nativeSrc": "1205:977:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1288:9:13",
														"nodeType": "YulTypedName",
														"src": "1288:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1299:7:13",
														"nodeType": "YulTypedName",
														"src": "1299:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1311:6:13",
														"nodeType": "YulTypedName",
														"src": "1311:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1319:6:13",
														"nodeType": "YulTypedName",
														"src": "1319:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1327:6:13",
														"nodeType": "YulTypedName",
														"src": "1327:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1335:6:13",
														"nodeType": "YulTypedName",
														"src": "1335:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1343:6:13",
														"nodeType": "YulTypedName",
														"src": "1343:6:13",
														"type": ""
													}
												],
												"src": "1205:977:13"
											},
											{
												"body": {
													"nativeSrc": "2247:40:13",
													"nodeType": "YulBlock",
													"src": "2247:40:13",
													"statements": [
														{
															"nativeSrc": "2258:22:13",
															"nodeType": "YulAssignment",
															"src": "2258:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2274:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2274:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2268:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2268:5:13"
																},
																"nativeSrc": "2268:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2268:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2258:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2188:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2230:5:13",
														"nodeType": "YulTypedName",
														"src": "2230:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2240:6:13",
														"nodeType": "YulTypedName",
														"src": "2240:6:13",
														"type": ""
													}
												],
												"src": "2188:99:13"
											},
											{
												"body": {
													"nativeSrc": "2321:152:13",
													"nodeType": "YulBlock",
													"src": "2321:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2338:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2338:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2341:77:13",
																		"nodeType": "YulLiteral",
																		"src": "2341:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2331:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2331:6:13"
																},
																"nativeSrc": "2331:88:13",
																"nodeType": "YulFunctionCall",
																"src": "2331:88:13"
															},
															"nativeSrc": "2331:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "2331:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2435:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2438:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2438:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2428:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2428:6:13"
																},
																"nativeSrc": "2428:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2428:15:13"
															},
															"nativeSrc": "2428:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2428:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2459:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2459:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2462:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2462:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2452:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2452:6:13"
																},
																"nativeSrc": "2452:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2452:15:13"
															},
															"nativeSrc": "2452:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2452:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2293:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "2293:180:13"
											},
											{
												"body": {
													"nativeSrc": "2507:152:13",
													"nodeType": "YulBlock",
													"src": "2507:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2524:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2524:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2527:77:13",
																		"nodeType": "YulLiteral",
																		"src": "2527:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2517:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:13"
																},
																"nativeSrc": "2517:88:13",
																"nodeType": "YulFunctionCall",
																"src": "2517:88:13"
															},
															"nativeSrc": "2517:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "2517:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2621:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2621:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2624:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2624:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2614:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:13"
																},
																"nativeSrc": "2614:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2614:15:13"
															},
															"nativeSrc": "2614:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2614:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2645:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2645:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2648:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2648:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2638:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2638:6:13"
																},
																"nativeSrc": "2638:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2638:15:13"
															},
															"nativeSrc": "2638:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2638:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2479:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "2479:180:13"
											},
											{
												"body": {
													"nativeSrc": "2716:269:13",
													"nodeType": "YulBlock",
													"src": "2716:269:13",
													"statements": [
														{
															"nativeSrc": "2726:22:13",
															"nodeType": "YulAssignment",
															"src": "2726:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2740:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2740:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2746:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2746:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2736:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2736:3:13"
																},
																"nativeSrc": "2736:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2736:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2726:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2726:6:13"
																}
															]
														},
														{
															"nativeSrc": "2757:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2757:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2787:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2787:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2793:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2793:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2783:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2783:3:13"
																},
																"nativeSrc": "2783:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2783:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2761:18:13",
																	"nodeType": "YulTypedName",
																	"src": "2761:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2834:51:13",
																"nodeType": "YulBlock",
																"src": "2834:51:13",
																"statements": [
																	{
																		"nativeSrc": "2848:27:13",
																		"nodeType": "YulAssignment",
																		"src": "2848:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2862:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "2862:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2870:4:13",
																					"nodeType": "YulLiteral",
																					"src": "2870:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2858:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2858:3:13"
																			},
																			"nativeSrc": "2858:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2858:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2848:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2848:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2814:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "2814:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2807:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2807:6:13"
																},
																"nativeSrc": "2807:26:13",
																"nodeType": "YulFunctionCall",
																"src": "2807:26:13"
															},
															"nativeSrc": "2804:81:13",
															"nodeType": "YulIf",
															"src": "2804:81:13"
														},
														{
															"body": {
																"nativeSrc": "2937:42:13",
																"nodeType": "YulBlock",
																"src": "2937:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2951:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "2951:16:13"
																			},
																			"nativeSrc": "2951:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2951:18:13"
																		},
																		"nativeSrc": "2951:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2951:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2901:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "2901:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2924:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2932:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2932:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2921:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2921:2:13"
																		},
																		"nativeSrc": "2921:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2921:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2898:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2898:2:13"
																},
																"nativeSrc": "2898:38:13",
																"nodeType": "YulFunctionCall",
																"src": "2898:38:13"
															},
															"nativeSrc": "2895:84:13",
															"nodeType": "YulIf",
															"src": "2895:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2665:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2700:4:13",
														"nodeType": "YulTypedName",
														"src": "2700:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2709:6:13",
														"nodeType": "YulTypedName",
														"src": "2709:6:13",
														"type": ""
													}
												],
												"src": "2665:320:13"
											},
											{
												"body": {
													"nativeSrc": "3045:87:13",
													"nodeType": "YulBlock",
													"src": "3045:87:13",
													"statements": [
														{
															"nativeSrc": "3055:11:13",
															"nodeType": "YulAssignment",
															"src": "3055:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "3063:3:13",
																"nodeType": "YulIdentifier",
																"src": "3063:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3055:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3055:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3083:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3083:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "3086:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3086:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3076:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3076:6:13"
																},
																"nativeSrc": "3076:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3076:14:13"
															},
															"nativeSrc": "3076:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "3076:14:13"
														},
														{
															"nativeSrc": "3099:26:13",
															"nodeType": "YulAssignment",
															"src": "3099:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3117:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3117:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3120:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3120:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3107:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3107:9:13"
																},
																"nativeSrc": "3107:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3099:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2991:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3032:3:13",
														"nodeType": "YulTypedName",
														"src": "3032:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3040:4:13",
														"nodeType": "YulTypedName",
														"src": "3040:4:13",
														"type": ""
													}
												],
												"src": "2991:141:13"
											},
											{
												"body": {
													"nativeSrc": "3182:49:13",
													"nodeType": "YulBlock",
													"src": "3182:49:13",
													"statements": [
														{
															"nativeSrc": "3192:33:13",
															"nodeType": "YulAssignment",
															"src": "3192:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3210:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3210:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3217:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3217:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3206:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3206:3:13"
																		},
																		"nativeSrc": "3206:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3206:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3222:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3202:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3202:3:13"
																},
																"nativeSrc": "3202:23:13",
																"nodeType": "YulFunctionCall",
																"src": "3202:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3192:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3192:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "3138:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3165:5:13",
														"nodeType": "YulTypedName",
														"src": "3165:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3175:6:13",
														"nodeType": "YulTypedName",
														"src": "3175:6:13",
														"type": ""
													}
												],
												"src": "3138:93:13"
											},
											{
												"body": {
													"nativeSrc": "3290:54:13",
													"nodeType": "YulBlock",
													"src": "3290:54:13",
													"statements": [
														{
															"nativeSrc": "3300:37:13",
															"nodeType": "YulAssignment",
															"src": "3300:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3325:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3325:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3331:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3331:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3321:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:13"
																},
																"nativeSrc": "3321:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3321:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3300:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "3300:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "3237:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3265:4:13",
														"nodeType": "YulTypedName",
														"src": "3265:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3271:5:13",
														"nodeType": "YulTypedName",
														"src": "3271:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3281:8:13",
														"nodeType": "YulTypedName",
														"src": "3281:8:13",
														"type": ""
													}
												],
												"src": "3237:107:13"
											},
											{
												"body": {
													"nativeSrc": "3426:317:13",
													"nodeType": "YulBlock",
													"src": "3426:317:13",
													"statements": [
														{
															"nativeSrc": "3436:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3436:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3457:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "3457:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3469:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3469:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3453:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3453:3:13"
																},
																"nativeSrc": "3453:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3453:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3440:9:13",
																	"nodeType": "YulTypedName",
																	"src": "3440:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3480:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3480:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3511:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3511:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3522:66:13",
																		"nodeType": "YulLiteral",
																		"src": "3522:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3492:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "3492:18:13"
																},
																"nativeSrc": "3492:97:13",
																"nodeType": "YulFunctionCall",
																"src": "3492:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3484:4:13",
																	"nodeType": "YulTypedName",
																	"src": "3484:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3598:51:13",
															"nodeType": "YulAssignment",
															"src": "3598:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3629:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3629:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3640:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "3640:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3610:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "3610:18:13"
																},
																"nativeSrc": "3610:39:13",
																"nodeType": "YulFunctionCall",
																"src": "3610:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3598:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "3598:8:13"
																}
															]
														},
														{
															"nativeSrc": "3658:30:13",
															"nodeType": "YulAssignment",
															"src": "3658:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3671:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3671:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3682:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3682:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3678:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3678:3:13"
																		},
																		"nativeSrc": "3678:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3678:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3667:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3667:3:13"
																},
																"nativeSrc": "3667:21:13",
																"nodeType": "YulFunctionCall",
																"src": "3667:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3658:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3658:5:13"
																}
															]
														},
														{
															"nativeSrc": "3697:40:13",
															"nodeType": "YulAssignment",
															"src": "3697:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3710:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3710:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3721:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "3721:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3731:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3731:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3717:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3717:3:13"
																		},
																		"nativeSrc": "3717:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3717:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3707:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3707:2:13"
																},
																"nativeSrc": "3707:30:13",
																"nodeType": "YulFunctionCall",
																"src": "3707:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3697:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3697:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "3350:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3387:5:13",
														"nodeType": "YulTypedName",
														"src": "3387:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "3394:10:13",
														"nodeType": "YulTypedName",
														"src": "3394:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3406:8:13",
														"nodeType": "YulTypedName",
														"src": "3406:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3419:6:13",
														"nodeType": "YulTypedName",
														"src": "3419:6:13",
														"type": ""
													}
												],
												"src": "3350:393:13"
											},
											{
												"body": {
													"nativeSrc": "3781:28:13",
													"nodeType": "YulBlock",
													"src": "3781:28:13",
													"statements": [
														{
															"nativeSrc": "3791:12:13",
															"nodeType": "YulAssignment",
															"src": "3791:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "3798:5:13",
																"nodeType": "YulIdentifier",
																"src": "3798:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3791:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3749:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3767:5:13",
														"nodeType": "YulTypedName",
														"src": "3767:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3777:3:13",
														"nodeType": "YulTypedName",
														"src": "3777:3:13",
														"type": ""
													}
												],
												"src": "3749:60:13"
											},
											{
												"body": {
													"nativeSrc": "3875:82:13",
													"nodeType": "YulBlock",
													"src": "3875:82:13",
													"statements": [
														{
															"nativeSrc": "3885:66:13",
															"nodeType": "YulAssignment",
															"src": "3885:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3943:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3943:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3925:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3925:17:13"
																				},
																				"nativeSrc": "3925:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3925:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3916:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "3916:8:13"
																		},
																		"nativeSrc": "3916:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3916:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3898:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3898:17:13"
																},
																"nativeSrc": "3898:53:13",
																"nodeType": "YulFunctionCall",
																"src": "3898:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3885:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3885:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3815:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3855:5:13",
														"nodeType": "YulTypedName",
														"src": "3855:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3865:9:13",
														"nodeType": "YulTypedName",
														"src": "3865:9:13",
														"type": ""
													}
												],
												"src": "3815:142:13"
											},
											{
												"body": {
													"nativeSrc": "4010:28:13",
													"nodeType": "YulBlock",
													"src": "4010:28:13",
													"statements": [
														{
															"nativeSrc": "4020:12:13",
															"nodeType": "YulAssignment",
															"src": "4020:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "4027:5:13",
																"nodeType": "YulIdentifier",
																"src": "4027:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4020:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4020:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3963:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3996:5:13",
														"nodeType": "YulTypedName",
														"src": "3996:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4006:3:13",
														"nodeType": "YulTypedName",
														"src": "4006:3:13",
														"type": ""
													}
												],
												"src": "3963:75:13"
											},
											{
												"body": {
													"nativeSrc": "4120:193:13",
													"nodeType": "YulBlock",
													"src": "4120:193:13",
													"statements": [
														{
															"nativeSrc": "4130:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4130:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "4185:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "4185:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "4154:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "4154:30:13"
																},
																"nativeSrc": "4154:39:13",
																"nodeType": "YulFunctionCall",
																"src": "4154:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "4134:16:13",
																	"nodeType": "YulTypedName",
																	"src": "4134:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4209:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4209:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "4249:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "4249:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "4243:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "4243:5:13"
																				},
																				"nativeSrc": "4243:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4243:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4256:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4256:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "4288:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "4288:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "4264:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "4264:23:13"
																				},
																				"nativeSrc": "4264:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4264:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "4215:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "4215:27:13"
																		},
																		"nativeSrc": "4215:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4215:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "4202:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4202:6:13"
																},
																"nativeSrc": "4202:105:13",
																"nodeType": "YulFunctionCall",
																"src": "4202:105:13"
															},
															"nativeSrc": "4202:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "4202:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "4044:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4097:4:13",
														"nodeType": "YulTypedName",
														"src": "4097:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4103:6:13",
														"nodeType": "YulTypedName",
														"src": "4103:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "4111:7:13",
														"nodeType": "YulTypedName",
														"src": "4111:7:13",
														"type": ""
													}
												],
												"src": "4044:269:13"
											},
											{
												"body": {
													"nativeSrc": "4368:24:13",
													"nodeType": "YulBlock",
													"src": "4368:24:13",
													"statements": [
														{
															"nativeSrc": "4378:8:13",
															"nodeType": "YulAssignment",
															"src": "4378:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4385:1:13",
																"nodeType": "YulLiteral",
																"src": "4385:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4378:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4378:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4319:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4364:3:13",
														"nodeType": "YulTypedName",
														"src": "4364:3:13",
														"type": ""
													}
												],
												"src": "4319:73:13"
											},
											{
												"body": {
													"nativeSrc": "4451:136:13",
													"nodeType": "YulBlock",
													"src": "4451:136:13",
													"statements": [
														{
															"nativeSrc": "4461:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4461:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4475:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "4475:30:13"
																},
																"nativeSrc": "4475:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4475:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4465:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4465:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4560:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4560:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4566:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4566:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4574:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4574:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4516:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4516:43:13"
																},
																"nativeSrc": "4516:65:13",
																"nodeType": "YulFunctionCall",
																"src": "4516:65:13"
															},
															"nativeSrc": "4516:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "4516:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4398:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4437:4:13",
														"nodeType": "YulTypedName",
														"src": "4437:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4443:6:13",
														"nodeType": "YulTypedName",
														"src": "4443:6:13",
														"type": ""
													}
												],
												"src": "4398:189:13"
											},
											{
												"body": {
													"nativeSrc": "4643:136:13",
													"nodeType": "YulBlock",
													"src": "4643:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4710:63:13",
																"nodeType": "YulBlock",
																"src": "4710:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4754:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "4754:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4761:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4761:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4724:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "4724:29:13"
																			},
																			"nativeSrc": "4724:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4724:39:13"
																		},
																		"nativeSrc": "4724:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4724:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4663:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4663:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4670:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4670:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4660:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4660:2:13"
																},
																"nativeSrc": "4660:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4660:14:13"
															},
															"nativeSrc": "4653:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4675:26:13",
																"nodeType": "YulBlock",
																"src": "4675:26:13",
																"statements": [
																	{
																		"nativeSrc": "4677:22:13",
																		"nodeType": "YulAssignment",
																		"src": "4677:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4690:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "4690:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4697:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4697:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4686:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4686:3:13"
																			},
																			"nativeSrc": "4686:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4686:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4677:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4677:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4657:2:13",
																"nodeType": "YulBlock",
																"src": "4657:2:13",
																"statements": []
															},
															"src": "4653:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4593:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4631:5:13",
														"nodeType": "YulTypedName",
														"src": "4631:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4638:3:13",
														"nodeType": "YulTypedName",
														"src": "4638:3:13",
														"type": ""
													}
												],
												"src": "4593:186:13"
											},
											{
												"body": {
													"nativeSrc": "4864:464:13",
													"nodeType": "YulBlock",
													"src": "4864:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4890:431:13",
																"nodeType": "YulBlock",
																"src": "4890:431:13",
																"statements": [
																	{
																		"nativeSrc": "4904:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4904:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4952:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "4952:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4920:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "4920:31:13"
																			},
																			"nativeSrc": "4920:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4920:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4908:8:13",
																				"nodeType": "YulTypedName",
																				"src": "4908:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4971:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4971:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4994:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "4994:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "5022:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "5022:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "5004:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "5004:17:13"
																					},
																					"nativeSrc": "5004:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5004:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4990:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4990:3:13"
																			},
																			"nativeSrc": "4990:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4990:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4975:11:13",
																				"nodeType": "YulTypedName",
																				"src": "4975:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5191:27:13",
																			"nodeType": "YulBlock",
																			"src": "5191:27:13",
																			"statements": [
																				{
																					"nativeSrc": "5193:23:13",
																					"nodeType": "YulAssignment",
																					"src": "5193:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "5208:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "5208:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "5193:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "5193:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5175:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "5175:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5187:2:13",
																					"nodeType": "YulLiteral",
																					"src": "5187:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5172:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "5172:2:13"
																			},
																			"nativeSrc": "5172:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5172:18:13"
																		},
																		"nativeSrc": "5169:49:13",
																		"nodeType": "YulIf",
																		"src": "5169:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "5260:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "5260:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "5277:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "5277:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "5305:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5305:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "5287:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "5287:17:13"
																							},
																							"nativeSrc": "5287:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5287:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5273:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "5273:3:13"
																					},
																					"nativeSrc": "5273:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5273:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "5231:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "5231:28:13"
																			},
																			"nativeSrc": "5231:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5231:80:13"
																		},
																		"nativeSrc": "5231:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5231:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4881:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4881:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4886:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4886:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4878:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4878:2:13"
																},
																"nativeSrc": "4878:11:13",
																"nodeType": "YulFunctionCall",
																"src": "4878:11:13"
															},
															"nativeSrc": "4875:446:13",
															"nodeType": "YulIf",
															"src": "4875:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4785:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4840:5:13",
														"nodeType": "YulTypedName",
														"src": "4840:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4847:3:13",
														"nodeType": "YulTypedName",
														"src": "4847:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4852:10:13",
														"nodeType": "YulTypedName",
														"src": "4852:10:13",
														"type": ""
													}
												],
												"src": "4785:543:13"
											},
											{
												"body": {
													"nativeSrc": "5397:54:13",
													"nodeType": "YulBlock",
													"src": "5397:54:13",
													"statements": [
														{
															"nativeSrc": "5407:37:13",
															"nodeType": "YulAssignment",
															"src": "5407:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5432:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5432:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5438:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5438:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5428:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:13"
																},
																"nativeSrc": "5428:16:13",
																"nodeType": "YulFunctionCall",
																"src": "5428:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5407:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "5407:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5334:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5372:4:13",
														"nodeType": "YulTypedName",
														"src": "5372:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5378:5:13",
														"nodeType": "YulTypedName",
														"src": "5378:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5388:8:13",
														"nodeType": "YulTypedName",
														"src": "5388:8:13",
														"type": ""
													}
												],
												"src": "5334:117:13"
											},
											{
												"body": {
													"nativeSrc": "5508:118:13",
													"nodeType": "YulBlock",
													"src": "5508:118:13",
													"statements": [
														{
															"nativeSrc": "5518:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5518:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5567:1:13",
																						"nodeType": "YulLiteral",
																						"src": "5567:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5570:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5570:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5563:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5563:3:13"
																				},
																				"nativeSrc": "5563:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5563:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5582:1:13",
																						"nodeType": "YulLiteral",
																						"src": "5582:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5578:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5578:3:13"
																				},
																				"nativeSrc": "5578:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5578:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5534:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "5534:28:13"
																		},
																		"nativeSrc": "5534:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5534:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5530:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5530:3:13"
																},
																"nativeSrc": "5530:56:13",
																"nodeType": "YulFunctionCall",
																"src": "5530:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5522:4:13",
																	"nodeType": "YulTypedName",
																	"src": "5522:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5595:25:13",
															"nodeType": "YulAssignment",
															"src": "5595:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5609:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5609:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5615:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5615:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5605:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5605:3:13"
																},
																"nativeSrc": "5605:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5605:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5595:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5595:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5457:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5485:4:13",
														"nodeType": "YulTypedName",
														"src": "5485:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5491:5:13",
														"nodeType": "YulTypedName",
														"src": "5491:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5501:6:13",
														"nodeType": "YulTypedName",
														"src": "5501:6:13",
														"type": ""
													}
												],
												"src": "5457:169:13"
											},
											{
												"body": {
													"nativeSrc": "5712:214:13",
													"nodeType": "YulBlock",
													"src": "5712:214:13",
													"statements": [
														{
															"nativeSrc": "5845:37:13",
															"nodeType": "YulAssignment",
															"src": "5845:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5872:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5872:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5878:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5878:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5853:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "5853:18:13"
																},
																"nativeSrc": "5853:29:13",
																"nodeType": "YulFunctionCall",
																"src": "5853:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5845:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5845:4:13"
																}
															]
														},
														{
															"nativeSrc": "5891:29:13",
															"nodeType": "YulAssignment",
															"src": "5891:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5902:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5902:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5912:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5912:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5915:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5915:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5908:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5908:3:13"
																		},
																		"nativeSrc": "5908:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5908:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5899:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5899:2:13"
																},
																"nativeSrc": "5899:21:13",
																"nodeType": "YulFunctionCall",
																"src": "5899:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5891:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5891:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5631:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5693:4:13",
														"nodeType": "YulTypedName",
														"src": "5693:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5699:3:13",
														"nodeType": "YulTypedName",
														"src": "5699:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5707:4:13",
														"nodeType": "YulTypedName",
														"src": "5707:4:13",
														"type": ""
													}
												],
												"src": "5631:295:13"
											},
											{
												"body": {
													"nativeSrc": "6023:1303:13",
													"nodeType": "YulBlock",
													"src": "6023:1303:13",
													"statements": [
														{
															"nativeSrc": "6034:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6034:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6081:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6081:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6048:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "6048:32:13"
																},
																"nativeSrc": "6048:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6048:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6038:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6038:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6170:22:13",
																"nodeType": "YulBlock",
																"src": "6170:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6172:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6172:16:13"
																			},
																			"nativeSrc": "6172:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6172:18:13"
																		},
																		"nativeSrc": "6172:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6172:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6142:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6142:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6150:18:13",
																		"nodeType": "YulLiteral",
																		"src": "6150:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6139:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6139:2:13"
																},
																"nativeSrc": "6139:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6139:30:13"
															},
															"nativeSrc": "6136:56:13",
															"nodeType": "YulIf",
															"src": "6136:56:13"
														},
														{
															"nativeSrc": "6202:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6202:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "6248:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6248:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "6242:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6242:5:13"
																		},
																		"nativeSrc": "6242:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6242:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "6216:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "6216:25:13"
																},
																"nativeSrc": "6216:38:13",
																"nodeType": "YulFunctionCall",
																"src": "6216:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "6206:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6206:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6347:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6347:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6353:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6353:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6361:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6361:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "6301:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "6301:45:13"
																},
																"nativeSrc": "6301:67:13",
																"nodeType": "YulFunctionCall",
																"src": "6301:67:13"
															},
															"nativeSrc": "6301:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "6301:67:13"
														},
														{
															"nativeSrc": "6378:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6378:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6395:1:13",
																"nodeType": "YulLiteral",
																"src": "6395:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6382:9:13",
																	"nodeType": "YulTypedName",
																	"src": "6382:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6406:17:13",
															"nodeType": "YulAssignment",
															"src": "6406:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6419:4:13",
																"nodeType": "YulLiteral",
																"src": "6419:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6406:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "6406:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6470:611:13",
																		"nodeType": "YulBlock",
																		"src": "6470:611:13",
																		"statements": [
																			{
																				"nativeSrc": "6484:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6484:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6503:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "6503:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6515:4:13",
																									"nodeType": "YulLiteral",
																									"src": "6515:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6511:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "6511:3:13"
																							},
																							"nativeSrc": "6511:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6511:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6499:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6499:3:13"
																					},
																					"nativeSrc": "6499:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6499:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6488:7:13",
																						"nodeType": "YulTypedName",
																						"src": "6488:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6535:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6535:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6581:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "6581:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6549:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "6549:31:13"
																					},
																					"nativeSrc": "6549:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6549:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6539:6:13",
																						"nodeType": "YulTypedName",
																						"src": "6539:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6599:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6599:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6608:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6608:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6603:1:13",
																						"nodeType": "YulTypedName",
																						"src": "6603:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6667:163:13",
																					"nodeType": "YulBlock",
																					"src": "6667:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6692:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "6692:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6710:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "6710:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6715:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "6715:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6706:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "6706:3:13"
																												},
																												"nativeSrc": "6706:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "6706:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6700:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "6700:5:13"
																										},
																										"nativeSrc": "6700:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6700:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6685:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6685:6:13"
																								},
																								"nativeSrc": "6685:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6685:42:13"
																							},
																							"nativeSrc": "6685:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "6685:42:13"
																						},
																						{
																							"nativeSrc": "6744:24:13",
																							"nodeType": "YulAssignment",
																							"src": "6744:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6758:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "6758:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6766:1:13",
																										"nodeType": "YulLiteral",
																										"src": "6766:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6754:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "6754:3:13"
																								},
																								"nativeSrc": "6754:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6754:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6744:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6744:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6785:31:13",
																							"nodeType": "YulAssignment",
																							"src": "6785:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6802:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "6802:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6813:2:13",
																										"nodeType": "YulLiteral",
																										"src": "6813:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6798:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "6798:3:13"
																								},
																								"nativeSrc": "6798:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6798:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6785:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "6785:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6633:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "6633:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6636:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "6636:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6630:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "6630:2:13"
																					},
																					"nativeSrc": "6630:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6630:14:13"
																				},
																				"nativeSrc": "6622:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6645:21:13",
																					"nodeType": "YulBlock",
																					"src": "6645:21:13",
																					"statements": [
																						{
																							"nativeSrc": "6647:17:13",
																							"nodeType": "YulAssignment",
																							"src": "6647:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6656:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "6656:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6659:4:13",
																										"nodeType": "YulLiteral",
																										"src": "6659:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6652:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "6652:3:13"
																								},
																								"nativeSrc": "6652:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6652:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6647:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "6647:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6626:3:13",
																					"nodeType": "YulBlock",
																					"src": "6626:3:13",
																					"statements": []
																				},
																				"src": "6622:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "6866:156:13",
																					"nodeType": "YulBlock",
																					"src": "6866:156:13",
																					"statements": [
																						{
																							"nativeSrc": "6884:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6884:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6911:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "6911:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6916:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6916:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6907:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "6907:3:13"
																										},
																										"nativeSrc": "6907:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6907:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6901:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6901:5:13"
																								},
																								"nativeSrc": "6901:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6901:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6888:9:13",
																									"nodeType": "YulTypedName",
																									"src": "6888:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6951:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "6951:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6978:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6978:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6993:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "6993:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "7001:4:13",
																														"nodeType": "YulLiteral",
																														"src": "7001:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6989:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "6989:3:13"
																												},
																												"nativeSrc": "6989:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "6989:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6959:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "6959:18:13"
																										},
																										"nativeSrc": "6959:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6959:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6944:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6944:6:13"
																								},
																								"nativeSrc": "6944:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6944:64:13"
																							},
																							"nativeSrc": "6944:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "6944:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6849:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "6849:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6858:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "6858:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6846:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "6846:2:13"
																					},
																					"nativeSrc": "6846:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6846:19:13"
																				},
																				"nativeSrc": "6843:179:13",
																				"nodeType": "YulIf",
																				"src": "6843:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7042:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "7042:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "7056:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "7056:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7064:1:13",
																											"nodeType": "YulLiteral",
																											"src": "7064:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "7052:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "7052:3:13"
																									},
																									"nativeSrc": "7052:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "7052:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7068:1:13",
																									"nodeType": "YulLiteral",
																									"src": "7068:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7048:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "7048:3:13"
																							},
																							"nativeSrc": "7048:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7048:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7035:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7035:6:13"
																					},
																					"nativeSrc": "7035:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7035:36:13"
																				},
																				"nativeSrc": "7035:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "7035:36:13"
																			}
																		]
																	},
																	"nativeSrc": "6463:618:13",
																	"nodeType": "YulCase",
																	"src": "6463:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6468:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6468:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7098:222:13",
																		"nodeType": "YulBlock",
																		"src": "7098:222:13",
																		"statements": [
																			{
																				"nativeSrc": "7112:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7112:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7125:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7125:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7116:5:13",
																						"nodeType": "YulTypedName",
																						"src": "7116:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7149:67:13",
																					"nodeType": "YulBlock",
																					"src": "7149:67:13",
																					"statements": [
																						{
																							"nativeSrc": "7167:35:13",
																							"nodeType": "YulAssignment",
																							"src": "7167:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7186:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "7186:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7191:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "7191:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7182:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "7182:3:13"
																										},
																										"nativeSrc": "7182:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "7182:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7176:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "7176:5:13"
																								},
																								"nativeSrc": "7176:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7176:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7167:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "7167:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7142:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "7142:6:13"
																				},
																				"nativeSrc": "7139:77:13",
																				"nodeType": "YulIf",
																				"src": "7139:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7236:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "7236:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "7295:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "7295:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "7302:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7302:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7242:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "7242:52:13"
																							},
																							"nativeSrc": "7242:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7242:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7229:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7229:6:13"
																					},
																					"nativeSrc": "7229:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7229:81:13"
																				},
																				"nativeSrc": "7229:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "7229:81:13"
																			}
																		]
																	},
																	"nativeSrc": "7090:230:13",
																	"nodeType": "YulCase",
																	"src": "7090:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6443:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6443:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6451:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6451:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6440:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6440:2:13"
																},
																"nativeSrc": "6440:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6440:14:13"
															},
															"nativeSrc": "6433:887:13",
															"nodeType": "YulSwitch",
															"src": "6433:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5931:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6012:4:13",
														"nodeType": "YulTypedName",
														"src": "6012:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6018:3:13",
														"nodeType": "YulTypedName",
														"src": "6018:3:13",
														"type": ""
													}
												],
												"src": "5931:1395:13"
											},
											{
												"body": {
													"nativeSrc": "7360:152:13",
													"nodeType": "YulBlock",
													"src": "7360:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7377:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7377:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7380:77:13",
																		"nodeType": "YulLiteral",
																		"src": "7380:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7370:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7370:6:13"
																},
																"nativeSrc": "7370:88:13",
																"nodeType": "YulFunctionCall",
																"src": "7370:88:13"
															},
															"nativeSrc": "7370:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "7370:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7474:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7474:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7477:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7477:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7467:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7467:6:13"
																},
																"nativeSrc": "7467:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7467:15:13"
															},
															"nativeSrc": "7467:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7467:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7498:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7498:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7501:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7501:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7491:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7491:6:13"
																},
																"nativeSrc": "7491:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7491:15:13"
															},
															"nativeSrc": "7491:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7491:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7332:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7332:180:13"
											},
											{
												"body": {
													"nativeSrc": "7569:51:13",
													"nodeType": "YulBlock",
													"src": "7569:51:13",
													"statements": [
														{
															"nativeSrc": "7579:34:13",
															"nodeType": "YulAssignment",
															"src": "7579:34:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7604:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7604:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7607:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7607:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7600:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7600:3:13"
																},
																"nativeSrc": "7600:13:13",
																"nodeType": "YulFunctionCall",
																"src": "7600:13:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7579:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "7579:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "7518:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7550:5:13",
														"nodeType": "YulTypedName",
														"src": "7550:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7560:8:13",
														"nodeType": "YulTypedName",
														"src": "7560:8:13",
														"type": ""
													}
												],
												"src": "7518:102:13"
											},
											{
												"body": {
													"nativeSrc": "7699:775:13",
													"nodeType": "YulBlock",
													"src": "7699:775:13",
													"statements": [
														{
															"nativeSrc": "7709:15:13",
															"nodeType": "YulAssignment",
															"src": "7709:15:13",
															"value": {
																"name": "_power",
																"nativeSrc": "7718:6:13",
																"nodeType": "YulIdentifier",
																"src": "7718:6:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7709:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7709:5:13"
																}
															]
														},
														{
															"nativeSrc": "7733:14:13",
															"nodeType": "YulAssignment",
															"src": "7733:14:13",
															"value": {
																"name": "_base",
																"nativeSrc": "7742:5:13",
																"nodeType": "YulIdentifier",
																"src": "7742:5:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7733:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7733:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7791:677:13",
																"nodeType": "YulBlock",
																"src": "7791:677:13",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7879:22:13",
																			"nodeType": "YulBlock",
																			"src": "7879:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7881:16:13",
																							"nodeType": "YulIdentifier",
																							"src": "7881:16:13"
																						},
																						"nativeSrc": "7881:18:13",
																						"nodeType": "YulFunctionCall",
																						"src": "7881:18:13"
																					},
																					"nativeSrc": "7881:18:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "7881:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7857:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "7857:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7867:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "7867:3:13"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7872:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "7872:4:13"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7863:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "7863:3:13"
																					},
																					"nativeSrc": "7863:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7863:14:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7854:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "7854:2:13"
																			},
																			"nativeSrc": "7854:24:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7854:24:13"
																		},
																		"nativeSrc": "7851:50:13",
																		"nodeType": "YulIf",
																		"src": "7851:50:13"
																	},
																	{
																		"body": {
																			"nativeSrc": "7946:419:13",
																			"nodeType": "YulBlock",
																			"src": "7946:419:13",
																			"statements": [
																				{
																					"nativeSrc": "8326:25:13",
																					"nodeType": "YulAssignment",
																					"src": "8326:25:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8339:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "8339:5:13"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8346:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "8346:4:13"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8335:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8335:3:13"
																						},
																						"nativeSrc": "8335:16:13",
																						"nodeType": "YulFunctionCall",
																						"src": "8335:16:13"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8326:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "8326:5:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7921:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "7921:8:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7931:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7931:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7917:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7917:3:13"
																			},
																			"nativeSrc": "7917:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7917:16:13"
																		},
																		"nativeSrc": "7914:451:13",
																		"nodeType": "YulIf",
																		"src": "7914:451:13"
																	},
																	{
																		"nativeSrc": "8378:23:13",
																		"nodeType": "YulAssignment",
																		"src": "8378:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8390:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "8390:4:13"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8396:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "8396:4:13"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "8386:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8386:3:13"
																			},
																			"nativeSrc": "8386:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8386:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "8378:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8378:4:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8414:44:13",
																		"nodeType": "YulAssignment",
																		"src": "8414:44:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8449:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "8449:8:13"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8426:22:13",
																				"nodeType": "YulIdentifier",
																				"src": "8426:22:13"
																			},
																			"nativeSrc": "8426:32:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8426:32:13"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8414:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "8414:8:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7767:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "7767:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7777:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7777:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7764:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7764:2:13"
																},
																"nativeSrc": "7764:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7764:15:13"
															},
															"nativeSrc": "7756:712:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7780:2:13",
																"nodeType": "YulBlock",
																"src": "7780:2:13",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7760:3:13",
																"nodeType": "YulBlock",
																"src": "7760:3:13",
																"statements": []
															},
															"src": "7756:712:13"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7626:848:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7654:6:13",
														"nodeType": "YulTypedName",
														"src": "7654:6:13",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7662:5:13",
														"nodeType": "YulTypedName",
														"src": "7662:5:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7669:8:13",
														"nodeType": "YulTypedName",
														"src": "7669:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7679:3:13",
														"nodeType": "YulTypedName",
														"src": "7679:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7687:5:13",
														"nodeType": "YulTypedName",
														"src": "7687:5:13",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7694:4:13",
														"nodeType": "YulTypedName",
														"src": "7694:4:13",
														"type": ""
													}
												],
												"src": "7626:848:13"
											},
											{
												"body": {
													"nativeSrc": "8540:1013:13",
													"nodeType": "YulBlock",
													"src": "8540:1013:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8735:20:13",
																"nodeType": "YulBlock",
																"src": "8735:20:13",
																"statements": [
																	{
																		"nativeSrc": "8737:10:13",
																		"nodeType": "YulAssignment",
																		"src": "8737:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8746:1:13",
																			"nodeType": "YulLiteral",
																			"src": "8746:1:13",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8737:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8737:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8748:5:13",
																		"nodeType": "YulLeave",
																		"src": "8748:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8725:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "8725:8:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8718:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8718:6:13"
																},
																"nativeSrc": "8718:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8718:16:13"
															},
															"nativeSrc": "8715:40:13",
															"nodeType": "YulIf",
															"src": "8715:40:13"
														},
														{
															"body": {
																"nativeSrc": "8780:20:13",
																"nodeType": "YulBlock",
																"src": "8780:20:13",
																"statements": [
																	{
																		"nativeSrc": "8782:10:13",
																		"nodeType": "YulAssignment",
																		"src": "8782:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8791:1:13",
																			"nodeType": "YulLiteral",
																			"src": "8791:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8782:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8782:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8793:5:13",
																		"nodeType": "YulLeave",
																		"src": "8793:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8774:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8774:4:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8767:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8767:6:13"
																},
																"nativeSrc": "8767:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8767:12:13"
															},
															"nativeSrc": "8764:36:13",
															"nodeType": "YulIf",
															"src": "8764:36:13"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8910:20:13",
																		"nodeType": "YulBlock",
																		"src": "8910:20:13",
																		"statements": [
																			{
																				"nativeSrc": "8912:10:13",
																				"nodeType": "YulAssignment",
																				"src": "8912:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8921:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8921:1:13",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8912:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "8912:5:13"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8923:5:13",
																				"nodeType": "YulLeave",
																				"src": "8923:5:13"
																			}
																		]
																	},
																	"nativeSrc": "8903:27:13",
																	"nodeType": "YulCase",
																	"src": "8903:27:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8908:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8908:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8954:176:13",
																		"nodeType": "YulBlock",
																		"src": "8954:176:13",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8989:22:13",
																					"nodeType": "YulBlock",
																					"src": "8989:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8991:16:13",
																									"nodeType": "YulIdentifier",
																									"src": "8991:16:13"
																								},
																								"nativeSrc": "8991:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8991:18:13"
																							},
																							"nativeSrc": "8991:18:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "8991:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8974:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "8974:8:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8984:3:13",
																							"nodeType": "YulLiteral",
																							"src": "8984:3:13",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8971:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "8971:2:13"
																					},
																					"nativeSrc": "8971:17:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8971:17:13"
																				},
																				"nativeSrc": "8968:43:13",
																				"nodeType": "YulIf",
																				"src": "8968:43:13"
																			},
																			{
																				"nativeSrc": "9024:25:13",
																				"nodeType": "YulAssignment",
																				"src": "9024:25:13",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9037:1:13",
																							"nodeType": "YulLiteral",
																							"src": "9037:1:13",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "9040:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "9040:8:13"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "9033:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "9033:3:13"
																					},
																					"nativeSrc": "9033:16:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9033:16:13"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9024:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "9024:5:13"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9080:22:13",
																					"nodeType": "YulBlock",
																					"src": "9080:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9082:16:13",
																									"nodeType": "YulIdentifier",
																									"src": "9082:16:13"
																								},
																								"nativeSrc": "9082:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "9082:18:13"
																							},
																							"nativeSrc": "9082:18:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "9082:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "9068:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "9068:5:13"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "9075:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "9075:3:13"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9065:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "9065:2:13"
																					},
																					"nativeSrc": "9065:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9065:14:13"
																				},
																				"nativeSrc": "9062:40:13",
																				"nodeType": "YulIf",
																				"src": "9062:40:13"
																			},
																			{
																				"nativeSrc": "9115:5:13",
																				"nodeType": "YulLeave",
																				"src": "9115:5:13"
																			}
																		]
																	},
																	"nativeSrc": "8939:191:13",
																	"nodeType": "YulCase",
																	"src": "8939:191:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8944:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8944:1:13",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8860:4:13",
																"nodeType": "YulIdentifier",
																"src": "8860:4:13"
															},
															"nativeSrc": "8853:277:13",
															"nodeType": "YulSwitch",
															"src": "8853:277:13"
														},
														{
															"body": {
																"nativeSrc": "9262:123:13",
																"nodeType": "YulBlock",
																"src": "9262:123:13",
																"statements": [
																	{
																		"nativeSrc": "9276:28:13",
																		"nodeType": "YulAssignment",
																		"src": "9276:28:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9289:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "9289:4:13"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9295:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "9295:8:13"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9285:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9285:3:13"
																			},
																			"nativeSrc": "9285:19:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9285:19:13"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9276:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9276:5:13"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9335:22:13",
																			"nodeType": "YulBlock",
																			"src": "9335:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9337:16:13",
																							"nodeType": "YulIdentifier",
																							"src": "9337:16:13"
																						},
																						"nativeSrc": "9337:18:13",
																						"nodeType": "YulFunctionCall",
																						"src": "9337:18:13"
																					},
																					"nativeSrc": "9337:18:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "9337:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "9323:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "9323:5:13"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "9330:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9330:3:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9320:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "9320:2:13"
																			},
																			"nativeSrc": "9320:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9320:14:13"
																		},
																		"nativeSrc": "9317:40:13",
																		"nodeType": "YulIf",
																		"src": "9317:40:13"
																	},
																	{
																		"nativeSrc": "9370:5:13",
																		"nodeType": "YulLeave",
																		"src": "9370:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9165:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "9165:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9171:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9171:2:13",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9162:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9162:2:13"
																				},
																				"nativeSrc": "9162:12:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9162:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9179:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "9179:8:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9189:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9189:2:13",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9176:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9176:2:13"
																				},
																				"nativeSrc": "9176:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9176:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9158:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:13"
																		},
																		"nativeSrc": "9158:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:35:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9214:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "9214:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9220:3:13",
																						"nodeType": "YulLiteral",
																						"src": "9220:3:13",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9211:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9211:2:13"
																				},
																				"nativeSrc": "9211:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9211:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9229:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "9229:8:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9239:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9239:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9226:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9226:2:13"
																				},
																				"nativeSrc": "9226:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9226:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9207:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9207:3:13"
																		},
																		"nativeSrc": "9207:36:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9207:36:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9142:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9142:2:13"
																},
																"nativeSrc": "9142:111:13",
																"nodeType": "YulFunctionCall",
																"src": "9142:111:13"
															},
															"nativeSrc": "9139:246:13",
															"nodeType": "YulIf",
															"src": "9139:246:13"
														},
														{
															"nativeSrc": "9395:57:13",
															"nodeType": "YulAssignment",
															"src": "9395:57:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9429:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9429:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9432:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9432:4:13"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9438:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "9438:8:13"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9448:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9448:3:13"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9410:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "9410:18:13"
																},
																"nativeSrc": "9410:42:13",
																"nodeType": "YulFunctionCall",
																"src": "9410:42:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9395:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9395:5:13"
																},
																{
																	"name": "base",
																	"nativeSrc": "9402:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9402:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9491:22:13",
																"nodeType": "YulBlock",
																"src": "9491:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9493:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9493:16:13"
																			},
																			"nativeSrc": "9493:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9493:18:13"
																		},
																		"nativeSrc": "9493:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9493:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9468:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9468:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9479:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9479:3:13"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "9484:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "9484:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9475:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9475:3:13"
																		},
																		"nativeSrc": "9475:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9475:14:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9465:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9465:2:13"
																},
																"nativeSrc": "9465:25:13",
																"nodeType": "YulFunctionCall",
																"src": "9465:25:13"
															},
															"nativeSrc": "9462:51:13",
															"nodeType": "YulIf",
															"src": "9462:51:13"
														},
														{
															"nativeSrc": "9522:25:13",
															"nodeType": "YulAssignment",
															"src": "9522:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9535:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9535:5:13"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9542:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9542:4:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9531:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9531:3:13"
																},
																"nativeSrc": "9531:16:13",
																"nodeType": "YulFunctionCall",
																"src": "9531:16:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9522:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9522:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8480:1073:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8510:4:13",
														"nodeType": "YulTypedName",
														"src": "8510:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8516:8:13",
														"nodeType": "YulTypedName",
														"src": "8516:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8526:3:13",
														"nodeType": "YulTypedName",
														"src": "8526:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8534:5:13",
														"nodeType": "YulTypedName",
														"src": "8534:5:13",
														"type": ""
													}
												],
												"src": "8480:1073:13"
											},
											{
												"body": {
													"nativeSrc": "9602:43:13",
													"nodeType": "YulBlock",
													"src": "9602:43:13",
													"statements": [
														{
															"nativeSrc": "9612:27:13",
															"nodeType": "YulAssignment",
															"src": "9612:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9627:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9627:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9634:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9634:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9623:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9623:3:13"
																},
																"nativeSrc": "9623:16:13",
																"nodeType": "YulFunctionCall",
																"src": "9623:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9612:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "9612:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9559:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9584:5:13",
														"nodeType": "YulTypedName",
														"src": "9584:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9594:7:13",
														"nodeType": "YulTypedName",
														"src": "9594:7:13",
														"type": ""
													}
												],
												"src": "9559:86:13"
											},
											{
												"body": {
													"nativeSrc": "9715:217:13",
													"nodeType": "YulBlock",
													"src": "9715:217:13",
													"statements": [
														{
															"nativeSrc": "9725:31:13",
															"nodeType": "YulAssignment",
															"src": "9725:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9751:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9751:4:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9733:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9733:17:13"
																},
																"nativeSrc": "9733:23:13",
																"nodeType": "YulFunctionCall",
																"src": "9733:23:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9725:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9725:4:13"
																}
															]
														},
														{
															"nativeSrc": "9765:37:13",
															"nodeType": "YulAssignment",
															"src": "9765:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9793:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "9793:8:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9777:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "9777:15:13"
																},
																"nativeSrc": "9777:25:13",
																"nodeType": "YulFunctionCall",
																"src": "9777:25:13"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9765:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "9765:8:13"
																}
															]
														},
														{
															"nativeSrc": "9812:113:13",
															"nodeType": "YulAssignment",
															"src": "9812:113:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9842:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9842:4:13"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9848:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "9848:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9858:66:13",
																		"nodeType": "YulLiteral",
																		"src": "9858:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9821:20:13",
																	"nodeType": "YulIdentifier",
																	"src": "9821:20:13"
																},
																"nativeSrc": "9821:104:13",
																"nodeType": "YulFunctionCall",
																"src": "9821:104:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9812:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9812:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "9651:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9690:4:13",
														"nodeType": "YulTypedName",
														"src": "9690:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9696:8:13",
														"nodeType": "YulTypedName",
														"src": "9696:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9709:5:13",
														"nodeType": "YulTypedName",
														"src": "9709:5:13",
														"type": ""
													}
												],
												"src": "9651:281:13"
											},
											{
												"body": {
													"nativeSrc": "9986:362:13",
													"nodeType": "YulBlock",
													"src": "9986:362:13",
													"statements": [
														{
															"nativeSrc": "9996:25:13",
															"nodeType": "YulAssignment",
															"src": "9996:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10019:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10019:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10001:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10001:17:13"
																},
																"nativeSrc": "10001:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10001:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9996:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9996:1:13"
																}
															]
														},
														{
															"nativeSrc": "10030:25:13",
															"nodeType": "YulAssignment",
															"src": "10030:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10053:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10053:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10035:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10035:17:13"
																},
																"nativeSrc": "10035:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10035:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10030:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "10030:1:13"
																}
															]
														},
														{
															"nativeSrc": "10064:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10064:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10087:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10087:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10090:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10090:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10083:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10083:3:13"
																},
																"nativeSrc": "10083:9:13",
																"nodeType": "YulFunctionCall",
																"src": "10083:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10068:11:13",
																	"nodeType": "YulTypedName",
																	"src": "10068:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10101:41:13",
															"nodeType": "YulAssignment",
															"src": "10101:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10130:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "10130:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10112:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10112:17:13"
																},
																"nativeSrc": "10112:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10112:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10101:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "10101:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10319:22:13",
																"nodeType": "YulBlock",
																"src": "10319:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10321:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10321:16:13"
																			},
																			"nativeSrc": "10321:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10321:18:13"
																		},
																		"nativeSrc": "10321:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10321:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10252:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "10252:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10245:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "10245:6:13"
																				},
																				"nativeSrc": "10245:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10245:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10275:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "10275:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10282:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "10282:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10291:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "10291:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10278:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "10278:3:13"
																						},
																						"nativeSrc": "10278:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "10278:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10272:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "10272:2:13"
																				},
																				"nativeSrc": "10272:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10272:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10225:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10225:2:13"
																		},
																		"nativeSrc": "10225:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10225:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10205:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10205:6:13"
																},
																"nativeSrc": "10205:113:13",
																"nodeType": "YulFunctionCall",
																"src": "10205:113:13"
															},
															"nativeSrc": "10202:139:13",
															"nodeType": "YulIf",
															"src": "10202:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9938:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9969:1:13",
														"nodeType": "YulTypedName",
														"src": "9969:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9972:1:13",
														"nodeType": "YulTypedName",
														"src": "9972:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9978:7:13",
														"nodeType": "YulTypedName",
														"src": "9978:7:13",
														"type": ""
													}
												],
												"src": "9938:410:13"
											},
											{
												"body": {
													"nativeSrc": "10419:53:13",
													"nodeType": "YulBlock",
													"src": "10419:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10436:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10436:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10459:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10459:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10441:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "10441:17:13"
																		},
																		"nativeSrc": "10441:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10441:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10429:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10429:6:13"
																},
																"nativeSrc": "10429:37:13",
																"nodeType": "YulFunctionCall",
																"src": "10429:37:13"
															},
															"nativeSrc": "10429:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "10429:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10354:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10407:5:13",
														"nodeType": "YulTypedName",
														"src": "10407:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10414:3:13",
														"nodeType": "YulTypedName",
														"src": "10414:3:13",
														"type": ""
													}
												],
												"src": "10354:118:13"
											},
											{
												"body": {
													"nativeSrc": "10576:124:13",
													"nodeType": "YulBlock",
													"src": "10576:124:13",
													"statements": [
														{
															"nativeSrc": "10586:26:13",
															"nodeType": "YulAssignment",
															"src": "10586:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10598:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10598:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10609:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10609:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10594:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10594:3:13"
																},
																"nativeSrc": "10594:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10594:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10586:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10586:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10666:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10666:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10679:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10679:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10690:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10690:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10675:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10675:3:13"
																		},
																		"nativeSrc": "10675:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10675:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10622:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10622:43:13"
																},
																"nativeSrc": "10622:71:13",
																"nodeType": "YulFunctionCall",
																"src": "10622:71:13"
															},
															"nativeSrc": "10622:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "10622:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10478:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10548:9:13",
														"nodeType": "YulTypedName",
														"src": "10548:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10560:6:13",
														"nodeType": "YulTypedName",
														"src": "10560:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10571:4:13",
														"nodeType": "YulTypedName",
														"src": "10571:4:13",
														"type": ""
													}
												],
												"src": "10478:222:13"
											},
											{
												"body": {
													"nativeSrc": "10750:147:13",
													"nodeType": "YulBlock",
													"src": "10750:147:13",
													"statements": [
														{
															"nativeSrc": "10760:25:13",
															"nodeType": "YulAssignment",
															"src": "10760:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10783:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10783:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10765:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10765:17:13"
																},
																"nativeSrc": "10765:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10765:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10760:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "10760:1:13"
																}
															]
														},
														{
															"nativeSrc": "10794:25:13",
															"nodeType": "YulAssignment",
															"src": "10794:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10817:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10817:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10799:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10799:17:13"
																},
																"nativeSrc": "10799:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10799:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10794:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "10794:1:13"
																}
															]
														},
														{
															"nativeSrc": "10828:16:13",
															"nodeType": "YulAssignment",
															"src": "10828:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10839:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10839:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10842:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10842:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10835:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10835:3:13"
																},
																"nativeSrc": "10835:9:13",
																"nodeType": "YulFunctionCall",
																"src": "10835:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10828:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10828:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10868:22:13",
																"nodeType": "YulBlock",
																"src": "10868:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10870:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10870:16:13"
																			},
																			"nativeSrc": "10870:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10870:18:13"
																		},
																		"nativeSrc": "10870:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10870:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10860:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10860:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10863:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10863:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10857:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10857:2:13"
																},
																"nativeSrc": "10857:10:13",
																"nodeType": "YulFunctionCall",
																"src": "10857:10:13"
															},
															"nativeSrc": "10854:36:13",
															"nodeType": "YulIf",
															"src": "10854:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10706:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10737:1:13",
														"nodeType": "YulTypedName",
														"src": "10737:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10740:1:13",
														"nodeType": "YulTypedName",
														"src": "10740:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10746:3:13",
														"nodeType": "YulTypedName",
														"src": "10746:3:13",
														"type": ""
													}
												],
												"src": "10706:191:13"
											},
											{
												"body": {
													"nativeSrc": "10968:53:13",
													"nodeType": "YulBlock",
													"src": "10968:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10985:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10985:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11008:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "11008:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10990:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "10990:17:13"
																		},
																		"nativeSrc": "10990:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10990:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10978:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10978:6:13"
																},
																"nativeSrc": "10978:37:13",
																"nodeType": "YulFunctionCall",
																"src": "10978:37:13"
															},
															"nativeSrc": "10978:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "10978:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10903:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10956:5:13",
														"nodeType": "YulTypedName",
														"src": "10956:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10963:3:13",
														"nodeType": "YulTypedName",
														"src": "10963:3:13",
														"type": ""
													}
												],
												"src": "10903:118:13"
											},
											{
												"body": {
													"nativeSrc": "11181:288:13",
													"nodeType": "YulBlock",
													"src": "11181:288:13",
													"statements": [
														{
															"nativeSrc": "11191:26:13",
															"nodeType": "YulAssignment",
															"src": "11191:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11203:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11203:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11214:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11214:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11199:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11199:3:13"
																},
																"nativeSrc": "11199:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11199:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11191:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11191:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11271:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11271:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11284:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11284:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11295:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11295:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11280:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11280:3:13"
																		},
																		"nativeSrc": "11280:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11280:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11227:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11227:43:13"
																},
																"nativeSrc": "11227:71:13",
																"nodeType": "YulFunctionCall",
																"src": "11227:71:13"
															},
															"nativeSrc": "11227:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "11227:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11352:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11352:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11365:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11365:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11376:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11376:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11361:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11361:3:13"
																		},
																		"nativeSrc": "11361:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11361:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11308:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11308:43:13"
																},
																"nativeSrc": "11308:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11308:72:13"
															},
															"nativeSrc": "11308:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11308:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11434:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11434:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11447:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11447:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11458:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11458:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11443:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11443:3:13"
																		},
																		"nativeSrc": "11443:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11443:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11390:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11390:43:13"
																},
																"nativeSrc": "11390:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11390:72:13"
															},
															"nativeSrc": "11390:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11390:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11027:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11137:9:13",
														"nodeType": "YulTypedName",
														"src": "11137:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11149:6:13",
														"nodeType": "YulTypedName",
														"src": "11149:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11157:6:13",
														"nodeType": "YulTypedName",
														"src": "11157:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11165:6:13",
														"nodeType": "YulTypedName",
														"src": "11165:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11176:4:13",
														"nodeType": "YulTypedName",
														"src": "11176:4:13",
														"type": ""
													}
												],
												"src": "11027:442:13"
											},
											{
												"body": {
													"nativeSrc": "11573:124:13",
													"nodeType": "YulBlock",
													"src": "11573:124:13",
													"statements": [
														{
															"nativeSrc": "11583:26:13",
															"nodeType": "YulAssignment",
															"src": "11583:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11595:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11595:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11606:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11606:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11591:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11591:3:13"
																},
																"nativeSrc": "11591:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11591:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11583:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11583:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11663:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11663:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11676:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11676:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11687:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11687:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11672:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11672:3:13"
																		},
																		"nativeSrc": "11672:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11672:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11619:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11619:43:13"
																},
																"nativeSrc": "11619:71:13",
																"nodeType": "YulFunctionCall",
																"src": "11619:71:13"
															},
															"nativeSrc": "11619:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "11619:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11475:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11545:9:13",
														"nodeType": "YulTypedName",
														"src": "11545:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11557:6:13",
														"nodeType": "YulTypedName",
														"src": "11557:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11568:4:13",
														"nodeType": "YulTypedName",
														"src": "11568:4:13",
														"type": ""
													}
												],
												"src": "11475:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b50604051613a57380380613a57833981810160405281019061003191906106e2565b6040518060400160405280600c81526020017f426f6e44654669546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600381526020017f424446000000000000000000000000000000000000000000000000000000000081525081600390816100ac919061098a565b5080600490816100bc919061098a565b5050505f60055f6101000a81548160ff0219169083151502179055506101087fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42866101b460201b60201c565b506101397ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7856101b460201b60201c565b508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060a081815250506101aa336101886102aa60201b60201c565b600a6101949190610bc1565b8461019f9190610c0b565b6102b260201b60201c565b5050505050610d04565b5f6101c5838361033760201b60201c565b6102a057600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061023d61039b60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506102a4565b5f90505b92915050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610322575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103199190610c5b565b60405180910390fd5b6103335f83836103a260201b60201c565b5050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b6103b38383836103b860201b60201c565b505050565b6103c66103dc60201b60201c565b6103d783838361042360201b60201c565b505050565b6103ea61063c60201b60201c565b15610421576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610473578060025f8282546104679190610c74565b92505081905550610541565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156104fc578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104f393929190610cb6565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610588578060025f82825403925050819055506105d2565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161062f9190610ceb565b60405180910390a3505050565b5f60055f9054906101000a900460ff16905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61067e82610655565b9050919050565b61068e81610674565b8114610698575f80fd5b50565b5f815190506106a981610685565b92915050565b5f819050919050565b6106c1816106af565b81146106cb575f80fd5b50565b5f815190506106dc816106b8565b92915050565b5f805f805f60a086880312156106fb576106fa610651565b5b5f6107088882890161069b565b95505060206107198882890161069b565b945050604061072a8882890161069b565b935050606061073b888289016106ce565b925050608061074c888289016106ce565b9150509295509295909350565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806107d457607f821691505b6020821081036107e7576107e6610790565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108497fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261080e565b610853868361080e565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61088e610889610884846106af565b61086b565b6106af565b9050919050565b5f819050919050565b6108a783610874565b6108bb6108b382610895565b84845461081a565b825550505050565b5f90565b6108cf6108c3565b6108da81848461089e565b505050565b5b818110156108fd576108f25f826108c7565b6001810190506108e0565b5050565b601f82111561094257610913816107ed565b61091c846107ff565b8101602085101561092b578190505b61093f610937856107ff565b8301826108df565b50505b505050565b5f82821c905092915050565b5f6109625f1984600802610947565b1980831691505092915050565b5f61097a8383610953565b9150826002028217905092915050565b61099382610759565b67ffffffffffffffff8111156109ac576109ab610763565b5b6109b682546107bd565b6109c1828285610901565b5f60209050601f8311600181146109f2575f84156109e0578287015190505b6109ea858261096f565b865550610a51565b601f198416610a00866107ed565b5f5b82811015610a2757848901518255600182019150602085019450602081019050610a02565b86831015610a445784890151610a40601f891682610953565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115610adb57808604811115610ab757610ab6610a59565b5b6001851615610ac65780820291505b8081029050610ad485610a86565b9450610a9b565b94509492505050565b5f82610af35760019050610bae565b81610b00575f9050610bae565b8160018114610b165760028114610b2057610b4f565b6001915050610bae565b60ff841115610b3257610b31610a59565b5b8360020a915084821115610b4957610b48610a59565b5b50610bae565b5060208310610133831016604e8410600b8410161715610b845782820a905083811115610b7f57610b7e610a59565b5b610bae565b610b918484846001610a92565b92509050818404811115610ba857610ba7610a59565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610bcb826106af565b9150610bd683610bb5565b9250610c037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610ae4565b905092915050565b5f610c15826106af565b9150610c20836106af565b9250828202610c2e816106af565b91508282048414831517610c4557610c44610a59565b5b5092915050565b610c5581610674565b82525050565b5f602082019050610c6e5f830184610c4c565b92915050565b5f610c7e826106af565b9150610c89836106af565b9250828201905080821115610ca157610ca0610a59565b5b92915050565b610cb0816106af565b82525050565b5f606082019050610cc95f830186610c4c565b610cd66020830185610ca7565b610ce36040830184610ca7565b949350505050565b5f602082019050610cfe5f830184610ca7565b92915050565b60805160a051612d0f610d485f395f8181610fa9015261147701525f818161079a01528181610ebf01528181610f0c0152818161110a01526112bb0152612d0f5ff3fe608060405234801561000f575f80fd5b506004361061020f575f3560e01c80638456cb5911610123578063acd17a99116100ab578063d547741f1161007a578063d547741f146105c9578063d59624b4146105e5578063dd62ed3e14610603578063e091a39b14610633578063f57d283e146106515761020f565b8063acd17a9914610567578063ca19c11c14610585578063ce4120da146105a1578063ced0550f146105bf5761020f565b806394d7cc88116100f257806394d7cc88146104c157806395d89b41146104dd578063992642e5146104fb578063a217fddf14610519578063a9059cbb146105375761020f565b80638456cb591461044d57806386d7165414610457578063904835c41461047557806391d14854146104915761020f565b80632f2ff15d116101a657806342966c681161017557806342966c68146103a95780635c975abb146103c557806370a08231146103e3578063764b666c1461041357806379cc6790146104315761020f565b80632f2ff15d14610349578063313ce5671461036557806336568abe146103835780633f4ba83a1461039f5761020f565b806318160ddd116101e257806318160ddd146102ad57806323b872dd146102cb578063248a9ca3146102fb5780632a0acc6a1461032b5761020f565b806301ffc9a71461021357806306fdde0314610243578063095ea7b31461026157806310002dbd14610291575b5f80fd5b61022d600480360381019061022891906120e2565b61066d565b60405161023a9190612127565b60405180910390f35b61024b6106e6565b60405161025891906121b0565b60405180910390f35b61027b6004803603810190610276919061225d565b610776565b6040516102889190612127565b60405180910390f35b6102ab60048036038101906102a6919061229b565b610798565b005b6102b5610931565b6040516102c291906122d5565b60405180910390f35b6102e560048036038101906102e091906122ee565b61093a565b6040516102f29190612127565b60405180910390f35b61031560048036038101906103109190612371565b610968565b60405161032291906123ab565b60405180910390f35b610333610985565b60405161034091906123ab565b60405180910390f35b610363600480360381019061035e91906123c4565b6109a9565b005b61036d6109cb565b60405161037a919061241d565b60405180910390f35b61039d600480360381019061039891906123c4565b6109d3565b005b6103a7610a4e565b005b6103c360048036038101906103be919061229b565b610a83565b005b6103cd610a97565b6040516103da9190612127565b60405180910390f35b6103fd60048036038101906103f89190612436565b610aac565b60405161040a91906122d5565b60405180910390f35b61041b610af1565b6040516104289190612470565b60405180910390f35b61044b6004803603810190610446919061225d565b610b16565b005b610455610b36565b005b61045f610b6b565b60405161046c91906122d5565b60405180910390f35b61048f600480360381019061048a9190612689565b610be9565b005b6104ab60048036038101906104a691906123c4565b610d86565b6040516104b89190612127565b60405180910390f35b6104db60048036038101906104d69190612436565b610dea565b005b6104e5610e2d565b6040516104f291906121b0565b60405180910390f35b610503610ebd565b6040516105109190612470565b60405180910390f35b610521610ee1565b60405161052e91906123ab565b60405180910390f35b610551600480360381019061054c919061225d565b610ee7565b60405161055e9190612127565b60405180910390f35b61056f610f09565b60405161057c91906122d5565b60405180910390f35b61059f600480360381019061059a919061229b565b610fa7565b005b6105a96111ef565b6040516105b691906122d5565b60405180910390f35b6105c761128e565b005b6105e360048036038101906105de91906123c4565b611453565b005b6105ed611475565b6040516105fa91906122d5565b60405180910390f35b61061d600480360381019061061891906126ff565b611499565b60405161062a91906122d5565b60405180910390f35b61063b61151b565b60405161064891906123ab565b60405180910390f35b61066b6004803603810190610666919061225d565b61153f565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106df57506106de8261166c565b5b9050919050565b6060600380546106f59061276a565b80601f01602080910402602001604051908101604052809291908181526020018280546107219061276a565b801561076c5780601f106107435761010080835404028352916020019161076c565b820191905f5260205f20905b81548152906001019060200180831161074f57829003601f168201915b5050505050905090565b5f806107806116d5565b905061078d8185856116dc565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016107f59392919061279a565b6020604051808303815f875af1158015610811573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083591906127f9565b610874576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086b9061286e565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108af92919061288c565b6020604051808303815f875af11580156108cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ef91906127f9565b61092e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610925906128fd565b60405180910390fd5b50565b5f600254905090565b5f806109446116d5565b90506109518582856116ee565b61095c858585611780565b60019150509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b6109b282610968565b6109bb81611870565b6109c58383611884565b50505050565b5f6012905090565b6109db6116d5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a3f576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a49828261196e565b505050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610a7881611870565b610a80611a58565b50565b610a94610a8e6116d5565b82611ab9565b50565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b2882610b226116d5565b836116ee565b610b328282611ab9565b5050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610b6081611870565b610b68611b38565b50565b5f3073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ba59190612470565b602060405180830381865afa158015610bc0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610be4919061292f565b905090565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610c1381611870565b8151835114610c57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4e906129ca565b60405180910390fd5b5f5b8351811015610d805760075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33868481518110610cb357610cb26129e8565b5b6020026020010151868581518110610cce57610ccd6129e8565b5b60200260200101516040518463ffffffff1660e01b8152600401610cf49392919061279a565b6020604051808303815f875af1158015610d10573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d3491906127f9565b610d73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6a90612a5f565b60405180910390fd5b8080600101915050610c59565b50505050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060048054610e3c9061276a565b80601f0160208091040260200160405190810160405280929190818152602001828054610e689061276a565b8015610eb35780601f10610e8a57610100808354040283529160200191610eb3565b820191905f5260205f20905b815481529060010190602001808311610e9657829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f801b81565b5f80610ef16116d5565b9050610efe818585611780565b600191505092915050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610f639190612470565b602060405180830381865afa158015610f7e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fa2919061292f565b905090565b7f000000000000000000000000000000000000000000000000000000000000000042101561100a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100190612ac7565b60405180910390fd5b5f811161104c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104390612b2f565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016110899392919061279a565b6020604051808303815f875af11580156110a5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110c991906127f9565b611108576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ff906128fd565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161116392919061288c565b6020604051808303815f875af115801561117f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111a391906127f9565b6111e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d99061286e565b60405180910390fd5b6111ec3082611ab9565b50565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161124a9190612470565b602060405180830381865afa158015611265573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611289919061292f565b905090565b7ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b76112b881611870565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113129190612470565b602060405180830381865afa15801561132d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611351919061292f565b90505f8111611395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138c90612b97565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016113d092919061288c565b6020604051808303815f875af11580156113ec573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061141091906127f9565b61144f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144690612bff565b60405180910390fd5b5050565b61145c82610968565b61146581611870565b61146f838361196e565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b781565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4261156981611870565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685856040518463ffffffff1660e01b81526004016115e89392919061279a565b6020604051808303815f875af1158015611604573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061162891906127f9565b611667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165e90612a5f565b60405180910390fd5b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6116e98383836001611b9a565b505050565b5f6116f98484611499565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461177a578181101561176b578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161176293929190612c1d565b60405180910390fd5b61177984848484035f611b9a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117f0575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117e79190612470565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611860575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118579190612470565b60405180910390fd5b61186b838383611d69565b505050565b6118818161187c6116d5565b611d79565b50565b5f61188f8383610d86565b61196457600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506119016116d5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611968565b5f90505b92915050565b5f6119798383610d86565b15611a4e575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506119eb6116d5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611a52565b5f90505b92915050565b611a60611dca565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611aa26116d5565b604051611aaf9190612470565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b29575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611b209190612470565b60405180910390fd5b611b34825f83611d69565b5050565b611b40611e0a565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611b836116d5565b604051611b909190612470565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611c0a575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611c019190612470565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c7a575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611c719190612470565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611d63578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611d5a91906122d5565b60405180910390a35b50505050565b611d74838383611e4b565b505050565b611d838282610d86565b611dc65780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611dbd929190612c52565b60405180910390fd5b5050565b611dd2610a97565b611e08576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611e12610a97565b15611e49576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611e53611e0a565b611e5e838383611e63565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611eb3578060025f828254611ea79190612ca6565b92505081905550611f81565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611f3c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611f3393929190612c1d565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611fc8578060025f8282540392505081905550612012565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161206f91906122d5565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6120c18161208d565b81146120cb575f80fd5b50565b5f813590506120dc816120b8565b92915050565b5f602082840312156120f7576120f6612085565b5b5f612104848285016120ce565b91505092915050565b5f8115159050919050565b6121218161210d565b82525050565b5f60208201905061213a5f830184612118565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61218282612140565b61218c818561214a565b935061219c81856020860161215a565b6121a581612168565b840191505092915050565b5f6020820190508181035f8301526121c88184612178565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6121f9826121d0565b9050919050565b612209816121ef565b8114612213575f80fd5b50565b5f8135905061222481612200565b92915050565b5f819050919050565b61223c8161222a565b8114612246575f80fd5b50565b5f8135905061225781612233565b92915050565b5f806040838503121561227357612272612085565b5b5f61228085828601612216565b925050602061229185828601612249565b9150509250929050565b5f602082840312156122b0576122af612085565b5b5f6122bd84828501612249565b91505092915050565b6122cf8161222a565b82525050565b5f6020820190506122e85f8301846122c6565b92915050565b5f805f6060848603121561230557612304612085565b5b5f61231286828701612216565b935050602061232386828701612216565b925050604061233486828701612249565b9150509250925092565b5f819050919050565b6123508161233e565b811461235a575f80fd5b50565b5f8135905061236b81612347565b92915050565b5f6020828403121561238657612385612085565b5b5f6123938482850161235d565b91505092915050565b6123a58161233e565b82525050565b5f6020820190506123be5f83018461239c565b92915050565b5f80604083850312156123da576123d9612085565b5b5f6123e78582860161235d565b92505060206123f885828601612216565b9150509250929050565b5f60ff82169050919050565b61241781612402565b82525050565b5f6020820190506124305f83018461240e565b92915050565b5f6020828403121561244b5761244a612085565b5b5f61245884828501612216565b91505092915050565b61246a816121ef565b82525050565b5f6020820190506124835f830184612461565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6124c382612168565b810181811067ffffffffffffffff821117156124e2576124e161248d565b5b80604052505050565b5f6124f461207c565b905061250082826124ba565b919050565b5f67ffffffffffffffff82111561251f5761251e61248d565b5b602082029050602081019050919050565b5f80fd5b5f61254661254184612505565b6124eb565b9050808382526020820190506020840283018581111561256957612568612530565b5b835b81811015612592578061257e8882612216565b84526020840193505060208101905061256b565b5050509392505050565b5f82601f8301126125b0576125af612489565b5b81356125c0848260208601612534565b91505092915050565b5f67ffffffffffffffff8211156125e3576125e261248d565b5b602082029050602081019050919050565b5f612606612601846125c9565b6124eb565b9050808382526020820190506020840283018581111561262957612628612530565b5b835b81811015612652578061263e8882612249565b84526020840193505060208101905061262b565b5050509392505050565b5f82601f8301126126705761266f612489565b5b81356126808482602086016125f4565b91505092915050565b5f806040838503121561269f5761269e612085565b5b5f83013567ffffffffffffffff8111156126bc576126bb612089565b5b6126c88582860161259c565b925050602083013567ffffffffffffffff8111156126e9576126e8612089565b5b6126f58582860161265c565b9150509250929050565b5f806040838503121561271557612714612085565b5b5f61272285828601612216565b925050602061273385828601612216565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061278157607f821691505b6020821081036127945761279361273d565b5b50919050565b5f6060820190506127ad5f830186612461565b6127ba6020830185612461565b6127c760408301846122c6565b949350505050565b6127d88161210d565b81146127e2575f80fd5b50565b5f815190506127f3816127cf565b92915050565b5f6020828403121561280e5761280d612085565b5b5f61281b848285016127e5565b91505092915050565b7f537461626c6520636f696e207472616e73666572206661696c656400000000005f82015250565b5f612858601b8361214a565b915061286382612824565b602082019050919050565b5f6020820190508181035f8301526128858161284c565b9050919050565b5f60408201905061289f5f830185612461565b6128ac60208301846122c6565b9392505050565b7f426f6e6420746f6b656e207472616e73666572206661696c65640000000000005f82015250565b5f6128e7601a8361214a565b91506128f2826128b3565b602082019050919050565b5f6020820190508181035f830152612914816128db565b9050919050565b5f8151905061292981612233565b92915050565b5f6020828403121561294457612943612085565b5b5f6129518482850161291b565b91505092915050565b7f546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e6774685f8201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b5f6129b460298361214a565b91506129bf8261295a565b604082019050919050565b5f6020820190508181035f8301526129e1816129a8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f612a49600f8361214a565b9150612a5482612a15565b602082019050919050565b5f6020820190508181035f830152612a7681612a3d565b9050919050565b7f4d61747572697479206e6f7420796574207265616368656400000000000000005f82015250565b5f612ab160188361214a565b9150612abc82612a7d565b602082019050919050565b5f6020820190508181035f830152612ade81612aa5565b9050919050565b7f43616e277420636c61696d207a65726f20636f696e73000000000000000000005f82015250565b5f612b1960168361214a565b9150612b2482612ae5565b602082019050919050565b5f6020820190508181035f830152612b4681612b0d565b9050919050565b7f4e6f20696e766573746f722066756e647320617661696c61626c652e000000005f82015250565b5f612b81601c8361214a565b9150612b8c82612b4d565b602082019050919050565b5f6020820190508181035f830152612bae81612b75565b9050919050565b7f4661696c656420746f207472616e7366657220737461626c6520636f696e73005f82015250565b5f612be9601f8361214a565b9150612bf482612bb5565b602082019050919050565b5f6020820190508181035f830152612c1681612bdd565b9050919050565b5f606082019050612c305f830186612461565b612c3d60208301856122c6565b612c4a60408301846122c6565b949350505050565b5f604082019050612c655f830185612461565b612c72602083018461239c565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612cb08261222a565b9150612cbb8361222a565b9250828201905080821115612cd357612cd2612c79565b5b9291505056fea26469706673582212200f7e65f7206b52c18eac87858610629e4d35d9ae5049cb7aacf3b4819923f75564736f6c634300081a0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3A57 CODESIZE SUB DUP1 PUSH2 0x3A57 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426F6E44654669546F6B656E0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4244460000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x108 PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 DUP7 PUSH2 0x1B4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x139 PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 DUP6 PUSH2 0x1B4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0x1AA CALLER PUSH2 0x188 PUSH2 0x2AA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST DUP5 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x2B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP PUSH2 0xD04 JUMP JUMPDEST PUSH0 PUSH2 0x1C5 DUP4 DUP4 PUSH2 0x337 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2A0 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x23D PUSH2 0x39B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2A4 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x322 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0xC5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x333 PUSH0 DUP4 DUP4 PUSH2 0x3A2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3B3 DUP4 DUP4 DUP4 PUSH2 0x3B8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3C6 PUSH2 0x3DC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3D7 DUP4 DUP4 DUP4 PUSH2 0x423 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3EA PUSH2 0x63C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0x421 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x473 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x541 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x4FC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x588 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5D2 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x62F SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x67E DUP3 PUSH2 0x655 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x68E DUP2 PUSH2 0x674 JUMP JUMPDEST DUP2 EQ PUSH2 0x698 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6A9 DUP2 PUSH2 0x685 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C1 DUP2 PUSH2 0x6AF JUMP JUMPDEST DUP2 EQ PUSH2 0x6CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6DC DUP2 PUSH2 0x6B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x6FB JUMPI PUSH2 0x6FA PUSH2 0x651 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x708 DUP9 DUP3 DUP10 ADD PUSH2 0x69B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x719 DUP9 DUP3 DUP10 ADD PUSH2 0x69B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x72A DUP9 DUP3 DUP10 ADD PUSH2 0x69B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x73B DUP9 DUP3 DUP10 ADD PUSH2 0x6CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x74C DUP9 DUP3 DUP10 ADD PUSH2 0x6CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7D4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7E7 JUMPI PUSH2 0x7E6 PUSH2 0x790 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x849 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x853 DUP7 DUP4 PUSH2 0x80E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x88E PUSH2 0x889 PUSH2 0x884 DUP5 PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A7 DUP4 PUSH2 0x874 JUMP JUMPDEST PUSH2 0x8BB PUSH2 0x8B3 DUP3 PUSH2 0x895 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x81A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x8CF PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0x8DA DUP2 DUP5 DUP5 PUSH2 0x89E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8FD JUMPI PUSH2 0x8F2 PUSH0 DUP3 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x942 JUMPI PUSH2 0x913 DUP2 PUSH2 0x7ED JUMP JUMPDEST PUSH2 0x91C DUP5 PUSH2 0x7FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x92B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x93F PUSH2 0x937 DUP6 PUSH2 0x7FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x8DF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x962 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x947 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x97A DUP4 DUP4 PUSH2 0x953 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x993 DUP3 PUSH2 0x759 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9AC JUMPI PUSH2 0x9AB PUSH2 0x763 JUMP JUMPDEST JUMPDEST PUSH2 0x9B6 DUP3 SLOAD PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x9C1 DUP3 DUP3 DUP6 PUSH2 0x901 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x9F2 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x9E0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x9EA DUP6 DUP3 PUSH2 0x96F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA00 DUP7 PUSH2 0x7ED JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA27 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA02 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA44 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA40 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x953 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xADB JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xAB7 JUMPI PUSH2 0xAB6 PUSH2 0xA59 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xAC6 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xAD4 DUP6 PUSH2 0xA86 JUMP JUMPDEST SWAP5 POP PUSH2 0xA9B JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xAF3 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xBAE JUMP JUMPDEST DUP2 PUSH2 0xB00 JUMPI PUSH0 SWAP1 POP PUSH2 0xBAE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xB16 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xB20 JUMPI PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xBAE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xB32 JUMPI PUSH2 0xB31 PUSH2 0xA59 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xB49 JUMPI PUSH2 0xB48 PUSH2 0xA59 JUMP JUMPDEST JUMPDEST POP PUSH2 0xBAE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xB84 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xB7F JUMPI PUSH2 0xB7E PUSH2 0xA59 JUMP JUMPDEST JUMPDEST PUSH2 0xBAE JUMP JUMPDEST PUSH2 0xB91 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xA92 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xBA8 JUMPI PUSH2 0xBA7 PUSH2 0xA59 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBCB DUP3 PUSH2 0x6AF JUMP JUMPDEST SWAP2 POP PUSH2 0xBD6 DUP4 PUSH2 0xBB5 JUMP JUMPDEST SWAP3 POP PUSH2 0xC03 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xAE4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC15 DUP3 PUSH2 0x6AF JUMP JUMPDEST SWAP2 POP PUSH2 0xC20 DUP4 PUSH2 0x6AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC2E DUP2 PUSH2 0x6AF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC45 JUMPI PUSH2 0xC44 PUSH2 0xA59 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC55 DUP2 PUSH2 0x674 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6E PUSH0 DUP4 ADD DUP5 PUSH2 0xC4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC7E DUP3 PUSH2 0x6AF JUMP JUMPDEST SWAP2 POP PUSH2 0xC89 DUP4 PUSH2 0x6AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xCA1 JUMPI PUSH2 0xCA0 PUSH2 0xA59 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCB0 DUP2 PUSH2 0x6AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCC9 PUSH0 DUP4 ADD DUP7 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0xCD6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCA7 JUMP JUMPDEST PUSH2 0xCE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCA7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCFE PUSH0 DUP4 ADD DUP5 PUSH2 0xCA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2D0F PUSH2 0xD48 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xFA9 ADD MSTORE PUSH2 0x1477 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x79A ADD MSTORE DUP2 DUP2 PUSH2 0xEBF ADD MSTORE DUP2 DUP2 PUSH2 0xF0C ADD MSTORE DUP2 DUP2 PUSH2 0x110A ADD MSTORE PUSH2 0x12BB ADD MSTORE PUSH2 0x2D0F PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xACD17A99 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0xD59624B4 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0xE091A39B EQ PUSH2 0x633 JUMPI DUP1 PUSH4 0xF57D283E EQ PUSH2 0x651 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xACD17A99 EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0xCA19C11C EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0xCE4120DA EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xCED0550F EQ PUSH2 0x5BF JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x94D7CC88 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x94D7CC88 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x537 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x86D71654 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x904835C4 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x491 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x764B666C EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x431 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x39F JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x2A0ACC6A EQ PUSH2 0x32B JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x10002DBD EQ PUSH2 0x291 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x21B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0x776 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B5 PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x2371 JUMP JUMPDEST PUSH2 0x968 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x333 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x363 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36D PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A7 PUSH2 0xA4E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CD PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x2436 JUMP JUMPDEST PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41B PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x455 PUSH2 0xB36 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45F PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xBE9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x2436 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E5 PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x21B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x503 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x521 PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x551 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54C SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56F PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57C SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST PUSH2 0xFA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A9 PUSH2 0x11EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B6 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C7 PUSH2 0x128E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x1453 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5ED PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x26FF JUMP JUMPDEST PUSH2 0x1499 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63B PUSH2 0x151B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x666 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0x153F JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x6DF JUMPI POP PUSH2 0x6DE DUP3 PUSH2 0x166C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6F5 SWAP1 PUSH2 0x276A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x721 SWAP1 PUSH2 0x276A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x76C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x743 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x76C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x780 PUSH2 0x16D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x78D DUP2 DUP6 DUP6 PUSH2 0x16DC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x811 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86B SWAP1 PUSH2 0x286E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AF SWAP3 SWAP2 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8CB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x925 SWAP1 PUSH2 0x28FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x944 PUSH2 0x16D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x951 DUP6 DUP3 DUP6 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0x95C DUP6 DUP6 DUP6 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 DUP2 JUMP JUMPDEST PUSH2 0x9B2 DUP3 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x9BB DUP2 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x9C5 DUP4 DUP4 PUSH2 0x1884 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9DB PUSH2 0x16D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA49 DUP3 DUP3 PUSH2 0x196E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xA78 DUP2 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0xA80 PUSH2 0x1A58 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA94 PUSH2 0xA8E PUSH2 0x16D5 JUMP JUMPDEST DUP3 PUSH2 0x1AB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB28 DUP3 PUSH2 0xB22 PUSH2 0x16D5 JUMP JUMPDEST DUP4 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0xB32 DUP3 DUP3 PUSH2 0x1AB9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xB60 DUP2 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0xB68 PUSH2 0x1B38 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE4 SWAP2 SWAP1 PUSH2 0x292F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xC13 DUP2 PUSH2 0x1870 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4E SWAP1 PUSH2 0x29CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xD80 JUMPI PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCB3 JUMPI PUSH2 0xCB2 PUSH2 0x29E8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xCCE JUMPI PUSH2 0xCCD PUSH2 0x29E8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD10 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD34 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6A SWAP1 PUSH2 0x2A5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC59 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE3C SWAP1 PUSH2 0x276A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE68 SWAP1 PUSH2 0x276A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEB3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE8A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEB3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE96 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEF1 PUSH2 0x16D5 JUMP JUMPDEST SWAP1 POP PUSH2 0xEFE DUP2 DUP6 DUP6 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF63 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF7E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA2 SWAP2 SWAP1 PUSH2 0x292F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x100A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1001 SWAP1 PUSH2 0x2AC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x104C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1043 SWAP1 PUSH2 0x2B2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1089 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10A5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10C9 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x1108 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FF SWAP1 PUSH2 0x28FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1163 SWAP3 SWAP2 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x117F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11A3 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x11E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D9 SWAP1 PUSH2 0x286E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11EC ADDRESS DUP3 PUSH2 0x1AB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124A SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1265 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1289 SWAP2 SWAP1 PUSH2 0x292F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 PUSH2 0x12B8 DUP2 PUSH2 0x1870 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1312 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x132D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1351 SWAP2 SWAP1 PUSH2 0x292F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1395 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138C SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D0 SWAP3 SWAP2 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13EC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1410 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x144F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1446 SWAP1 PUSH2 0x2BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x145C DUP3 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x1465 DUP2 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x146F DUP4 DUP4 PUSH2 0x196E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 DUP2 JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0x1569 DUP2 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1604 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1628 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x1667 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165E SWAP1 PUSH2 0x2A5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x16E9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16F9 DUP5 DUP5 PUSH2 0x1499 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x177A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x176B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1762 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1779 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1B9A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17F0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E7 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1860 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1857 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x186B DUP4 DUP4 DUP4 PUSH2 0x1D69 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1881 DUP2 PUSH2 0x187C PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x1D79 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x188F DUP4 DUP4 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x1964 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1901 PUSH2 0x16D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1968 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1979 DUP4 DUP4 PUSH2 0xD86 JUMP JUMPDEST ISZERO PUSH2 0x1A4E JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x19EB PUSH2 0x16D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1A52 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A60 PUSH2 0x1DCA JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1AA2 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AAF SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B29 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B20 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B34 DUP3 PUSH0 DUP4 PUSH2 0x1D69 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1B40 PUSH2 0x1E0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1B83 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B90 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C0A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C01 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C7A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C71 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1D63 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D5A SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1D74 DUP4 DUP4 DUP4 PUSH2 0x1E4B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1D83 DUP3 DUP3 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x1DC6 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DBD SWAP3 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1DD2 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0x1E08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1E12 PUSH2 0xA97 JUMP JUMPDEST ISZERO PUSH2 0x1E49 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1E53 PUSH2 0x1E0A JUMP JUMPDEST PUSH2 0x1E5E DUP4 DUP4 DUP4 PUSH2 0x1E63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EB3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1EA7 SWAP2 SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F81 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1F3C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F33 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FC8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2012 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x206F SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C1 DUP2 PUSH2 0x208D JUMP JUMPDEST DUP2 EQ PUSH2 0x20CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20DC DUP2 PUSH2 0x20B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F7 JUMPI PUSH2 0x20F6 PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2104 DUP5 DUP3 DUP6 ADD PUSH2 0x20CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2121 DUP2 PUSH2 0x210D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x213A PUSH0 DUP4 ADD DUP5 PUSH2 0x2118 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2182 DUP3 PUSH2 0x2140 JUMP JUMPDEST PUSH2 0x218C DUP2 DUP6 PUSH2 0x214A JUMP JUMPDEST SWAP4 POP PUSH2 0x219C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x215A JUMP JUMPDEST PUSH2 0x21A5 DUP2 PUSH2 0x2168 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21C8 DUP2 DUP5 PUSH2 0x2178 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21F9 DUP3 PUSH2 0x21D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2209 DUP2 PUSH2 0x21EF JUMP JUMPDEST DUP2 EQ PUSH2 0x2213 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2224 DUP2 PUSH2 0x2200 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x223C DUP2 PUSH2 0x222A JUMP JUMPDEST DUP2 EQ PUSH2 0x2246 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2257 DUP2 PUSH2 0x2233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2273 JUMPI PUSH2 0x2272 PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2280 DUP6 DUP3 DUP7 ADD PUSH2 0x2216 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2291 DUP6 DUP3 DUP7 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B0 JUMPI PUSH2 0x22AF PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22BD DUP5 DUP3 DUP6 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22CF DUP2 PUSH2 0x222A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22E8 PUSH0 DUP4 ADD DUP5 PUSH2 0x22C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2305 JUMPI PUSH2 0x2304 PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2312 DUP7 DUP3 DUP8 ADD PUSH2 0x2216 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2323 DUP7 DUP3 DUP8 ADD PUSH2 0x2216 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2334 DUP7 DUP3 DUP8 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2350 DUP2 PUSH2 0x233E JUMP JUMPDEST DUP2 EQ PUSH2 0x235A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x236B DUP2 PUSH2 0x2347 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2386 JUMPI PUSH2 0x2385 PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2393 DUP5 DUP3 DUP6 ADD PUSH2 0x235D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23A5 DUP2 PUSH2 0x233E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23BE PUSH0 DUP4 ADD DUP5 PUSH2 0x239C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23DA JUMPI PUSH2 0x23D9 PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23E7 DUP6 DUP3 DUP7 ADD PUSH2 0x235D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23F8 DUP6 DUP3 DUP7 ADD PUSH2 0x2216 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2417 DUP2 PUSH2 0x2402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2430 PUSH0 DUP4 ADD DUP5 PUSH2 0x240E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244B JUMPI PUSH2 0x244A PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2458 DUP5 DUP3 DUP6 ADD PUSH2 0x2216 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x246A DUP2 PUSH2 0x21EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2483 PUSH0 DUP4 ADD DUP5 PUSH2 0x2461 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x24C3 DUP3 PUSH2 0x2168 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x24E2 JUMPI PUSH2 0x24E1 PUSH2 0x248D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24F4 PUSH2 0x207C JUMP JUMPDEST SWAP1 POP PUSH2 0x2500 DUP3 DUP3 PUSH2 0x24BA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x251F JUMPI PUSH2 0x251E PUSH2 0x248D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x2546 PUSH2 0x2541 DUP5 PUSH2 0x2505 JUMP JUMPDEST PUSH2 0x24EB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2569 JUMPI PUSH2 0x2568 PUSH2 0x2530 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2592 JUMPI DUP1 PUSH2 0x257E DUP9 DUP3 PUSH2 0x2216 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x256B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25B0 JUMPI PUSH2 0x25AF PUSH2 0x2489 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x25C0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2534 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25E3 JUMPI PUSH2 0x25E2 PUSH2 0x248D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2606 PUSH2 0x2601 DUP5 PUSH2 0x25C9 JUMP JUMPDEST PUSH2 0x24EB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2629 JUMPI PUSH2 0x2628 PUSH2 0x2530 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2652 JUMPI DUP1 PUSH2 0x263E DUP9 DUP3 PUSH2 0x2249 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x262B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2670 JUMPI PUSH2 0x266F PUSH2 0x2489 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2680 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x269F JUMPI PUSH2 0x269E PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26BC JUMPI PUSH2 0x26BB PUSH2 0x2089 JUMP JUMPDEST JUMPDEST PUSH2 0x26C8 DUP6 DUP3 DUP7 ADD PUSH2 0x259C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26E9 JUMPI PUSH2 0x26E8 PUSH2 0x2089 JUMP JUMPDEST JUMPDEST PUSH2 0x26F5 DUP6 DUP3 DUP7 ADD PUSH2 0x265C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2715 JUMPI PUSH2 0x2714 PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2722 DUP6 DUP3 DUP7 ADD PUSH2 0x2216 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2733 DUP6 DUP3 DUP7 ADD PUSH2 0x2216 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2781 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2794 JUMPI PUSH2 0x2793 PUSH2 0x273D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x27AD PUSH0 DUP4 ADD DUP7 PUSH2 0x2461 JUMP JUMPDEST PUSH2 0x27BA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2461 JUMP JUMPDEST PUSH2 0x27C7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22C6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x27D8 DUP2 PUSH2 0x210D JUMP JUMPDEST DUP2 EQ PUSH2 0x27E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27F3 DUP2 PUSH2 0x27CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x280E JUMPI PUSH2 0x280D PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x281B DUP5 DUP3 DUP6 ADD PUSH2 0x27E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537461626C6520636F696E207472616E73666572206661696C65640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2858 PUSH1 0x1B DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x2863 DUP3 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2885 DUP2 PUSH2 0x284C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x289F PUSH0 DUP4 ADD DUP6 PUSH2 0x2461 JUMP JUMPDEST PUSH2 0x28AC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x426F6E6420746F6B656E207472616E73666572206661696C6564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28E7 PUSH1 0x1A DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x28F2 DUP3 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2914 DUP2 PUSH2 0x28DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2929 DUP2 PUSH2 0x2233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2944 JUMPI PUSH2 0x2943 PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2951 DUP5 DUP3 DUP6 ADD PUSH2 0x291B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20686F6C6465727320616E6420616D6F756E7473206C656E677468 PUSH0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29B4 PUSH1 0x29 DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x29BF DUP3 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29E1 DUP2 PUSH2 0x29A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A49 PUSH1 0xF DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x2A54 DUP3 PUSH2 0x2A15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A76 DUP2 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D61747572697479206E6F742079657420726561636865640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AB1 PUSH1 0x18 DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x2ABC DUP3 PUSH2 0x2A7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2ADE DUP2 PUSH2 0x2AA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E277420636C61696D207A65726F20636F696E7300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B19 PUSH1 0x16 DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x2B24 DUP3 PUSH2 0x2AE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B46 DUP2 PUSH2 0x2B0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20696E766573746F722066756E647320617661696C61626C652E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B81 PUSH1 0x1C DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x2B8C DUP3 PUSH2 0x2B4D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BAE DUP2 PUSH2 0x2B75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E7366657220737461626C6520636F696E7300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BE9 PUSH1 0x1F DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x2BF4 DUP3 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C16 DUP2 PUSH2 0x2BDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C30 PUSH0 DUP4 ADD DUP7 PUSH2 0x2461 JUMP JUMPDEST PUSH2 0x2C3D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22C6 JUMP JUMPDEST PUSH2 0x2C4A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22C6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C65 PUSH0 DUP4 ADD DUP6 PUSH2 0x2461 JUMP JUMPDEST PUSH2 0x2C72 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x239C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2CB0 DUP3 PUSH2 0x222A JUMP JUMPDEST SWAP2 POP PUSH2 0x2CBB DUP4 PUSH2 0x222A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CD3 JUMPI PUSH2 0x2CD2 PUSH2 0x2C79 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF PUSH31 0x65F7206B52C18EAC87858610629E4D35D9AE5049CB7AACF3B4819923F75564 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "373:3409:12:-:0;;;698:388;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1241:5:9;1231:7;;:15;;;;;;;;;;;;;;;;;;872:32:12::1;487:18;890:13;872:10;;;:32;;:::i;:::-;;914:35;549:24;938:10;914;;;:35;;:::i;:::-;;972:11;959:24;;;;;;;;::::0;::::1;1008:13;993:28;;;;::::0;::::1;1031:48;1037:10;1068;:8;;;:10;;:::i;:::-;1062:2;:16;;;;:::i;:::-;1049:10;:29;;;;:::i;:::-;1031:5;;;:48;;:::i;:::-;698:388:::0;;;;;373:3409;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;3002:82:3:-;3051:5;3075:2;3068:9;;3002:82;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;3466:165:12:-;3594:30;3608:4;3614:2;3618:5;3594:13;;;:30;;:::i;:::-;3466:165;;;:::o;1112:145:6:-;1474:19:9;:17;;;:19;;:::i;:::-;1220:30:6::1;1234:4;1240:2;1244:5;1220:13;;;:30;;:::i;:::-;1112:145:::0;;;:::o;2002:128:9:-;2067:8;:6;;;:8;;:::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;6271:1107:3:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;1850:84:9:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:977::-;1311:6;1319;1327;1335;1343;1392:3;1380:9;1371:7;1367:23;1363:33;1360:120;;;1399:79;;:::i;:::-;1360:120;1519:1;1544:64;1600:7;1591:6;1580:9;1576:22;1544:64;:::i;:::-;1534:74;;1490:128;1657:2;1683:64;1739:7;1730:6;1719:9;1715:22;1683:64;:::i;:::-;1673:74;;1628:129;1796:2;1822:64;1878:7;1869:6;1858:9;1854:22;1822:64;:::i;:::-;1812:74;;1767:129;1935:2;1961:64;2017:7;2008:6;1997:9;1993:22;1961:64;:::i;:::-;1951:74;;1906:129;2074:3;2101:64;2157:7;2148:6;2137:9;2133:22;2101:64;:::i;:::-;2091:74;;2045:130;1205:977;;;;;;;;:::o;2188:99::-;2240:6;2274:5;2268:12;2258:22;;2188:99;;;:::o;2293:180::-;2341:77;2338:1;2331:88;2438:4;2435:1;2428:15;2462:4;2459:1;2452:15;2479:180;2527:77;2524:1;2517:88;2624:4;2621:1;2614:15;2648:4;2645:1;2638:15;2665:320;2709:6;2746:1;2740:4;2736:12;2726:22;;2793:1;2787:4;2783:12;2814:18;2804:81;;2870:4;2862:6;2858:17;2848:27;;2804:81;2932:2;2924:6;2921:14;2901:18;2898:38;2895:84;;2951:18;;:::i;:::-;2895:84;2716:269;2665:320;;;:::o;2991:141::-;3040:4;3063:3;3055:11;;3086:3;3083:1;3076:14;3120:4;3117:1;3107:18;3099:26;;2991:141;;;:::o;3138:93::-;3175:6;3222:2;3217;3210:5;3206:14;3202:23;3192:33;;3138:93;;;:::o;3237:107::-;3281:8;3331:5;3325:4;3321:16;3300:37;;3237:107;;;;:::o;3350:393::-;3419:6;3469:1;3457:10;3453:18;3492:97;3522:66;3511:9;3492:97;:::i;:::-;3610:39;3640:8;3629:9;3610:39;:::i;:::-;3598:51;;3682:4;3678:9;3671:5;3667:21;3658:30;;3731:4;3721:8;3717:19;3710:5;3707:30;3697:40;;3426:317;;3350:393;;;;;:::o;3749:60::-;3777:3;3798:5;3791:12;;3749:60;;;:::o;3815:142::-;3865:9;3898:53;3916:34;3925:24;3943:5;3925:24;:::i;:::-;3916:34;:::i;:::-;3898:53;:::i;:::-;3885:66;;3815:142;;;:::o;3963:75::-;4006:3;4027:5;4020:12;;3963:75;;;:::o;4044:269::-;4154:39;4185:7;4154:39;:::i;:::-;4215:91;4264:41;4288:16;4264:41;:::i;:::-;4256:6;4249:4;4243:11;4215:91;:::i;:::-;4209:4;4202:105;4120:193;4044:269;;;:::o;4319:73::-;4364:3;4319:73;:::o;4398:189::-;4475:32;;:::i;:::-;4516:65;4574:6;4566;4560:4;4516:65;:::i;:::-;4451:136;4398:189;;:::o;4593:186::-;4653:120;4670:3;4663:5;4660:14;4653:120;;;4724:39;4761:1;4754:5;4724:39;:::i;:::-;4697:1;4690:5;4686:13;4677:22;;4653:120;;;4593:186;;:::o;4785:543::-;4886:2;4881:3;4878:11;4875:446;;;4920:38;4952:5;4920:38;:::i;:::-;5004:29;5022:10;5004:29;:::i;:::-;4994:8;4990:44;5187:2;5175:10;5172:18;5169:49;;;5208:8;5193:23;;5169:49;5231:80;5287:22;5305:3;5287:22;:::i;:::-;5277:8;5273:37;5260:11;5231:80;:::i;:::-;4890:431;;4875:446;4785:543;;;:::o;5334:117::-;5388:8;5438:5;5432:4;5428:16;5407:37;;5334:117;;;;:::o;5457:169::-;5501:6;5534:51;5582:1;5578:6;5570:5;5567:1;5563:13;5534:51;:::i;:::-;5530:56;5615:4;5609;5605:15;5595:25;;5508:118;5457:169;;;;:::o;5631:295::-;5707:4;5853:29;5878:3;5872:4;5853:29;:::i;:::-;5845:37;;5915:3;5912:1;5908:11;5902:4;5899:21;5891:29;;5631:295;;;;:::o;5931:1395::-;6048:37;6081:3;6048:37;:::i;:::-;6150:18;6142:6;6139:30;6136:56;;;6172:18;;:::i;:::-;6136:56;6216:38;6248:4;6242:11;6216:38;:::i;:::-;6301:67;6361:6;6353;6347:4;6301:67;:::i;:::-;6395:1;6419:4;6406:17;;6451:2;6443:6;6440:14;6468:1;6463:618;;;;7125:1;7142:6;7139:77;;;7191:9;7186:3;7182:19;7176:26;7167:35;;7139:77;7242:67;7302:6;7295:5;7242:67;:::i;:::-;7236:4;7229:81;7098:222;6433:887;;6463:618;6515:4;6511:9;6503:6;6499:22;6549:37;6581:4;6549:37;:::i;:::-;6608:1;6622:208;6636:7;6633:1;6630:14;6622:208;;;6715:9;6710:3;6706:19;6700:26;6692:6;6685:42;6766:1;6758:6;6754:14;6744:24;;6813:2;6802:9;6798:18;6785:31;;6659:4;6656:1;6652:12;6647:17;;6622:208;;;6858:6;6849:7;6846:19;6843:179;;;6916:9;6911:3;6907:19;6901:26;6959:48;7001:4;6993:6;6989:17;6978:9;6959:48;:::i;:::-;6951:6;6944:64;6866:156;6843:179;7068:1;7064;7056:6;7052:14;7048:22;7042:4;7035:36;6470:611;;;6433:887;;6023:1303;;;5931:1395;;:::o;7332:180::-;7380:77;7377:1;7370:88;7477:4;7474:1;7467:15;7501:4;7498:1;7491:15;7518:102;7560:8;7607:5;7604:1;7600:13;7579:34;;7518:102;;;:::o;7626:848::-;7687:5;7694:4;7718:6;7709:15;;7742:5;7733:14;;7756:712;7777:1;7767:8;7764:15;7756:712;;;7872:4;7867:3;7863:14;7857:4;7854:24;7851:50;;;7881:18;;:::i;:::-;7851:50;7931:1;7921:8;7917:16;7914:451;;;8346:4;8339:5;8335:16;8326:25;;7914:451;8396:4;8390;8386:15;8378:23;;8426:32;8449:8;8426:32;:::i;:::-;8414:44;;7756:712;;;7626:848;;;;;;;:::o;8480:1073::-;8534:5;8725:8;8715:40;;8746:1;8737:10;;8748:5;;8715:40;8774:4;8764:36;;8791:1;8782:10;;8793:5;;8764:36;8860:4;8908:1;8903:27;;;;8944:1;8939:191;;;;8853:277;;8903:27;8921:1;8912:10;;8923:5;;;8939:191;8984:3;8974:8;8971:17;8968:43;;;8991:18;;:::i;:::-;8968:43;9040:8;9037:1;9033:16;9024:25;;9075:3;9068:5;9065:14;9062:40;;;9082:18;;:::i;:::-;9062:40;9115:5;;;8853:277;;9239:2;9229:8;9226:16;9220:3;9214:4;9211:13;9207:36;9189:2;9179:8;9176:16;9171:2;9165:4;9162:12;9158:35;9142:111;9139:246;;;9295:8;9289:4;9285:19;9276:28;;9330:3;9323:5;9320:14;9317:40;;;9337:18;;:::i;:::-;9317:40;9370:5;;9139:246;9410:42;9448:3;9438:8;9432:4;9429:1;9410:42;:::i;:::-;9395:57;;;;9484:4;9479:3;9475:14;9468:5;9465:25;9462:51;;;9493:18;;:::i;:::-;9462:51;9542:4;9535:5;9531:16;9522:25;;8480:1073;;;;;;:::o;9559:86::-;9594:7;9634:4;9627:5;9623:16;9612:27;;9559:86;;;:::o;9651:281::-;9709:5;9733:23;9751:4;9733:23;:::i;:::-;9725:31;;9777:25;9793:8;9777:25;:::i;:::-;9765:37;;9821:104;9858:66;9848:8;9842:4;9821:104;:::i;:::-;9812:113;;9651:281;;;;:::o;9938:410::-;9978:7;10001:20;10019:1;10001:20;:::i;:::-;9996:25;;10035:20;10053:1;10035:20;:::i;:::-;10030:25;;10090:1;10087;10083:9;10112:30;10130:11;10112:30;:::i;:::-;10101:41;;10291:1;10282:7;10278:15;10275:1;10272:22;10252:1;10245:9;10225:83;10202:139;;10321:18;;:::i;:::-;10202:139;9986:362;9938:410;;;;:::o;10354:118::-;10441:24;10459:5;10441:24;:::i;:::-;10436:3;10429:37;10354:118;;:::o;10478:222::-;10571:4;10609:2;10598:9;10594:18;10586:26;;10622:71;10690:1;10679:9;10675:17;10666:6;10622:71;:::i;:::-;10478:222;;;;:::o;10706:191::-;10746:3;10765:20;10783:1;10765:20;:::i;:::-;10760:25;;10799:20;10817:1;10799:20;:::i;:::-;10794:25;;10842:1;10839;10835:9;10828:16;;10863:3;10860:1;10857:10;10854:36;;;10870:18;;:::i;:::-;10854:36;10706:191;;;;:::o;10903:118::-;10990:24;11008:5;10990:24;:::i;:::-;10985:3;10978:37;10903:118;;:::o;11027:442::-;11176:4;11214:2;11203:9;11199:18;11191:26;;11227:71;11295:1;11284:9;11280:17;11271:6;11227:71;:::i;:::-;11308:72;11376:2;11365:9;11361:18;11352:6;11308:72;:::i;:::-;11390;11458:2;11447:9;11443:18;11434:6;11390:72;:::i;:::-;11027:442;;;;;;:::o;11475:222::-;11568:4;11606:2;11595:9;11591:18;11583:26;;11619:71;11687:1;11676:9;11672:17;11663:6;11619:71;:::i;:::-;11475:222;;;;:::o;373:3409:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_1416": {
									"entryPoint": 2437,
									"id": 1416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BOND_ISSUER_1421": {
									"entryPoint": 5403,
									"id": 1421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 3809,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_921": {
									"entryPoint": 5852,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_981": {
									"entryPoint": 7066,
									"id": 981,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_903": {
									"entryPoint": 6841,
									"id": 903,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 7545,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 6256,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 6276,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1226": {
									"entryPoint": 5845,
									"id": 1226,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1344": {
									"entryPoint": 6968,
									"id": 1344,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1315": {
									"entryPoint": 7690,
									"id": 1315,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1328": {
									"entryPoint": 7626,
									"id": 1328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 6510,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1029": {
									"entryPoint": 5870,
									"id": 1029,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_760": {
									"entryPoint": 6016,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1360": {
									"entryPoint": 6744,
									"id": 1360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1187": {
									"entryPoint": 7755,
									"id": 1187,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1753": {
									"entryPoint": 7529,
									"id": 1753,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 7779,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_657": {
									"entryPoint": 5273,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_681": {
									"entryPoint": 1910,
									"id": 681,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_616": {
									"entryPoint": 2732,
									"id": 616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1153": {
									"entryPoint": 2838,
									"id": 1153,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1132": {
									"entryPoint": 2691,
									"id": 1132,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyBond_1518": {
									"entryPoint": 1944,
									"id": 1518,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimFaceValue_1688": {
									"entryPoint": 4007,
									"id": 1688,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimInvestorFunds_1631": {
									"entryPoint": 4750,
									"id": 1631,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_594": {
									"entryPoint": 2507,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@distributeInterestAll_1593": {
									"entryPoint": 3049,
									"id": 1593,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@distributeInterest_1541": {
									"entryPoint": 5439,
									"id": 1541,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2408,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2473,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 3462,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@interestToken_1427": {
									"entryPoint": 2801,
									"id": 1427,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maturityDate_1425": {
									"entryPoint": 5237,
									"id": 1425,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_576": {
									"entryPoint": 1766,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1763": {
									"entryPoint": 2870,
									"id": 1763,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1303": {
									"entryPoint": 2711,
									"id": 1303,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 2515,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 5203,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setInterestToken_1484": {
									"entryPoint": 3562,
									"id": 1484,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@showBondTokens_1704": {
									"entryPoint": 2923,
									"id": 1704,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@showInterestTokens_1718": {
									"entryPoint": 4591,
									"id": 1718,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@showStableCoins_1732": {
									"entryPoint": 3849,
									"id": 1732,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@stableCoin_1423": {
									"entryPoint": 3773,
									"id": 1423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1384": {
									"entryPoint": 5740,
									"id": 1384,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1645,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_585": {
									"entryPoint": 3629,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_603": {
									"entryPoint": 2353,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_713": {
									"entryPoint": 2362,
									"id": 713,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_640": {
									"entryPoint": 3815,
									"id": 640,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1773": {
									"entryPoint": 2638,
									"id": 1773,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9524,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9716,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 9053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 9073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 9156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 10543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 9116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 9230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10138,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 11346,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10380,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11293,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 9131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8316,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 9022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8538,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 10090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 11385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10045,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10728,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9357,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9353,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 9520,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8325,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15": {
									"entryPoint": 11085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 10773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f": {
									"entryPoint": 10586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764": {
									"entryPoint": 10419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d": {
									"entryPoint": 10276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b": {
									"entryPoint": 11189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464": {
									"entryPoint": 10981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55": {
									"entryPoint": 10877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 9031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24815:13",
										"nodeType": "YulBlock",
										"src": "0:24815:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1577:40:13",
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nativeSrc": "1588:22:13",
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nativeSrc": "1598:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:13",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nativeSrc": "1719:73:13",
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nativeSrc": "1729:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nativeSrc": "1729:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nativeSrc": "1757:29:13",
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nativeSrc": "1772:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:13",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:13",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:13",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nativeSrc": "1860:77:13",
													"nodeType": "YulBlock",
													"src": "1860:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:13"
																},
																"nativeSrc": "1871:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:13"
															},
															"nativeSrc": "1871:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:13"
																		},
																		"nativeSrc": "1910:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:13"
																},
																"nativeSrc": "1903:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:13"
															},
															"nativeSrc": "1903:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:13",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:13",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:13",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:139:13"
											},
											{
												"body": {
													"nativeSrc": "1991:54:13",
													"nodeType": "YulBlock",
													"src": "1991:54:13",
													"statements": [
														{
															"nativeSrc": "2001:38:13",
															"nodeType": "YulAssignment",
															"src": "2001:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:13"
																		},
																		"nativeSrc": "2015:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:13"
																		},
																		"nativeSrc": "2031:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:13"
																},
																"nativeSrc": "2011:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:13",
														"nodeType": "YulTypedName",
														"src": "1974:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:13",
														"nodeType": "YulTypedName",
														"src": "1984:6:13",
														"type": ""
													}
												],
												"src": "1943:102:13"
											},
											{
												"body": {
													"nativeSrc": "2143:285:13",
													"nodeType": "YulBlock",
													"src": "2143:285:13",
													"statements": [
														{
															"nativeSrc": "2153:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:13"
																},
																"nativeSrc": "2167:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:13",
															"nodeType": "YulAssignment",
															"src": "2215:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:13"
																},
																"nativeSrc": "2222:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:13"
																		},
																		"nativeSrc": "2337:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:13"
																},
																"nativeSrc": "2302:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:13"
															},
															"nativeSrc": "2302:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:13"
														},
														{
															"nativeSrc": "2376:46:13",
															"nodeType": "YulAssignment",
															"src": "2376:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:13"
																		},
																		"nativeSrc": "2392:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:13"
																},
																"nativeSrc": "2383:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:13",
														"nodeType": "YulTypedName",
														"src": "2124:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:13",
														"nodeType": "YulTypedName",
														"src": "2131:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:13",
														"nodeType": "YulTypedName",
														"src": "2139:3:13",
														"type": ""
													}
												],
												"src": "2051:377:13"
											},
											{
												"body": {
													"nativeSrc": "2552:195:13",
													"nodeType": "YulBlock",
													"src": "2552:195:13",
													"statements": [
														{
															"nativeSrc": "2562:26:13",
															"nodeType": "YulAssignment",
															"src": "2562:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:13"
																},
																"nativeSrc": "2570:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:13"
																		},
																		"nativeSrc": "2605:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:13"
																		},
																		"nativeSrc": "2624:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:13"
																},
																"nativeSrc": "2598:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:13"
															},
															"nativeSrc": "2598:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:13"
														},
														{
															"nativeSrc": "2654:86:13",
															"nodeType": "YulAssignment",
															"src": "2654:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:13"
																},
																"nativeSrc": "2662:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:13",
														"nodeType": "YulTypedName",
														"src": "2524:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:13",
														"nodeType": "YulTypedName",
														"src": "2536:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:13",
														"nodeType": "YulTypedName",
														"src": "2547:4:13",
														"type": ""
													}
												],
												"src": "2434:313:13"
											},
											{
												"body": {
													"nativeSrc": "2798:81:13",
													"nodeType": "YulBlock",
													"src": "2798:81:13",
													"statements": [
														{
															"nativeSrc": "2808:65:13",
															"nodeType": "YulAssignment",
															"src": "2808:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:13",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:13"
																},
																"nativeSrc": "2819:54:13",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:13",
														"nodeType": "YulTypedName",
														"src": "2780:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:13",
														"nodeType": "YulTypedName",
														"src": "2790:7:13",
														"type": ""
													}
												],
												"src": "2753:126:13"
											},
											{
												"body": {
													"nativeSrc": "2930:51:13",
													"nodeType": "YulBlock",
													"src": "2930:51:13",
													"statements": [
														{
															"nativeSrc": "2940:35:13",
															"nodeType": "YulAssignment",
															"src": "2940:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:13"
																},
																"nativeSrc": "2951:24:13",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:13",
														"nodeType": "YulTypedName",
														"src": "2912:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:13",
														"nodeType": "YulTypedName",
														"src": "2922:7:13",
														"type": ""
													}
												],
												"src": "2885:96:13"
											},
											{
												"body": {
													"nativeSrc": "3030:79:13",
													"nodeType": "YulBlock",
													"src": "3030:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:13",
																"nodeType": "YulBlock",
																"src": "3087:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:13"
																			},
																			"nativeSrc": "3089:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:13"
																		},
																		"nativeSrc": "3089:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:13"
																				},
																				"nativeSrc": "3060:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:13"
																		},
																		"nativeSrc": "3050:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:13"
																},
																"nativeSrc": "3043:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:13"
															},
															"nativeSrc": "3040:63:13",
															"nodeType": "YulIf",
															"src": "3040:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:13",
														"nodeType": "YulTypedName",
														"src": "3023:5:13",
														"type": ""
													}
												],
												"src": "2987:122:13"
											},
											{
												"body": {
													"nativeSrc": "3167:87:13",
													"nodeType": "YulBlock",
													"src": "3167:87:13",
													"statements": [
														{
															"nativeSrc": "3177:29:13",
															"nodeType": "YulAssignment",
															"src": "3177:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:13"
																},
																"nativeSrc": "3186:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:13"
																},
																"nativeSrc": "3215:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:13"
															},
															"nativeSrc": "3215:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:13",
														"nodeType": "YulTypedName",
														"src": "3145:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:13",
														"nodeType": "YulTypedName",
														"src": "3153:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:13",
														"nodeType": "YulTypedName",
														"src": "3161:5:13",
														"type": ""
													}
												],
												"src": "3115:139:13"
											},
											{
												"body": {
													"nativeSrc": "3305:32:13",
													"nodeType": "YulBlock",
													"src": "3305:32:13",
													"statements": [
														{
															"nativeSrc": "3315:16:13",
															"nodeType": "YulAssignment",
															"src": "3315:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:13",
																"nodeType": "YulIdentifier",
																"src": "3326:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:13",
														"nodeType": "YulTypedName",
														"src": "3287:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:13",
														"nodeType": "YulTypedName",
														"src": "3297:7:13",
														"type": ""
													}
												],
												"src": "3260:77:13"
											},
											{
												"body": {
													"nativeSrc": "3386:79:13",
													"nodeType": "YulBlock",
													"src": "3386:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:13",
																"nodeType": "YulBlock",
																"src": "3443:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:13"
																			},
																			"nativeSrc": "3445:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:13"
																		},
																		"nativeSrc": "3445:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:13"
																				},
																				"nativeSrc": "3416:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:13"
																		},
																		"nativeSrc": "3406:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:13"
																},
																"nativeSrc": "3399:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:13"
															},
															"nativeSrc": "3396:63:13",
															"nodeType": "YulIf",
															"src": "3396:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:13",
														"nodeType": "YulTypedName",
														"src": "3379:5:13",
														"type": ""
													}
												],
												"src": "3343:122:13"
											},
											{
												"body": {
													"nativeSrc": "3523:87:13",
													"nodeType": "YulBlock",
													"src": "3523:87:13",
													"statements": [
														{
															"nativeSrc": "3533:29:13",
															"nodeType": "YulAssignment",
															"src": "3533:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:13"
																},
																"nativeSrc": "3542:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:13"
																},
																"nativeSrc": "3571:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:13"
															},
															"nativeSrc": "3571:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:13",
														"nodeType": "YulTypedName",
														"src": "3501:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:13",
														"nodeType": "YulTypedName",
														"src": "3509:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:13",
														"nodeType": "YulTypedName",
														"src": "3517:5:13",
														"type": ""
													}
												],
												"src": "3471:139:13"
											},
											{
												"body": {
													"nativeSrc": "3699:391:13",
													"nodeType": "YulBlock",
													"src": "3699:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:13",
																"nodeType": "YulBlock",
																"src": "3745:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:13"
																			},
																			"nativeSrc": "3747:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:13"
																		},
																		"nativeSrc": "3747:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:13"
																		},
																		"nativeSrc": "3716:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:13"
																},
																"nativeSrc": "3712:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:13"
															},
															"nativeSrc": "3709:119:13",
															"nodeType": "YulIf",
															"src": "3709:119:13"
														},
														{
															"nativeSrc": "3838:117:13",
															"nodeType": "YulBlock",
															"src": "3838:117:13",
															"statements": [
																{
																	"nativeSrc": "3853:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:13"
																				},
																				"nativeSrc": "3913:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:13"
																		},
																		"nativeSrc": "3892:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:13",
															"nodeType": "YulBlock",
															"src": "3965:118:13",
															"statements": [
																{
																	"nativeSrc": "3980:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:13"
																				},
																				"nativeSrc": "4041:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:13"
																		},
																		"nativeSrc": "4020:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:13",
														"nodeType": "YulTypedName",
														"src": "3661:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:13",
														"nodeType": "YulTypedName",
														"src": "3672:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:13",
														"nodeType": "YulTypedName",
														"src": "3684:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:13",
														"nodeType": "YulTypedName",
														"src": "3692:6:13",
														"type": ""
													}
												],
												"src": "3616:474:13"
											},
											{
												"body": {
													"nativeSrc": "4162:263:13",
													"nodeType": "YulBlock",
													"src": "4162:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4208:83:13",
																"nodeType": "YulBlock",
																"src": "4208:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4210:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4210:77:13"
																			},
																			"nativeSrc": "4210:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4210:79:13"
																		},
																		"nativeSrc": "4210:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4210:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4183:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4183:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4192:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4192:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4179:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4179:3:13"
																		},
																		"nativeSrc": "4179:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4179:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4204:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4204:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4175:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4175:3:13"
																},
																"nativeSrc": "4175:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4175:32:13"
															},
															"nativeSrc": "4172:119:13",
															"nodeType": "YulIf",
															"src": "4172:119:13"
														},
														{
															"nativeSrc": "4301:117:13",
															"nodeType": "YulBlock",
															"src": "4301:117:13",
															"statements": [
																{
																	"nativeSrc": "4316:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4316:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4330:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4330:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4320:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4320:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4345:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4345:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4380:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4380:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4391:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4391:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4376:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4376:3:13"
																				},
																				"nativeSrc": "4376:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4376:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4400:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4400:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4355:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4355:20:13"
																		},
																		"nativeSrc": "4355:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4355:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4345:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4345:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4096:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4132:9:13",
														"nodeType": "YulTypedName",
														"src": "4132:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4143:7:13",
														"nodeType": "YulTypedName",
														"src": "4143:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4155:6:13",
														"nodeType": "YulTypedName",
														"src": "4155:6:13",
														"type": ""
													}
												],
												"src": "4096:329:13"
											},
											{
												"body": {
													"nativeSrc": "4496:53:13",
													"nodeType": "YulBlock",
													"src": "4496:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4513:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4513:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4536:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4536:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4518:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4518:17:13"
																		},
																		"nativeSrc": "4518:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4518:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4506:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4506:6:13"
																},
																"nativeSrc": "4506:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4506:37:13"
															},
															"nativeSrc": "4506:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4506:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4431:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4484:5:13",
														"nodeType": "YulTypedName",
														"src": "4484:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4491:3:13",
														"nodeType": "YulTypedName",
														"src": "4491:3:13",
														"type": ""
													}
												],
												"src": "4431:118:13"
											},
											{
												"body": {
													"nativeSrc": "4653:124:13",
													"nodeType": "YulBlock",
													"src": "4653:124:13",
													"statements": [
														{
															"nativeSrc": "4663:26:13",
															"nodeType": "YulAssignment",
															"src": "4663:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4675:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4675:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4686:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4686:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4671:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:13"
																},
																"nativeSrc": "4671:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4671:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4663:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4663:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4743:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4743:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4756:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4756:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4767:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4767:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4752:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4752:3:13"
																		},
																		"nativeSrc": "4752:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4752:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4699:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4699:43:13"
																},
																"nativeSrc": "4699:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4699:71:13"
															},
															"nativeSrc": "4699:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4699:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4555:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4625:9:13",
														"nodeType": "YulTypedName",
														"src": "4625:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4637:6:13",
														"nodeType": "YulTypedName",
														"src": "4637:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4648:4:13",
														"nodeType": "YulTypedName",
														"src": "4648:4:13",
														"type": ""
													}
												],
												"src": "4555:222:13"
											},
											{
												"body": {
													"nativeSrc": "4883:519:13",
													"nodeType": "YulBlock",
													"src": "4883:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:13",
																"nodeType": "YulBlock",
																"src": "4929:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:13"
																			},
																			"nativeSrc": "4931:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:13"
																		},
																		"nativeSrc": "4931:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:13"
																		},
																		"nativeSrc": "4900:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:13"
																},
																"nativeSrc": "4896:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:13"
															},
															"nativeSrc": "4893:119:13",
															"nodeType": "YulIf",
															"src": "4893:119:13"
														},
														{
															"nativeSrc": "5022:117:13",
															"nodeType": "YulBlock",
															"src": "5022:117:13",
															"statements": [
																{
																	"nativeSrc": "5037:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:13"
																				},
																				"nativeSrc": "5097:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:13"
																		},
																		"nativeSrc": "5076:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:13",
															"nodeType": "YulBlock",
															"src": "5149:118:13",
															"statements": [
																{
																	"nativeSrc": "5164:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:13"
																				},
																				"nativeSrc": "5225:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:13"
																		},
																		"nativeSrc": "5204:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:13",
															"nodeType": "YulBlock",
															"src": "5277:118:13",
															"statements": [
																{
																	"nativeSrc": "5292:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:13"
																				},
																				"nativeSrc": "5353:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:13"
																		},
																		"nativeSrc": "5332:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:13",
														"nodeType": "YulTypedName",
														"src": "4837:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:13",
														"nodeType": "YulTypedName",
														"src": "4848:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:13",
														"nodeType": "YulTypedName",
														"src": "4860:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:13",
														"nodeType": "YulTypedName",
														"src": "4868:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:13",
														"nodeType": "YulTypedName",
														"src": "4876:6:13",
														"type": ""
													}
												],
												"src": "4783:619:13"
											},
											{
												"body": {
													"nativeSrc": "5453:32:13",
													"nodeType": "YulBlock",
													"src": "5453:32:13",
													"statements": [
														{
															"nativeSrc": "5463:16:13",
															"nodeType": "YulAssignment",
															"src": "5463:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "5474:5:13",
																"nodeType": "YulIdentifier",
																"src": "5474:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5463:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5463:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5408:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5435:5:13",
														"nodeType": "YulTypedName",
														"src": "5435:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5445:7:13",
														"nodeType": "YulTypedName",
														"src": "5445:7:13",
														"type": ""
													}
												],
												"src": "5408:77:13"
											},
											{
												"body": {
													"nativeSrc": "5534:79:13",
													"nodeType": "YulBlock",
													"src": "5534:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5591:16:13",
																"nodeType": "YulBlock",
																"src": "5591:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5600:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5600:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5603:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5603:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5593:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5593:6:13"
																			},
																			"nativeSrc": "5593:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5593:12:13"
																		},
																		"nativeSrc": "5593:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5593:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5557:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5557:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5582:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5582:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5564:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "5564:17:13"
																				},
																				"nativeSrc": "5564:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5564:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5554:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5554:2:13"
																		},
																		"nativeSrc": "5554:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5554:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5547:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:13"
																},
																"nativeSrc": "5547:43:13",
																"nodeType": "YulFunctionCall",
																"src": "5547:43:13"
															},
															"nativeSrc": "5544:63:13",
															"nodeType": "YulIf",
															"src": "5544:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5491:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5527:5:13",
														"nodeType": "YulTypedName",
														"src": "5527:5:13",
														"type": ""
													}
												],
												"src": "5491:122:13"
											},
											{
												"body": {
													"nativeSrc": "5671:87:13",
													"nodeType": "YulBlock",
													"src": "5671:87:13",
													"statements": [
														{
															"nativeSrc": "5681:29:13",
															"nodeType": "YulAssignment",
															"src": "5681:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5703:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5703:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5690:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5690:12:13"
																},
																"nativeSrc": "5690:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5690:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5681:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5681:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5746:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5746:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5719:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "5719:26:13"
																},
																"nativeSrc": "5719:33:13",
																"nodeType": "YulFunctionCall",
																"src": "5719:33:13"
															},
															"nativeSrc": "5719:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "5719:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5619:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5649:6:13",
														"nodeType": "YulTypedName",
														"src": "5649:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5657:3:13",
														"nodeType": "YulTypedName",
														"src": "5657:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5665:5:13",
														"nodeType": "YulTypedName",
														"src": "5665:5:13",
														"type": ""
													}
												],
												"src": "5619:139:13"
											},
											{
												"body": {
													"nativeSrc": "5830:263:13",
													"nodeType": "YulBlock",
													"src": "5830:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5876:83:13",
																"nodeType": "YulBlock",
																"src": "5876:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5878:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5878:77:13"
																			},
																			"nativeSrc": "5878:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5878:79:13"
																		},
																		"nativeSrc": "5878:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5878:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5851:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5851:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5860:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5860:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5847:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5847:3:13"
																		},
																		"nativeSrc": "5847:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5847:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5872:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5872:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5843:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5843:3:13"
																},
																"nativeSrc": "5843:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5843:32:13"
															},
															"nativeSrc": "5840:119:13",
															"nodeType": "YulIf",
															"src": "5840:119:13"
														},
														{
															"nativeSrc": "5969:117:13",
															"nodeType": "YulBlock",
															"src": "5969:117:13",
															"statements": [
																{
																	"nativeSrc": "5984:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5984:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5998:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5998:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5988:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5988:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6013:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6013:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6048:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6048:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6059:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6059:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6044:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6044:3:13"
																				},
																				"nativeSrc": "6044:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6044:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6068:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6068:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6023:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6023:20:13"
																		},
																		"nativeSrc": "6023:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6023:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6013:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6013:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5764:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5800:9:13",
														"nodeType": "YulTypedName",
														"src": "5800:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5811:7:13",
														"nodeType": "YulTypedName",
														"src": "5811:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5823:6:13",
														"nodeType": "YulTypedName",
														"src": "5823:6:13",
														"type": ""
													}
												],
												"src": "5764:329:13"
											},
											{
												"body": {
													"nativeSrc": "6164:53:13",
													"nodeType": "YulBlock",
													"src": "6164:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6181:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6181:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6204:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6204:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "6186:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6186:17:13"
																		},
																		"nativeSrc": "6186:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6174:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:13"
																},
																"nativeSrc": "6174:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6174:37:13"
															},
															"nativeSrc": "6174:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6174:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "6099:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6152:5:13",
														"nodeType": "YulTypedName",
														"src": "6152:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6159:3:13",
														"nodeType": "YulTypedName",
														"src": "6159:3:13",
														"type": ""
													}
												],
												"src": "6099:118:13"
											},
											{
												"body": {
													"nativeSrc": "6321:124:13",
													"nodeType": "YulBlock",
													"src": "6321:124:13",
													"statements": [
														{
															"nativeSrc": "6331:26:13",
															"nodeType": "YulAssignment",
															"src": "6331:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6343:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6343:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6354:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6354:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6339:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6339:3:13"
																},
																"nativeSrc": "6339:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6339:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6331:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6331:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6411:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6411:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6424:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6424:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6435:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6435:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6420:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6420:3:13"
																		},
																		"nativeSrc": "6420:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6420:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6367:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6367:43:13"
																},
																"nativeSrc": "6367:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6367:71:13"
															},
															"nativeSrc": "6367:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6367:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "6223:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6293:9:13",
														"nodeType": "YulTypedName",
														"src": "6293:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6305:6:13",
														"nodeType": "YulTypedName",
														"src": "6305:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6316:4:13",
														"nodeType": "YulTypedName",
														"src": "6316:4:13",
														"type": ""
													}
												],
												"src": "6223:222:13"
											},
											{
												"body": {
													"nativeSrc": "6534:391:13",
													"nodeType": "YulBlock",
													"src": "6534:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6580:83:13",
																"nodeType": "YulBlock",
																"src": "6580:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6582:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6582:77:13"
																			},
																			"nativeSrc": "6582:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6582:79:13"
																		},
																		"nativeSrc": "6582:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6582:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6555:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6555:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6564:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6564:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6551:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6551:3:13"
																		},
																		"nativeSrc": "6551:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6551:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6576:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6576:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6547:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6547:3:13"
																},
																"nativeSrc": "6547:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6547:32:13"
															},
															"nativeSrc": "6544:119:13",
															"nodeType": "YulIf",
															"src": "6544:119:13"
														},
														{
															"nativeSrc": "6673:117:13",
															"nodeType": "YulBlock",
															"src": "6673:117:13",
															"statements": [
																{
																	"nativeSrc": "6688:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6688:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6702:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6702:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6692:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6692:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6717:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6717:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6752:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6752:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6763:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6763:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6748:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6748:3:13"
																				},
																				"nativeSrc": "6748:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6748:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6772:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6772:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6727:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6727:20:13"
																		},
																		"nativeSrc": "6727:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6717:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6717:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6800:118:13",
															"nodeType": "YulBlock",
															"src": "6800:118:13",
															"statements": [
																{
																	"nativeSrc": "6815:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6815:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6829:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6829:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6819:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6819:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6845:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6845:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6880:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6880:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6891:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6891:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6876:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6876:3:13"
																				},
																				"nativeSrc": "6876:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6876:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6900:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6900:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6855:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6855:20:13"
																		},
																		"nativeSrc": "6855:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6855:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6845:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6845:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6451:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6496:9:13",
														"nodeType": "YulTypedName",
														"src": "6496:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6507:7:13",
														"nodeType": "YulTypedName",
														"src": "6507:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6519:6:13",
														"nodeType": "YulTypedName",
														"src": "6519:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6527:6:13",
														"nodeType": "YulTypedName",
														"src": "6527:6:13",
														"type": ""
													}
												],
												"src": "6451:474:13"
											},
											{
												"body": {
													"nativeSrc": "6974:43:13",
													"nodeType": "YulBlock",
													"src": "6974:43:13",
													"statements": [
														{
															"nativeSrc": "6984:27:13",
															"nodeType": "YulAssignment",
															"src": "6984:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6999:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6999:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7006:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7006:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6995:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6995:3:13"
																},
																"nativeSrc": "6995:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6995:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6984:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6984:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6931:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6956:5:13",
														"nodeType": "YulTypedName",
														"src": "6956:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6966:7:13",
														"nodeType": "YulTypedName",
														"src": "6966:7:13",
														"type": ""
													}
												],
												"src": "6931:86:13"
											},
											{
												"body": {
													"nativeSrc": "7084:51:13",
													"nodeType": "YulBlock",
													"src": "7084:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7101:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7101:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7122:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7122:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7106:15:13",
																			"nodeType": "YulIdentifier",
																			"src": "7106:15:13"
																		},
																		"nativeSrc": "7106:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7106:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7094:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7094:6:13"
																},
																"nativeSrc": "7094:35:13",
																"nodeType": "YulFunctionCall",
																"src": "7094:35:13"
															},
															"nativeSrc": "7094:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "7094:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7023:112:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7072:5:13",
														"nodeType": "YulTypedName",
														"src": "7072:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7079:3:13",
														"nodeType": "YulTypedName",
														"src": "7079:3:13",
														"type": ""
													}
												],
												"src": "7023:112:13"
											},
											{
												"body": {
													"nativeSrc": "7235:120:13",
													"nodeType": "YulBlock",
													"src": "7235:120:13",
													"statements": [
														{
															"nativeSrc": "7245:26:13",
															"nodeType": "YulAssignment",
															"src": "7245:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7257:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7257:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7268:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7268:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7253:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7253:3:13"
																},
																"nativeSrc": "7253:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7253:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7245:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7245:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7321:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7321:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7334:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7334:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7345:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7345:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7330:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7330:3:13"
																		},
																		"nativeSrc": "7330:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7330:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7281:39:13",
																	"nodeType": "YulIdentifier",
																	"src": "7281:39:13"
																},
																"nativeSrc": "7281:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7281:67:13"
															},
															"nativeSrc": "7281:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "7281:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7141:214:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7207:9:13",
														"nodeType": "YulTypedName",
														"src": "7207:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7219:6:13",
														"nodeType": "YulTypedName",
														"src": "7219:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7230:4:13",
														"nodeType": "YulTypedName",
														"src": "7230:4:13",
														"type": ""
													}
												],
												"src": "7141:214:13"
											},
											{
												"body": {
													"nativeSrc": "7427:263:13",
													"nodeType": "YulBlock",
													"src": "7427:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7473:83:13",
																"nodeType": "YulBlock",
																"src": "7473:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7475:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7475:77:13"
																			},
																			"nativeSrc": "7475:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7475:79:13"
																		},
																		"nativeSrc": "7475:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7475:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7448:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7448:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7457:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7457:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7444:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7444:3:13"
																		},
																		"nativeSrc": "7444:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7444:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7469:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7469:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7440:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:13"
																},
																"nativeSrc": "7440:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7440:32:13"
															},
															"nativeSrc": "7437:119:13",
															"nodeType": "YulIf",
															"src": "7437:119:13"
														},
														{
															"nativeSrc": "7566:117:13",
															"nodeType": "YulBlock",
															"src": "7566:117:13",
															"statements": [
																{
																	"nativeSrc": "7581:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7581:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7595:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7595:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7585:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7585:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7610:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7610:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7645:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7645:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7656:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7656:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7641:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7641:3:13"
																				},
																				"nativeSrc": "7641:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7641:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7665:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7665:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7620:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7620:20:13"
																		},
																		"nativeSrc": "7620:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7620:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7610:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7610:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7361:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7397:9:13",
														"nodeType": "YulTypedName",
														"src": "7397:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7408:7:13",
														"nodeType": "YulTypedName",
														"src": "7408:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7420:6:13",
														"nodeType": "YulTypedName",
														"src": "7420:6:13",
														"type": ""
													}
												],
												"src": "7361:329:13"
											},
											{
												"body": {
													"nativeSrc": "7761:53:13",
													"nodeType": "YulBlock",
													"src": "7761:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7778:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7778:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7801:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7801:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7783:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "7783:17:13"
																		},
																		"nativeSrc": "7783:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7783:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7771:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7771:6:13"
																},
																"nativeSrc": "7771:37:13",
																"nodeType": "YulFunctionCall",
																"src": "7771:37:13"
															},
															"nativeSrc": "7771:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "7771:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7696:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7749:5:13",
														"nodeType": "YulTypedName",
														"src": "7749:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7756:3:13",
														"nodeType": "YulTypedName",
														"src": "7756:3:13",
														"type": ""
													}
												],
												"src": "7696:118:13"
											},
											{
												"body": {
													"nativeSrc": "7918:124:13",
													"nodeType": "YulBlock",
													"src": "7918:124:13",
													"statements": [
														{
															"nativeSrc": "7928:26:13",
															"nodeType": "YulAssignment",
															"src": "7928:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7940:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7940:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7951:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7951:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7936:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7936:3:13"
																},
																"nativeSrc": "7936:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7936:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7928:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7928:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8008:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8008:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8021:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8021:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8032:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8032:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8017:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8017:3:13"
																		},
																		"nativeSrc": "8017:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8017:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7964:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7964:43:13"
																},
																"nativeSrc": "7964:71:13",
																"nodeType": "YulFunctionCall",
																"src": "7964:71:13"
															},
															"nativeSrc": "7964:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "7964:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7820:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7890:9:13",
														"nodeType": "YulTypedName",
														"src": "7890:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7902:6:13",
														"nodeType": "YulTypedName",
														"src": "7902:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7913:4:13",
														"nodeType": "YulTypedName",
														"src": "7913:4:13",
														"type": ""
													}
												],
												"src": "7820:222:13"
											},
											{
												"body": {
													"nativeSrc": "8137:28:13",
													"nodeType": "YulBlock",
													"src": "8137:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8154:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8154:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8157:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8157:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8147:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8147:6:13"
																},
																"nativeSrc": "8147:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8147:12:13"
															},
															"nativeSrc": "8147:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "8147:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "8048:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "8048:117:13"
											},
											{
												"body": {
													"nativeSrc": "8199:152:13",
													"nodeType": "YulBlock",
													"src": "8199:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8216:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8216:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8219:77:13",
																		"nodeType": "YulLiteral",
																		"src": "8219:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8209:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8209:6:13"
																},
																"nativeSrc": "8209:88:13",
																"nodeType": "YulFunctionCall",
																"src": "8209:88:13"
															},
															"nativeSrc": "8209:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "8209:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8313:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8313:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8316:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8316:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8306:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8306:6:13"
																},
																"nativeSrc": "8306:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8306:15:13"
															},
															"nativeSrc": "8306:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8306:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8337:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8337:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8340:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8340:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8330:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8330:6:13"
																},
																"nativeSrc": "8330:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8330:15:13"
															},
															"nativeSrc": "8330:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8330:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "8171:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "8171:180:13"
											},
											{
												"body": {
													"nativeSrc": "8400:238:13",
													"nodeType": "YulBlock",
													"src": "8400:238:13",
													"statements": [
														{
															"nativeSrc": "8410:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8410:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8432:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8432:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "8462:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8462:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8440:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "8440:21:13"
																		},
																		"nativeSrc": "8440:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8440:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8428:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8428:3:13"
																},
																"nativeSrc": "8428:40:13",
																"nodeType": "YulFunctionCall",
																"src": "8428:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8414:10:13",
																	"nodeType": "YulTypedName",
																	"src": "8414:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8579:22:13",
																"nodeType": "YulBlock",
																"src": "8579:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8581:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8581:16:13"
																			},
																			"nativeSrc": "8581:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8581:18:13"
																		},
																		"nativeSrc": "8581:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8581:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8522:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "8522:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8534:18:13",
																				"nodeType": "YulLiteral",
																				"src": "8534:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8519:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8519:2:13"
																		},
																		"nativeSrc": "8519:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8519:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8558:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "8558:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8570:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8570:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8555:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8555:2:13"
																		},
																		"nativeSrc": "8555:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8555:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8516:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8516:2:13"
																},
																"nativeSrc": "8516:62:13",
																"nodeType": "YulFunctionCall",
																"src": "8516:62:13"
															},
															"nativeSrc": "8513:88:13",
															"nodeType": "YulIf",
															"src": "8513:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8617:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8617:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8621:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "8621:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8610:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8610:6:13"
																},
																"nativeSrc": "8610:22:13",
																"nodeType": "YulFunctionCall",
																"src": "8610:22:13"
															},
															"nativeSrc": "8610:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "8610:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "8357:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8386:6:13",
														"nodeType": "YulTypedName",
														"src": "8386:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8394:4:13",
														"nodeType": "YulTypedName",
														"src": "8394:4:13",
														"type": ""
													}
												],
												"src": "8357:281:13"
											},
											{
												"body": {
													"nativeSrc": "8685:88:13",
													"nodeType": "YulBlock",
													"src": "8685:88:13",
													"statements": [
														{
															"nativeSrc": "8695:30:13",
															"nodeType": "YulAssignment",
															"src": "8695:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8705:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "8705:18:13"
																},
																"nativeSrc": "8705:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8705:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8695:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8695:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8754:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8754:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8762:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8762:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8734:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "8734:19:13"
																},
																"nativeSrc": "8734:33:13",
																"nodeType": "YulFunctionCall",
																"src": "8734:33:13"
															},
															"nativeSrc": "8734:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "8734:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8644:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8669:4:13",
														"nodeType": "YulTypedName",
														"src": "8669:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8678:6:13",
														"nodeType": "YulTypedName",
														"src": "8678:6:13",
														"type": ""
													}
												],
												"src": "8644:129:13"
											},
											{
												"body": {
													"nativeSrc": "8861:229:13",
													"nodeType": "YulBlock",
													"src": "8861:229:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8966:22:13",
																"nodeType": "YulBlock",
																"src": "8966:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8968:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8968:16:13"
																			},
																			"nativeSrc": "8968:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8968:18:13"
																		},
																		"nativeSrc": "8968:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8968:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8938:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8938:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8946:18:13",
																		"nodeType": "YulLiteral",
																		"src": "8946:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8935:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8935:2:13"
																},
																"nativeSrc": "8935:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8935:30:13"
															},
															"nativeSrc": "8932:56:13",
															"nodeType": "YulIf",
															"src": "8932:56:13"
														},
														{
															"nativeSrc": "8998:25:13",
															"nodeType": "YulAssignment",
															"src": "8998:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9010:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9010:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9018:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9018:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9006:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9006:3:13"
																},
																"nativeSrc": "9006:17:13",
																"nodeType": "YulFunctionCall",
																"src": "9006:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8998:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8998:4:13"
																}
															]
														},
														{
															"nativeSrc": "9060:23:13",
															"nodeType": "YulAssignment",
															"src": "9060:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9072:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9072:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9078:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9078:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9068:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9068:3:13"
																},
																"nativeSrc": "9068:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9068:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9060:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9060:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8779:311:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8845:6:13",
														"nodeType": "YulTypedName",
														"src": "8845:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8856:4:13",
														"nodeType": "YulTypedName",
														"src": "8856:4:13",
														"type": ""
													}
												],
												"src": "8779:311:13"
											},
											{
												"body": {
													"nativeSrc": "9185:28:13",
													"nodeType": "YulBlock",
													"src": "9185:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9202:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9202:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9205:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9205:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9195:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9195:6:13"
																},
																"nativeSrc": "9195:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9195:12:13"
															},
															"nativeSrc": "9195:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "9195:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "9096:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "9096:117:13"
											},
											{
												"body": {
													"nativeSrc": "9338:608:13",
													"nodeType": "YulBlock",
													"src": "9338:608:13",
													"statements": [
														{
															"nativeSrc": "9348:90:13",
															"nodeType": "YulAssignment",
															"src": "9348:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9430:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9430:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "9373:56:13",
																			"nodeType": "YulIdentifier",
																			"src": "9373:56:13"
																		},
																		"nativeSrc": "9373:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9373:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9357:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "9357:15:13"
																},
																"nativeSrc": "9357:81:13",
																"nodeType": "YulFunctionCall",
																"src": "9357:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9348:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9348:5:13"
																}
															]
														},
														{
															"nativeSrc": "9447:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9447:16:13",
															"value": {
																"name": "array",
																"nativeSrc": "9458:5:13",
																"nodeType": "YulIdentifier",
																"src": "9458:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9451:3:13",
																	"nodeType": "YulTypedName",
																	"src": "9451:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9480:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9480:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9487:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9487:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9473:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9473:6:13"
																},
																"nativeSrc": "9473:21:13",
																"nodeType": "YulFunctionCall",
																"src": "9473:21:13"
															},
															"nativeSrc": "9473:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "9473:21:13"
														},
														{
															"nativeSrc": "9503:23:13",
															"nodeType": "YulAssignment",
															"src": "9503:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9514:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9514:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9521:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9521:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9510:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9510:3:13"
																},
																"nativeSrc": "9510:16:13",
																"nodeType": "YulFunctionCall",
																"src": "9510:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "9503:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9503:3:13"
																}
															]
														},
														{
															"nativeSrc": "9536:44:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9536:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9554:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9554:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9566:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9566:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9574:4:13",
																				"nodeType": "YulLiteral",
																				"src": "9574:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "9562:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9562:3:13"
																		},
																		"nativeSrc": "9562:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9562:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9550:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9550:3:13"
																},
																"nativeSrc": "9550:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9550:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "9540:6:13",
																	"nodeType": "YulTypedName",
																	"src": "9540:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9608:103:13",
																"nodeType": "YulBlock",
																"src": "9608:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "9622:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9622:77:13"
																			},
																			"nativeSrc": "9622:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9622:79:13"
																		},
																		"nativeSrc": "9622:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9622:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "9595:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9595:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9603:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9603:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9592:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9592:2:13"
																},
																"nativeSrc": "9592:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9592:15:13"
															},
															"nativeSrc": "9589:122:13",
															"nodeType": "YulIf",
															"src": "9589:122:13"
														},
														{
															"body": {
																"nativeSrc": "9796:144:13",
																"nodeType": "YulBlock",
																"src": "9796:144:13",
																"statements": [
																	{
																		"nativeSrc": "9811:21:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9811:21:13",
																		"value": {
																			"name": "src",
																			"nativeSrc": "9829:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9829:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "9815:10:13",
																				"nodeType": "YulTypedName",
																				"src": "9815:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "9853:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9853:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "9879:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "9879:10:13"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "9891:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "9891:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "9858:20:13",
																						"nodeType": "YulIdentifier",
																						"src": "9858:20:13"
																					},
																					"nativeSrc": "9858:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9858:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9846:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9846:6:13"
																			},
																			"nativeSrc": "9846:50:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9846:50:13"
																		},
																		"nativeSrc": "9846:50:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9846:50:13"
																	},
																	{
																		"nativeSrc": "9909:21:13",
																		"nodeType": "YulAssignment",
																		"src": "9909:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "9920:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9920:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9925:4:13",
																					"nodeType": "YulLiteral",
																					"src": "9925:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9916:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9916:3:13"
																			},
																			"nativeSrc": "9916:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9916:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "9909:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9909:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9749:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9749:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "9754:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9754:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9746:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9746:2:13"
																},
																"nativeSrc": "9746:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9746:15:13"
															},
															"nativeSrc": "9720:220:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9762:25:13",
																"nodeType": "YulBlock",
																"src": "9762:25:13",
																"statements": [
																	{
																		"nativeSrc": "9764:21:13",
																		"nodeType": "YulAssignment",
																		"src": "9764:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "9775:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9775:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9780:4:13",
																					"nodeType": "YulLiteral",
																					"src": "9780:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9771:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9771:3:13"
																			},
																			"nativeSrc": "9771:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9771:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "9764:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9764:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9724:21:13",
																"nodeType": "YulBlock",
																"src": "9724:21:13",
																"statements": [
																	{
																		"nativeSrc": "9726:17:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9726:17:13",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "9737:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9737:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "9730:3:13",
																				"nodeType": "YulTypedName",
																				"src": "9730:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9720:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "9236:710:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9308:6:13",
														"nodeType": "YulTypedName",
														"src": "9308:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9316:6:13",
														"nodeType": "YulTypedName",
														"src": "9316:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9324:3:13",
														"nodeType": "YulTypedName",
														"src": "9324:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9332:5:13",
														"nodeType": "YulTypedName",
														"src": "9332:5:13",
														"type": ""
													}
												],
												"src": "9236:710:13"
											},
											{
												"body": {
													"nativeSrc": "10046:293:13",
													"nodeType": "YulBlock",
													"src": "10046:293:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10095:83:13",
																"nodeType": "YulBlock",
																"src": "10095:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10097:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10097:77:13"
																			},
																			"nativeSrc": "10097:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10097:79:13"
																		},
																		"nativeSrc": "10097:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10097:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10074:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10074:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10082:4:13",
																						"nodeType": "YulLiteral",
																						"src": "10082:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10070:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10070:3:13"
																				},
																				"nativeSrc": "10070:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10070:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10089:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10089:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10066:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10066:3:13"
																		},
																		"nativeSrc": "10066:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10066:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10059:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10059:6:13"
																},
																"nativeSrc": "10059:35:13",
																"nodeType": "YulFunctionCall",
																"src": "10059:35:13"
															},
															"nativeSrc": "10056:122:13",
															"nodeType": "YulIf",
															"src": "10056:122:13"
														},
														{
															"nativeSrc": "10187:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10187:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10214:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10214:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10201:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "10201:12:13"
																},
																"nativeSrc": "10201:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10201:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10191:6:13",
																	"nodeType": "YulTypedName",
																	"src": "10191:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10230:103:13",
															"nodeType": "YulAssignment",
															"src": "10230:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10306:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10306:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10314:4:13",
																				"nodeType": "YulLiteral",
																				"src": "10314:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10302:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10302:3:13"
																		},
																		"nativeSrc": "10302:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10302:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10321:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10321:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10329:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10329:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "10239:62:13",
																	"nodeType": "YulIdentifier",
																	"src": "10239:62:13"
																},
																"nativeSrc": "10239:94:13",
																"nodeType": "YulFunctionCall",
																"src": "10239:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10230:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10230:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "9969:370:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10024:6:13",
														"nodeType": "YulTypedName",
														"src": "10024:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10032:3:13",
														"nodeType": "YulTypedName",
														"src": "10032:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10040:5:13",
														"nodeType": "YulTypedName",
														"src": "10040:5:13",
														"type": ""
													}
												],
												"src": "9969:370:13"
											},
											{
												"body": {
													"nativeSrc": "10427:229:13",
													"nodeType": "YulBlock",
													"src": "10427:229:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10532:22:13",
																"nodeType": "YulBlock",
																"src": "10532:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10534:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10534:16:13"
																			},
																			"nativeSrc": "10534:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10534:18:13"
																		},
																		"nativeSrc": "10534:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10534:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10504:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10504:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10512:18:13",
																		"nodeType": "YulLiteral",
																		"src": "10512:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10501:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10501:2:13"
																},
																"nativeSrc": "10501:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10501:30:13"
															},
															"nativeSrc": "10498:56:13",
															"nodeType": "YulIf",
															"src": "10498:56:13"
														},
														{
															"nativeSrc": "10564:25:13",
															"nodeType": "YulAssignment",
															"src": "10564:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10576:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10576:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10584:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10584:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10572:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10572:3:13"
																},
																"nativeSrc": "10572:17:13",
																"nodeType": "YulFunctionCall",
																"src": "10572:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10564:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10564:4:13"
																}
															]
														},
														{
															"nativeSrc": "10626:23:13",
															"nodeType": "YulAssignment",
															"src": "10626:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10638:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10638:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10644:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10644:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10634:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10634:3:13"
																},
																"nativeSrc": "10634:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10634:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10626:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10626:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "10345:311:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10411:6:13",
														"nodeType": "YulTypedName",
														"src": "10411:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10422:4:13",
														"nodeType": "YulTypedName",
														"src": "10422:4:13",
														"type": ""
													}
												],
												"src": "10345:311:13"
											},
											{
												"body": {
													"nativeSrc": "10781:608:13",
													"nodeType": "YulBlock",
													"src": "10781:608:13",
													"statements": [
														{
															"nativeSrc": "10791:90:13",
															"nodeType": "YulAssignment",
															"src": "10791:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10873:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10873:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10816:56:13",
																			"nodeType": "YulIdentifier",
																			"src": "10816:56:13"
																		},
																		"nativeSrc": "10816:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10816:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10800:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "10800:15:13"
																},
																"nativeSrc": "10800:81:13",
																"nodeType": "YulFunctionCall",
																"src": "10800:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10791:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10791:5:13"
																}
															]
														},
														{
															"nativeSrc": "10890:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10890:16:13",
															"value": {
																"name": "array",
																"nativeSrc": "10901:5:13",
																"nodeType": "YulIdentifier",
																"src": "10901:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10894:3:13",
																	"nodeType": "YulTypedName",
																	"src": "10894:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10923:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10923:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10930:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10930:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10916:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10916:6:13"
																},
																"nativeSrc": "10916:21:13",
																"nodeType": "YulFunctionCall",
																"src": "10916:21:13"
															},
															"nativeSrc": "10916:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "10916:21:13"
														},
														{
															"nativeSrc": "10946:23:13",
															"nodeType": "YulAssignment",
															"src": "10946:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10957:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10957:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10964:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10964:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10953:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10953:3:13"
																},
																"nativeSrc": "10953:16:13",
																"nodeType": "YulFunctionCall",
																"src": "10953:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "10946:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10946:3:13"
																}
															]
														},
														{
															"nativeSrc": "10979:44:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10979:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10997:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10997:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11009:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11009:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11017:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11017:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "11005:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11005:3:13"
																		},
																		"nativeSrc": "11005:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11005:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10993:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10993:3:13"
																},
																"nativeSrc": "10993:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10993:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "10983:6:13",
																	"nodeType": "YulTypedName",
																	"src": "10983:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11051:103:13",
																"nodeType": "YulBlock",
																"src": "11051:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "11065:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11065:77:13"
																			},
																			"nativeSrc": "11065:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11065:79:13"
																		},
																		"nativeSrc": "11065:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11065:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "11038:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11038:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11046:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11046:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11035:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11035:2:13"
																},
																"nativeSrc": "11035:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11035:15:13"
															},
															"nativeSrc": "11032:122:13",
															"nodeType": "YulIf",
															"src": "11032:122:13"
														},
														{
															"body": {
																"nativeSrc": "11239:144:13",
																"nodeType": "YulBlock",
																"src": "11239:144:13",
																"statements": [
																	{
																		"nativeSrc": "11254:21:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11254:21:13",
																		"value": {
																			"name": "src",
																			"nativeSrc": "11272:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11272:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "11258:10:13",
																				"nodeType": "YulTypedName",
																				"src": "11258:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "11296:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11296:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "11322:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "11322:10:13"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "11334:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "11334:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "11301:20:13",
																						"nodeType": "YulIdentifier",
																						"src": "11301:20:13"
																					},
																					"nativeSrc": "11301:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "11301:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11289:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11289:6:13"
																			},
																			"nativeSrc": "11289:50:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11289:50:13"
																		},
																		"nativeSrc": "11289:50:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11289:50:13"
																	},
																	{
																		"nativeSrc": "11352:21:13",
																		"nodeType": "YulAssignment",
																		"src": "11352:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "11363:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11363:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11368:4:13",
																					"nodeType": "YulLiteral",
																					"src": "11368:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11359:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11359:3:13"
																			},
																			"nativeSrc": "11359:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11359:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "11352:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11352:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11192:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11192:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "11197:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11197:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11189:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11189:2:13"
																},
																"nativeSrc": "11189:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11189:15:13"
															},
															"nativeSrc": "11163:220:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11205:25:13",
																"nodeType": "YulBlock",
																"src": "11205:25:13",
																"statements": [
																	{
																		"nativeSrc": "11207:21:13",
																		"nodeType": "YulAssignment",
																		"src": "11207:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "11218:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11218:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11223:4:13",
																					"nodeType": "YulLiteral",
																					"src": "11223:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11214:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11214:3:13"
																			},
																			"nativeSrc": "11214:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11214:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "11207:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11207:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11167:21:13",
																"nodeType": "YulBlock",
																"src": "11167:21:13",
																"statements": [
																	{
																		"nativeSrc": "11169:17:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11169:17:13",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "11180:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11180:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "11173:3:13",
																				"nodeType": "YulTypedName",
																				"src": "11173:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "11163:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "10679:710:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10751:6:13",
														"nodeType": "YulTypedName",
														"src": "10751:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10759:6:13",
														"nodeType": "YulTypedName",
														"src": "10759:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10767:3:13",
														"nodeType": "YulTypedName",
														"src": "10767:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10775:5:13",
														"nodeType": "YulTypedName",
														"src": "10775:5:13",
														"type": ""
													}
												],
												"src": "10679:710:13"
											},
											{
												"body": {
													"nativeSrc": "11489:293:13",
													"nodeType": "YulBlock",
													"src": "11489:293:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11538:83:13",
																"nodeType": "YulBlock",
																"src": "11538:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11540:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11540:77:13"
																			},
																			"nativeSrc": "11540:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11540:79:13"
																		},
																		"nativeSrc": "11540:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11540:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11517:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11517:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11525:4:13",
																						"nodeType": "YulLiteral",
																						"src": "11525:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11513:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11513:3:13"
																				},
																				"nativeSrc": "11513:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11513:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11532:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11532:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11509:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11509:3:13"
																		},
																		"nativeSrc": "11509:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11509:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11502:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11502:6:13"
																},
																"nativeSrc": "11502:35:13",
																"nodeType": "YulFunctionCall",
																"src": "11502:35:13"
															},
															"nativeSrc": "11499:122:13",
															"nodeType": "YulIf",
															"src": "11499:122:13"
														},
														{
															"nativeSrc": "11630:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11630:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11657:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11657:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11644:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "11644:12:13"
																},
																"nativeSrc": "11644:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11644:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11634:6:13",
																	"nodeType": "YulTypedName",
																	"src": "11634:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11673:103:13",
															"nodeType": "YulAssignment",
															"src": "11673:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11749:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11749:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11757:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11757:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11745:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11745:3:13"
																		},
																		"nativeSrc": "11745:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11745:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11764:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11764:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11772:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11772:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "11682:62:13",
																	"nodeType": "YulIdentifier",
																	"src": "11682:62:13"
																},
																"nativeSrc": "11682:94:13",
																"nodeType": "YulFunctionCall",
																"src": "11682:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11673:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11673:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "11412:370:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11467:6:13",
														"nodeType": "YulTypedName",
														"src": "11467:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11475:3:13",
														"nodeType": "YulTypedName",
														"src": "11475:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11483:5:13",
														"nodeType": "YulTypedName",
														"src": "11483:5:13",
														"type": ""
													}
												],
												"src": "11412:370:13"
											},
											{
												"body": {
													"nativeSrc": "11921:761:13",
													"nodeType": "YulBlock",
													"src": "11921:761:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11967:83:13",
																"nodeType": "YulBlock",
																"src": "11967:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11969:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11969:77:13"
																			},
																			"nativeSrc": "11969:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11969:79:13"
																		},
																		"nativeSrc": "11969:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11969:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11942:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11942:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11951:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11951:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11938:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11938:3:13"
																		},
																		"nativeSrc": "11938:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11938:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11963:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11963:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11934:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11934:3:13"
																},
																"nativeSrc": "11934:32:13",
																"nodeType": "YulFunctionCall",
																"src": "11934:32:13"
															},
															"nativeSrc": "11931:119:13",
															"nodeType": "YulIf",
															"src": "11931:119:13"
														},
														{
															"nativeSrc": "12060:302:13",
															"nodeType": "YulBlock",
															"src": "12060:302:13",
															"statements": [
																{
																	"nativeSrc": "12075:45:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12075:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12106:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12106:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12117:1:13",
																						"nodeType": "YulLiteral",
																						"src": "12117:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12102:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12102:3:13"
																				},
																				"nativeSrc": "12102:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12102:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12089:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "12089:12:13"
																		},
																		"nativeSrc": "12089:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12089:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12079:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12079:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12167:83:13",
																		"nodeType": "YulBlock",
																		"src": "12167:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12169:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "12169:77:13"
																					},
																					"nativeSrc": "12169:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12169:79:13"
																				},
																				"nativeSrc": "12169:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "12169:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12139:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12139:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12147:18:13",
																				"nodeType": "YulLiteral",
																				"src": "12147:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12136:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12136:2:13"
																		},
																		"nativeSrc": "12136:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12136:30:13"
																	},
																	"nativeSrc": "12133:117:13",
																	"nodeType": "YulIf",
																	"src": "12133:117:13"
																},
																{
																	"nativeSrc": "12264:88:13",
																	"nodeType": "YulAssignment",
																	"src": "12264:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12324:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12324:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12335:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12335:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12320:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12320:3:13"
																				},
																				"nativeSrc": "12320:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12320:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12344:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12344:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "12274:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "12274:45:13"
																		},
																		"nativeSrc": "12274:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12274:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12264:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12264:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12372:303:13",
															"nodeType": "YulBlock",
															"src": "12372:303:13",
															"statements": [
																{
																	"nativeSrc": "12387:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12387:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12418:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12418:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12429:2:13",
																						"nodeType": "YulLiteral",
																						"src": "12429:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12414:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12414:3:13"
																				},
																				"nativeSrc": "12414:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12414:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12401:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "12401:12:13"
																		},
																		"nativeSrc": "12401:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12401:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12391:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12391:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12480:83:13",
																		"nodeType": "YulBlock",
																		"src": "12480:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12482:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "12482:77:13"
																					},
																					"nativeSrc": "12482:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12482:79:13"
																				},
																				"nativeSrc": "12482:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "12482:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12452:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12452:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12460:18:13",
																				"nodeType": "YulLiteral",
																				"src": "12460:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12449:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12449:2:13"
																		},
																		"nativeSrc": "12449:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12449:30:13"
																	},
																	"nativeSrc": "12446:117:13",
																	"nodeType": "YulIf",
																	"src": "12446:117:13"
																},
																{
																	"nativeSrc": "12577:88:13",
																	"nodeType": "YulAssignment",
																	"src": "12577:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12637:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12637:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12648:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12648:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12633:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12633:3:13"
																				},
																				"nativeSrc": "12633:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12633:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12657:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12657:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "12587:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "12587:45:13"
																		},
																		"nativeSrc": "12587:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12587:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12577:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12577:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "11788:894:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11883:9:13",
														"nodeType": "YulTypedName",
														"src": "11883:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11894:7:13",
														"nodeType": "YulTypedName",
														"src": "11894:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11906:6:13",
														"nodeType": "YulTypedName",
														"src": "11906:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11914:6:13",
														"nodeType": "YulTypedName",
														"src": "11914:6:13",
														"type": ""
													}
												],
												"src": "11788:894:13"
											},
											{
												"body": {
													"nativeSrc": "12771:391:13",
													"nodeType": "YulBlock",
													"src": "12771:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12817:83:13",
																"nodeType": "YulBlock",
																"src": "12817:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12819:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12819:77:13"
																			},
																			"nativeSrc": "12819:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12819:79:13"
																		},
																		"nativeSrc": "12819:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12819:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12792:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12792:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12801:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12801:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12788:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12788:3:13"
																		},
																		"nativeSrc": "12788:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12788:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12813:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12813:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12784:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12784:3:13"
																},
																"nativeSrc": "12784:32:13",
																"nodeType": "YulFunctionCall",
																"src": "12784:32:13"
															},
															"nativeSrc": "12781:119:13",
															"nodeType": "YulIf",
															"src": "12781:119:13"
														},
														{
															"nativeSrc": "12910:117:13",
															"nodeType": "YulBlock",
															"src": "12910:117:13",
															"statements": [
																{
																	"nativeSrc": "12925:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12925:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12939:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12939:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12929:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12929:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12954:63:13",
																	"nodeType": "YulAssignment",
																	"src": "12954:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12989:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12989:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13000:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13000:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12985:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12985:3:13"
																				},
																				"nativeSrc": "12985:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12985:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13009:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13009:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12964:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "12964:20:13"
																		},
																		"nativeSrc": "12964:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12964:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12954:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12954:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13037:118:13",
															"nodeType": "YulBlock",
															"src": "13037:118:13",
															"statements": [
																{
																	"nativeSrc": "13052:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13052:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13066:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13066:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13056:6:13",
																			"nodeType": "YulTypedName",
																			"src": "13056:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13082:63:13",
																	"nodeType": "YulAssignment",
																	"src": "13082:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13117:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "13117:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13128:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13128:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13113:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13113:3:13"
																				},
																				"nativeSrc": "13113:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13113:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13137:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13137:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13092:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "13092:20:13"
																		},
																		"nativeSrc": "13092:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13092:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13082:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "13082:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12688:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12733:9:13",
														"nodeType": "YulTypedName",
														"src": "12733:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12744:7:13",
														"nodeType": "YulTypedName",
														"src": "12744:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12756:6:13",
														"nodeType": "YulTypedName",
														"src": "12756:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12764:6:13",
														"nodeType": "YulTypedName",
														"src": "12764:6:13",
														"type": ""
													}
												],
												"src": "12688:474:13"
											},
											{
												"body": {
													"nativeSrc": "13196:152:13",
													"nodeType": "YulBlock",
													"src": "13196:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13213:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13213:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13216:77:13",
																		"nodeType": "YulLiteral",
																		"src": "13216:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13206:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13206:6:13"
																},
																"nativeSrc": "13206:88:13",
																"nodeType": "YulFunctionCall",
																"src": "13206:88:13"
															},
															"nativeSrc": "13206:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "13206:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13310:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13310:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13313:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13313:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13303:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13303:6:13"
																},
																"nativeSrc": "13303:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13303:15:13"
															},
															"nativeSrc": "13303:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13303:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13334:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13334:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13337:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13337:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13327:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13327:6:13"
																},
																"nativeSrc": "13327:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13327:15:13"
															},
															"nativeSrc": "13327:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13327:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13168:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "13168:180:13"
											},
											{
												"body": {
													"nativeSrc": "13405:269:13",
													"nodeType": "YulBlock",
													"src": "13405:269:13",
													"statements": [
														{
															"nativeSrc": "13415:22:13",
															"nodeType": "YulAssignment",
															"src": "13415:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13429:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13429:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13435:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13435:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13425:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13425:3:13"
																},
																"nativeSrc": "13425:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13425:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13415:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13415:6:13"
																}
															]
														},
														{
															"nativeSrc": "13446:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13446:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13476:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13476:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13482:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13482:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13472:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13472:3:13"
																},
																"nativeSrc": "13472:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13472:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13450:18:13",
																	"nodeType": "YulTypedName",
																	"src": "13450:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13523:51:13",
																"nodeType": "YulBlock",
																"src": "13523:51:13",
																"statements": [
																	{
																		"nativeSrc": "13537:27:13",
																		"nodeType": "YulAssignment",
																		"src": "13537:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13551:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "13551:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13559:4:13",
																					"nodeType": "YulLiteral",
																					"src": "13559:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13547:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "13547:3:13"
																			},
																			"nativeSrc": "13547:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13547:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13537:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13537:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13503:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "13503:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13496:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13496:6:13"
																},
																"nativeSrc": "13496:26:13",
																"nodeType": "YulFunctionCall",
																"src": "13496:26:13"
															},
															"nativeSrc": "13493:81:13",
															"nodeType": "YulIf",
															"src": "13493:81:13"
														},
														{
															"body": {
																"nativeSrc": "13626:42:13",
																"nodeType": "YulBlock",
																"src": "13626:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13640:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "13640:16:13"
																			},
																			"nativeSrc": "13640:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13640:18:13"
																		},
																		"nativeSrc": "13640:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13640:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13590:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "13590:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13613:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13613:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13621:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13621:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13610:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "13610:2:13"
																		},
																		"nativeSrc": "13610:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13610:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13587:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13587:2:13"
																},
																"nativeSrc": "13587:38:13",
																"nodeType": "YulFunctionCall",
																"src": "13587:38:13"
															},
															"nativeSrc": "13584:84:13",
															"nodeType": "YulIf",
															"src": "13584:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13354:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13389:4:13",
														"nodeType": "YulTypedName",
														"src": "13389:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13398:6:13",
														"nodeType": "YulTypedName",
														"src": "13398:6:13",
														"type": ""
													}
												],
												"src": "13354:320:13"
											},
											{
												"body": {
													"nativeSrc": "13834:288:13",
													"nodeType": "YulBlock",
													"src": "13834:288:13",
													"statements": [
														{
															"nativeSrc": "13844:26:13",
															"nodeType": "YulAssignment",
															"src": "13844:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13856:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13856:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13867:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13867:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13852:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13852:3:13"
																},
																"nativeSrc": "13852:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13852:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13844:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13844:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13924:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13924:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13937:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13937:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13948:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13948:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13933:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13933:3:13"
																		},
																		"nativeSrc": "13933:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13933:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13880:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13880:43:13"
																},
																"nativeSrc": "13880:71:13",
																"nodeType": "YulFunctionCall",
																"src": "13880:71:13"
															},
															"nativeSrc": "13880:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "13880:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14005:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14005:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14018:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14018:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14029:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14029:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14014:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14014:3:13"
																		},
																		"nativeSrc": "14014:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14014:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13961:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13961:43:13"
																},
																"nativeSrc": "13961:72:13",
																"nodeType": "YulFunctionCall",
																"src": "13961:72:13"
															},
															"nativeSrc": "13961:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "13961:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14087:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14087:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14100:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14100:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14111:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14111:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14096:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14096:3:13"
																		},
																		"nativeSrc": "14096:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14096:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14043:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14043:43:13"
																},
																"nativeSrc": "14043:72:13",
																"nodeType": "YulFunctionCall",
																"src": "14043:72:13"
															},
															"nativeSrc": "14043:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "14043:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13680:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13790:9:13",
														"nodeType": "YulTypedName",
														"src": "13790:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13802:6:13",
														"nodeType": "YulTypedName",
														"src": "13802:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13810:6:13",
														"nodeType": "YulTypedName",
														"src": "13810:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13818:6:13",
														"nodeType": "YulTypedName",
														"src": "13818:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13829:4:13",
														"nodeType": "YulTypedName",
														"src": "13829:4:13",
														"type": ""
													}
												],
												"src": "13680:442:13"
											},
											{
												"body": {
													"nativeSrc": "14168:76:13",
													"nodeType": "YulBlock",
													"src": "14168:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "14222:16:13",
																"nodeType": "YulBlock",
																"src": "14222:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14231:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14231:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14234:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14234:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14224:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14224:6:13"
																			},
																			"nativeSrc": "14224:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14224:12:13"
																		},
																		"nativeSrc": "14224:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14224:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14191:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14191:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14213:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "14213:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "14198:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "14198:14:13"
																				},
																				"nativeSrc": "14198:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14198:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14188:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "14188:2:13"
																		},
																		"nativeSrc": "14188:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14188:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14181:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14181:6:13"
																},
																"nativeSrc": "14181:40:13",
																"nodeType": "YulFunctionCall",
																"src": "14181:40:13"
															},
															"nativeSrc": "14178:60:13",
															"nodeType": "YulIf",
															"src": "14178:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "14128:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14161:5:13",
														"nodeType": "YulTypedName",
														"src": "14161:5:13",
														"type": ""
													}
												],
												"src": "14128:116:13"
											},
											{
												"body": {
													"nativeSrc": "14310:77:13",
													"nodeType": "YulBlock",
													"src": "14310:77:13",
													"statements": [
														{
															"nativeSrc": "14320:22:13",
															"nodeType": "YulAssignment",
															"src": "14320:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14335:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14335:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14329:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "14329:5:13"
																},
																"nativeSrc": "14329:13:13",
																"nodeType": "YulFunctionCall",
																"src": "14329:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14320:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "14320:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14375:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14375:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "14351:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "14351:23:13"
																},
																"nativeSrc": "14351:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14351:30:13"
															},
															"nativeSrc": "14351:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "14351:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "14250:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14288:6:13",
														"nodeType": "YulTypedName",
														"src": "14288:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14296:3:13",
														"nodeType": "YulTypedName",
														"src": "14296:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14304:5:13",
														"nodeType": "YulTypedName",
														"src": "14304:5:13",
														"type": ""
													}
												],
												"src": "14250:137:13"
											},
											{
												"body": {
													"nativeSrc": "14467:271:13",
													"nodeType": "YulBlock",
													"src": "14467:271:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "14513:83:13",
																"nodeType": "YulBlock",
																"src": "14513:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14515:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "14515:77:13"
																			},
																			"nativeSrc": "14515:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14515:79:13"
																		},
																		"nativeSrc": "14515:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14515:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14488:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "14488:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14497:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14497:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14484:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14484:3:13"
																		},
																		"nativeSrc": "14484:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14484:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14509:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14509:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14480:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14480:3:13"
																},
																"nativeSrc": "14480:32:13",
																"nodeType": "YulFunctionCall",
																"src": "14480:32:13"
															},
															"nativeSrc": "14477:119:13",
															"nodeType": "YulIf",
															"src": "14477:119:13"
														},
														{
															"nativeSrc": "14606:125:13",
															"nodeType": "YulBlock",
															"src": "14606:125:13",
															"statements": [
																{
																	"nativeSrc": "14621:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14621:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14635:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14635:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14625:6:13",
																			"nodeType": "YulTypedName",
																			"src": "14625:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14650:71:13",
																	"nodeType": "YulAssignment",
																	"src": "14650:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14693:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "14693:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14704:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "14704:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14689:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14689:3:13"
																				},
																				"nativeSrc": "14689:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14689:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14713:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "14713:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "14660:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "14660:28:13"
																		},
																		"nativeSrc": "14660:61:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14660:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14650:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "14650:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "14393:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14437:9:13",
														"nodeType": "YulTypedName",
														"src": "14437:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14448:7:13",
														"nodeType": "YulTypedName",
														"src": "14448:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14460:6:13",
														"nodeType": "YulTypedName",
														"src": "14460:6:13",
														"type": ""
													}
												],
												"src": "14393:345:13"
											},
											{
												"body": {
													"nativeSrc": "14850:71:13",
													"nodeType": "YulBlock",
													"src": "14850:71:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14872:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14872:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14880:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14880:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14868:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14868:3:13"
																		},
																		"nativeSrc": "14868:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14868:14:13"
																	},
																	{
																		"hexValue": "537461626c6520636f696e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "14884:29:13",
																		"nodeType": "YulLiteral",
																		"src": "14884:29:13",
																		"type": "",
																		"value": "Stable coin transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14861:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14861:6:13"
																},
																"nativeSrc": "14861:53:13",
																"nodeType": "YulFunctionCall",
																"src": "14861:53:13"
															},
															"nativeSrc": "14861:53:13",
															"nodeType": "YulExpressionStatement",
															"src": "14861:53:13"
														}
													]
												},
												"name": "store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
												"nativeSrc": "14744:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14842:6:13",
														"nodeType": "YulTypedName",
														"src": "14842:6:13",
														"type": ""
													}
												],
												"src": "14744:177:13"
											},
											{
												"body": {
													"nativeSrc": "15073:220:13",
													"nodeType": "YulBlock",
													"src": "15073:220:13",
													"statements": [
														{
															"nativeSrc": "15083:74:13",
															"nodeType": "YulAssignment",
															"src": "15083:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15149:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15149:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15154:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15154:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15090:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "15090:58:13"
																},
																"nativeSrc": "15090:67:13",
																"nodeType": "YulFunctionCall",
																"src": "15090:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15083:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15083:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15255:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15255:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																	"nativeSrc": "15166:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "15166:88:13"
																},
																"nativeSrc": "15166:93:13",
																"nodeType": "YulFunctionCall",
																"src": "15166:93:13"
															},
															"nativeSrc": "15166:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "15166:93:13"
														},
														{
															"nativeSrc": "15268:19:13",
															"nodeType": "YulAssignment",
															"src": "15268:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15279:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15279:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15284:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15284:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15275:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15275:3:13"
																},
																"nativeSrc": "15275:12:13",
																"nodeType": "YulFunctionCall",
																"src": "15275:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15268:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15268:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14927:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15061:3:13",
														"nodeType": "YulTypedName",
														"src": "15061:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15069:3:13",
														"nodeType": "YulTypedName",
														"src": "15069:3:13",
														"type": ""
													}
												],
												"src": "14927:366:13"
											},
											{
												"body": {
													"nativeSrc": "15470:248:13",
													"nodeType": "YulBlock",
													"src": "15470:248:13",
													"statements": [
														{
															"nativeSrc": "15480:26:13",
															"nodeType": "YulAssignment",
															"src": "15480:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15492:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15492:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15503:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15503:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15488:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15488:3:13"
																},
																"nativeSrc": "15488:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15488:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15480:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15480:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15527:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15527:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15538:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15538:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15523:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15523:3:13"
																		},
																		"nativeSrc": "15523:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15523:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15546:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "15546:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15552:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15552:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15542:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15542:3:13"
																		},
																		"nativeSrc": "15542:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15542:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15516:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15516:6:13"
																},
																"nativeSrc": "15516:47:13",
																"nodeType": "YulFunctionCall",
																"src": "15516:47:13"
															},
															"nativeSrc": "15516:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "15516:47:13"
														},
														{
															"nativeSrc": "15572:139:13",
															"nodeType": "YulAssignment",
															"src": "15572:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15706:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15706:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15580:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "15580:124:13"
																},
																"nativeSrc": "15580:131:13",
																"nodeType": "YulFunctionCall",
																"src": "15580:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15572:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15572:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15299:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15450:9:13",
														"nodeType": "YulTypedName",
														"src": "15450:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15465:4:13",
														"nodeType": "YulTypedName",
														"src": "15465:4:13",
														"type": ""
													}
												],
												"src": "15299:419:13"
											},
											{
												"body": {
													"nativeSrc": "15850:206:13",
													"nodeType": "YulBlock",
													"src": "15850:206:13",
													"statements": [
														{
															"nativeSrc": "15860:26:13",
															"nodeType": "YulAssignment",
															"src": "15860:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15872:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15872:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15883:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15883:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15868:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15868:3:13"
																},
																"nativeSrc": "15868:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15868:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15860:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15860:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15940:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15940:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15953:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15953:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15964:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15964:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15949:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15949:3:13"
																		},
																		"nativeSrc": "15949:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15949:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15896:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "15896:43:13"
																},
																"nativeSrc": "15896:71:13",
																"nodeType": "YulFunctionCall",
																"src": "15896:71:13"
															},
															"nativeSrc": "15896:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "15896:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16021:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16021:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16034:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16034:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16045:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16045:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16030:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16030:3:13"
																		},
																		"nativeSrc": "16030:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16030:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15977:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "15977:43:13"
																},
																"nativeSrc": "15977:72:13",
																"nodeType": "YulFunctionCall",
																"src": "15977:72:13"
															},
															"nativeSrc": "15977:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "15977:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15724:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15814:9:13",
														"nodeType": "YulTypedName",
														"src": "15814:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15826:6:13",
														"nodeType": "YulTypedName",
														"src": "15826:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15834:6:13",
														"nodeType": "YulTypedName",
														"src": "15834:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15845:4:13",
														"nodeType": "YulTypedName",
														"src": "15845:4:13",
														"type": ""
													}
												],
												"src": "15724:332:13"
											},
											{
												"body": {
													"nativeSrc": "16168:70:13",
													"nodeType": "YulBlock",
													"src": "16168:70:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16190:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16190:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16198:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16198:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16186:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16186:3:13"
																		},
																		"nativeSrc": "16186:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16186:14:13"
																	},
																	{
																		"hexValue": "426f6e6420746f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "16202:28:13",
																		"nodeType": "YulLiteral",
																		"src": "16202:28:13",
																		"type": "",
																		"value": "Bond token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16179:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16179:6:13"
																},
																"nativeSrc": "16179:52:13",
																"nodeType": "YulFunctionCall",
																"src": "16179:52:13"
															},
															"nativeSrc": "16179:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "16179:52:13"
														}
													]
												},
												"name": "store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
												"nativeSrc": "16062:176:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16160:6:13",
														"nodeType": "YulTypedName",
														"src": "16160:6:13",
														"type": ""
													}
												],
												"src": "16062:176:13"
											},
											{
												"body": {
													"nativeSrc": "16390:220:13",
													"nodeType": "YulBlock",
													"src": "16390:220:13",
													"statements": [
														{
															"nativeSrc": "16400:74:13",
															"nodeType": "YulAssignment",
															"src": "16400:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16466:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16466:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16471:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16471:2:13",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16407:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "16407:58:13"
																},
																"nativeSrc": "16407:67:13",
																"nodeType": "YulFunctionCall",
																"src": "16407:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16400:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16572:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16572:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																	"nativeSrc": "16483:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "16483:88:13"
																},
																"nativeSrc": "16483:93:13",
																"nodeType": "YulFunctionCall",
																"src": "16483:93:13"
															},
															"nativeSrc": "16483:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "16483:93:13"
														},
														{
															"nativeSrc": "16585:19:13",
															"nodeType": "YulAssignment",
															"src": "16585:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16596:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16596:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16601:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16601:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16592:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16592:3:13"
																},
																"nativeSrc": "16592:12:13",
																"nodeType": "YulFunctionCall",
																"src": "16592:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16585:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16585:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16244:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16378:3:13",
														"nodeType": "YulTypedName",
														"src": "16378:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16386:3:13",
														"nodeType": "YulTypedName",
														"src": "16386:3:13",
														"type": ""
													}
												],
												"src": "16244:366:13"
											},
											{
												"body": {
													"nativeSrc": "16787:248:13",
													"nodeType": "YulBlock",
													"src": "16787:248:13",
													"statements": [
														{
															"nativeSrc": "16797:26:13",
															"nodeType": "YulAssignment",
															"src": "16797:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16809:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16809:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16820:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16820:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16805:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16805:3:13"
																},
																"nativeSrc": "16805:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16805:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16797:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16797:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16844:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16844:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16855:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16855:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16840:3:13"
																		},
																		"nativeSrc": "16840:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16840:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16863:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16863:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16869:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16869:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16859:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16859:3:13"
																		},
																		"nativeSrc": "16859:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16859:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16833:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16833:6:13"
																},
																"nativeSrc": "16833:47:13",
																"nodeType": "YulFunctionCall",
																"src": "16833:47:13"
															},
															"nativeSrc": "16833:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "16833:47:13"
														},
														{
															"nativeSrc": "16889:139:13",
															"nodeType": "YulAssignment",
															"src": "16889:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17023:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17023:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16897:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "16897:124:13"
																},
																"nativeSrc": "16897:131:13",
																"nodeType": "YulFunctionCall",
																"src": "16897:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16889:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16889:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16616:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16767:9:13",
														"nodeType": "YulTypedName",
														"src": "16767:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16782:4:13",
														"nodeType": "YulTypedName",
														"src": "16782:4:13",
														"type": ""
													}
												],
												"src": "16616:419:13"
											},
											{
												"body": {
													"nativeSrc": "17104:80:13",
													"nodeType": "YulBlock",
													"src": "17104:80:13",
													"statements": [
														{
															"nativeSrc": "17114:22:13",
															"nodeType": "YulAssignment",
															"src": "17114:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17129:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17129:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17123:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "17123:5:13"
																},
																"nativeSrc": "17123:13:13",
																"nodeType": "YulFunctionCall",
																"src": "17123:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17114:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "17114:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17172:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "17172:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "17145:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "17145:26:13"
																},
																"nativeSrc": "17145:33:13",
																"nodeType": "YulFunctionCall",
																"src": "17145:33:13"
															},
															"nativeSrc": "17145:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "17145:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "17041:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17082:6:13",
														"nodeType": "YulTypedName",
														"src": "17082:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17090:3:13",
														"nodeType": "YulTypedName",
														"src": "17090:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17098:5:13",
														"nodeType": "YulTypedName",
														"src": "17098:5:13",
														"type": ""
													}
												],
												"src": "17041:143:13"
											},
											{
												"body": {
													"nativeSrc": "17267:274:13",
													"nodeType": "YulBlock",
													"src": "17267:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "17313:83:13",
																"nodeType": "YulBlock",
																"src": "17313:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17315:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "17315:77:13"
																			},
																			"nativeSrc": "17315:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17315:79:13"
																		},
																		"nativeSrc": "17315:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17315:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17288:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17288:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17297:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17297:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17284:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17284:3:13"
																		},
																		"nativeSrc": "17284:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17284:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17309:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17309:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17280:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17280:3:13"
																},
																"nativeSrc": "17280:32:13",
																"nodeType": "YulFunctionCall",
																"src": "17280:32:13"
															},
															"nativeSrc": "17277:119:13",
															"nodeType": "YulIf",
															"src": "17277:119:13"
														},
														{
															"nativeSrc": "17406:128:13",
															"nodeType": "YulBlock",
															"src": "17406:128:13",
															"statements": [
																{
																	"nativeSrc": "17421:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17421:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17435:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17435:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17425:6:13",
																			"nodeType": "YulTypedName",
																			"src": "17425:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17450:74:13",
																	"nodeType": "YulAssignment",
																	"src": "17450:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17496:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17496:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17507:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "17507:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17492:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17492:3:13"
																				},
																				"nativeSrc": "17492:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17492:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17516:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17516:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "17460:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "17460:31:13"
																		},
																		"nativeSrc": "17460:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17460:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17450:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "17450:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "17190:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17237:9:13",
														"nodeType": "YulTypedName",
														"src": "17237:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17248:7:13",
														"nodeType": "YulTypedName",
														"src": "17248:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17260:6:13",
														"nodeType": "YulTypedName",
														"src": "17260:6:13",
														"type": ""
													}
												],
												"src": "17190:351:13"
											},
											{
												"body": {
													"nativeSrc": "17653:122:13",
													"nodeType": "YulBlock",
													"src": "17653:122:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17675:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17675:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17683:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17683:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17671:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17671:3:13"
																		},
																		"nativeSrc": "17671:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17671:14:13"
																	},
																	{
																		"hexValue": "546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e677468",
																		"kind": "string",
																		"nativeSrc": "17687:34:13",
																		"nodeType": "YulLiteral",
																		"src": "17687:34:13",
																		"type": "",
																		"value": "Token holders and amounts length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17664:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17664:6:13"
																},
																"nativeSrc": "17664:58:13",
																"nodeType": "YulFunctionCall",
																"src": "17664:58:13"
															},
															"nativeSrc": "17664:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "17664:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17743:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17743:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17751:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17751:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17739:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17739:3:13"
																		},
																		"nativeSrc": "17739:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17739:15:13"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "17756:11:13",
																		"nodeType": "YulLiteral",
																		"src": "17756:11:13",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17732:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17732:6:13"
																},
																"nativeSrc": "17732:36:13",
																"nodeType": "YulFunctionCall",
																"src": "17732:36:13"
															},
															"nativeSrc": "17732:36:13",
															"nodeType": "YulExpressionStatement",
															"src": "17732:36:13"
														}
													]
												},
												"name": "store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f",
												"nativeSrc": "17547:228:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17645:6:13",
														"nodeType": "YulTypedName",
														"src": "17645:6:13",
														"type": ""
													}
												],
												"src": "17547:228:13"
											},
											{
												"body": {
													"nativeSrc": "17927:220:13",
													"nodeType": "YulBlock",
													"src": "17927:220:13",
													"statements": [
														{
															"nativeSrc": "17937:74:13",
															"nodeType": "YulAssignment",
															"src": "17937:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18003:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18003:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18008:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18008:2:13",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17944:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "17944:58:13"
																},
																"nativeSrc": "17944:67:13",
																"nodeType": "YulFunctionCall",
																"src": "17944:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17937:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17937:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18109:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18109:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f",
																	"nativeSrc": "18020:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "18020:88:13"
																},
																"nativeSrc": "18020:93:13",
																"nodeType": "YulFunctionCall",
																"src": "18020:93:13"
															},
															"nativeSrc": "18020:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "18020:93:13"
														},
														{
															"nativeSrc": "18122:19:13",
															"nodeType": "YulAssignment",
															"src": "18122:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18133:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18133:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18138:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18138:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18129:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18129:3:13"
																},
																"nativeSrc": "18129:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18129:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18122:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18122:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17781:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17915:3:13",
														"nodeType": "YulTypedName",
														"src": "17915:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17923:3:13",
														"nodeType": "YulTypedName",
														"src": "17923:3:13",
														"type": ""
													}
												],
												"src": "17781:366:13"
											},
											{
												"body": {
													"nativeSrc": "18324:248:13",
													"nodeType": "YulBlock",
													"src": "18324:248:13",
													"statements": [
														{
															"nativeSrc": "18334:26:13",
															"nodeType": "YulAssignment",
															"src": "18334:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18346:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18346:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18357:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18357:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18342:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18342:3:13"
																},
																"nativeSrc": "18342:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18342:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18334:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18334:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18381:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18381:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18392:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18392:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18377:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18377:3:13"
																		},
																		"nativeSrc": "18377:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18377:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18400:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "18400:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18406:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18406:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18396:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18396:3:13"
																		},
																		"nativeSrc": "18396:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18396:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18370:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18370:6:13"
																},
																"nativeSrc": "18370:47:13",
																"nodeType": "YulFunctionCall",
																"src": "18370:47:13"
															},
															"nativeSrc": "18370:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "18370:47:13"
														},
														{
															"nativeSrc": "18426:139:13",
															"nodeType": "YulAssignment",
															"src": "18426:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18560:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18560:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18434:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "18434:124:13"
																},
																"nativeSrc": "18434:131:13",
																"nodeType": "YulFunctionCall",
																"src": "18434:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18426:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18426:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18153:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18304:9:13",
														"nodeType": "YulTypedName",
														"src": "18304:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18319:4:13",
														"nodeType": "YulTypedName",
														"src": "18319:4:13",
														"type": ""
													}
												],
												"src": "18153:419:13"
											},
											{
												"body": {
													"nativeSrc": "18606:152:13",
													"nodeType": "YulBlock",
													"src": "18606:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18623:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18623:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18626:77:13",
																		"nodeType": "YulLiteral",
																		"src": "18626:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18616:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18616:6:13"
																},
																"nativeSrc": "18616:88:13",
																"nodeType": "YulFunctionCall",
																"src": "18616:88:13"
															},
															"nativeSrc": "18616:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "18616:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18720:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18720:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18723:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18723:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18713:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18713:6:13"
																},
																"nativeSrc": "18713:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18713:15:13"
															},
															"nativeSrc": "18713:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18713:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18744:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18744:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18747:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18747:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18737:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18737:6:13"
																},
																"nativeSrc": "18737:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18737:15:13"
															},
															"nativeSrc": "18737:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18737:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "18578:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "18578:180:13"
											},
											{
												"body": {
													"nativeSrc": "18870:59:13",
													"nodeType": "YulBlock",
													"src": "18870:59:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18892:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18892:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18900:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18900:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18888:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18888:3:13"
																		},
																		"nativeSrc": "18888:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18888:14:13"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "18904:17:13",
																		"nodeType": "YulLiteral",
																		"src": "18904:17:13",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18881:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18881:6:13"
																},
																"nativeSrc": "18881:41:13",
																"nodeType": "YulFunctionCall",
																"src": "18881:41:13"
															},
															"nativeSrc": "18881:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "18881:41:13"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "18764:165:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18862:6:13",
														"nodeType": "YulTypedName",
														"src": "18862:6:13",
														"type": ""
													}
												],
												"src": "18764:165:13"
											},
											{
												"body": {
													"nativeSrc": "19081:220:13",
													"nodeType": "YulBlock",
													"src": "19081:220:13",
													"statements": [
														{
															"nativeSrc": "19091:74:13",
															"nodeType": "YulAssignment",
															"src": "19091:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19157:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19157:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19162:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19162:2:13",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19098:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "19098:58:13"
																},
																"nativeSrc": "19098:67:13",
																"nodeType": "YulFunctionCall",
																"src": "19098:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19091:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19091:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19263:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "19174:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "19174:88:13"
																},
																"nativeSrc": "19174:93:13",
																"nodeType": "YulFunctionCall",
																"src": "19174:93:13"
															},
															"nativeSrc": "19174:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "19174:93:13"
														},
														{
															"nativeSrc": "19276:19:13",
															"nodeType": "YulAssignment",
															"src": "19276:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19287:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19287:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19292:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19292:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19283:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19283:3:13"
																},
																"nativeSrc": "19283:12:13",
																"nodeType": "YulFunctionCall",
																"src": "19283:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19276:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19276:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18935:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19069:3:13",
														"nodeType": "YulTypedName",
														"src": "19069:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19077:3:13",
														"nodeType": "YulTypedName",
														"src": "19077:3:13",
														"type": ""
													}
												],
												"src": "18935:366:13"
											},
											{
												"body": {
													"nativeSrc": "19478:248:13",
													"nodeType": "YulBlock",
													"src": "19478:248:13",
													"statements": [
														{
															"nativeSrc": "19488:26:13",
															"nodeType": "YulAssignment",
															"src": "19488:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19500:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19500:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19511:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19511:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19496:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19496:3:13"
																},
																"nativeSrc": "19496:18:13",
																"nodeType": "YulFunctionCall",
																"src": "19496:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19488:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19488:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19535:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19535:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19546:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19546:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19531:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19531:3:13"
																		},
																		"nativeSrc": "19531:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19531:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19554:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "19554:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19560:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19560:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19550:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19550:3:13"
																		},
																		"nativeSrc": "19550:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19550:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19524:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19524:6:13"
																},
																"nativeSrc": "19524:47:13",
																"nodeType": "YulFunctionCall",
																"src": "19524:47:13"
															},
															"nativeSrc": "19524:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "19524:47:13"
														},
														{
															"nativeSrc": "19580:139:13",
															"nodeType": "YulAssignment",
															"src": "19580:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19714:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19714:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19588:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "19588:124:13"
																},
																"nativeSrc": "19588:131:13",
																"nodeType": "YulFunctionCall",
																"src": "19588:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19580:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19580:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19307:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19458:9:13",
														"nodeType": "YulTypedName",
														"src": "19458:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19473:4:13",
														"nodeType": "YulTypedName",
														"src": "19473:4:13",
														"type": ""
													}
												],
												"src": "19307:419:13"
											},
											{
												"body": {
													"nativeSrc": "19838:68:13",
													"nodeType": "YulBlock",
													"src": "19838:68:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19860:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19860:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19868:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19868:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19856:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19856:3:13"
																		},
																		"nativeSrc": "19856:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19856:14:13"
																	},
																	{
																		"hexValue": "4d61747572697479206e6f74207965742072656163686564",
																		"kind": "string",
																		"nativeSrc": "19872:26:13",
																		"nodeType": "YulLiteral",
																		"src": "19872:26:13",
																		"type": "",
																		"value": "Maturity not yet reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19849:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19849:6:13"
																},
																"nativeSrc": "19849:50:13",
																"nodeType": "YulFunctionCall",
																"src": "19849:50:13"
															},
															"nativeSrc": "19849:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "19849:50:13"
														}
													]
												},
												"name": "store_literal_in_memory_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55",
												"nativeSrc": "19732:174:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19830:6:13",
														"nodeType": "YulTypedName",
														"src": "19830:6:13",
														"type": ""
													}
												],
												"src": "19732:174:13"
											},
											{
												"body": {
													"nativeSrc": "20058:220:13",
													"nodeType": "YulBlock",
													"src": "20058:220:13",
													"statements": [
														{
															"nativeSrc": "20068:74:13",
															"nodeType": "YulAssignment",
															"src": "20068:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20134:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20134:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20139:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20139:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20075:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "20075:58:13"
																},
																"nativeSrc": "20075:67:13",
																"nodeType": "YulFunctionCall",
																"src": "20075:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20068:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20068:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20240:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20240:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55",
																	"nativeSrc": "20151:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "20151:88:13"
																},
																"nativeSrc": "20151:93:13",
																"nodeType": "YulFunctionCall",
																"src": "20151:93:13"
															},
															"nativeSrc": "20151:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "20151:93:13"
														},
														{
															"nativeSrc": "20253:19:13",
															"nodeType": "YulAssignment",
															"src": "20253:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20264:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20264:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20269:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20269:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20260:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20260:3:13"
																},
																"nativeSrc": "20260:12:13",
																"nodeType": "YulFunctionCall",
																"src": "20260:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20253:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20253:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19912:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20046:3:13",
														"nodeType": "YulTypedName",
														"src": "20046:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20054:3:13",
														"nodeType": "YulTypedName",
														"src": "20054:3:13",
														"type": ""
													}
												],
												"src": "19912:366:13"
											},
											{
												"body": {
													"nativeSrc": "20455:248:13",
													"nodeType": "YulBlock",
													"src": "20455:248:13",
													"statements": [
														{
															"nativeSrc": "20465:26:13",
															"nodeType": "YulAssignment",
															"src": "20465:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20477:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20477:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20488:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20488:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20473:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20473:3:13"
																},
																"nativeSrc": "20473:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20473:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20465:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20465:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20512:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20512:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20523:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20523:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20508:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20508:3:13"
																		},
																		"nativeSrc": "20508:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20508:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20531:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "20531:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20537:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20537:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20527:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20527:3:13"
																		},
																		"nativeSrc": "20527:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20527:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20501:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20501:6:13"
																},
																"nativeSrc": "20501:47:13",
																"nodeType": "YulFunctionCall",
																"src": "20501:47:13"
															},
															"nativeSrc": "20501:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "20501:47:13"
														},
														{
															"nativeSrc": "20557:139:13",
															"nodeType": "YulAssignment",
															"src": "20557:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20691:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "20691:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20565:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "20565:124:13"
																},
																"nativeSrc": "20565:131:13",
																"nodeType": "YulFunctionCall",
																"src": "20565:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20557:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20557:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20284:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20435:9:13",
														"nodeType": "YulTypedName",
														"src": "20435:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20450:4:13",
														"nodeType": "YulTypedName",
														"src": "20450:4:13",
														"type": ""
													}
												],
												"src": "20284:419:13"
											},
											{
												"body": {
													"nativeSrc": "20815:66:13",
													"nodeType": "YulBlock",
													"src": "20815:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20837:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20837:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20845:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20845:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20833:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20833:3:13"
																		},
																		"nativeSrc": "20833:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20833:14:13"
																	},
																	{
																		"hexValue": "43616e277420636c61696d207a65726f20636f696e73",
																		"kind": "string",
																		"nativeSrc": "20849:24:13",
																		"nodeType": "YulLiteral",
																		"src": "20849:24:13",
																		"type": "",
																		"value": "Can't claim zero coins"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20826:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20826:6:13"
																},
																"nativeSrc": "20826:48:13",
																"nodeType": "YulFunctionCall",
																"src": "20826:48:13"
															},
															"nativeSrc": "20826:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "20826:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464",
												"nativeSrc": "20709:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20807:6:13",
														"nodeType": "YulTypedName",
														"src": "20807:6:13",
														"type": ""
													}
												],
												"src": "20709:172:13"
											},
											{
												"body": {
													"nativeSrc": "21033:220:13",
													"nodeType": "YulBlock",
													"src": "21033:220:13",
													"statements": [
														{
															"nativeSrc": "21043:74:13",
															"nodeType": "YulAssignment",
															"src": "21043:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21109:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21109:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21114:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21114:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21050:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "21050:58:13"
																},
																"nativeSrc": "21050:67:13",
																"nodeType": "YulFunctionCall",
																"src": "21050:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21043:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21043:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21215:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21215:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464",
																	"nativeSrc": "21126:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "21126:88:13"
																},
																"nativeSrc": "21126:93:13",
																"nodeType": "YulFunctionCall",
																"src": "21126:93:13"
															},
															"nativeSrc": "21126:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "21126:93:13"
														},
														{
															"nativeSrc": "21228:19:13",
															"nodeType": "YulAssignment",
															"src": "21228:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21239:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21239:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21244:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21244:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21235:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21235:3:13"
																},
																"nativeSrc": "21235:12:13",
																"nodeType": "YulFunctionCall",
																"src": "21235:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21228:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21228:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20887:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21021:3:13",
														"nodeType": "YulTypedName",
														"src": "21021:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21029:3:13",
														"nodeType": "YulTypedName",
														"src": "21029:3:13",
														"type": ""
													}
												],
												"src": "20887:366:13"
											},
											{
												"body": {
													"nativeSrc": "21430:248:13",
													"nodeType": "YulBlock",
													"src": "21430:248:13",
													"statements": [
														{
															"nativeSrc": "21440:26:13",
															"nodeType": "YulAssignment",
															"src": "21440:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21452:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21452:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21463:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21463:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21448:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21448:3:13"
																},
																"nativeSrc": "21448:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21448:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21440:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21440:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21487:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21487:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21498:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21498:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21483:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21483:3:13"
																		},
																		"nativeSrc": "21483:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21483:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21506:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "21506:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21512:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21512:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21502:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21502:3:13"
																		},
																		"nativeSrc": "21502:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21502:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21476:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21476:6:13"
																},
																"nativeSrc": "21476:47:13",
																"nodeType": "YulFunctionCall",
																"src": "21476:47:13"
															},
															"nativeSrc": "21476:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "21476:47:13"
														},
														{
															"nativeSrc": "21532:139:13",
															"nodeType": "YulAssignment",
															"src": "21532:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21666:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "21666:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21540:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "21540:124:13"
																},
																"nativeSrc": "21540:131:13",
																"nodeType": "YulFunctionCall",
																"src": "21540:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21532:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21532:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21259:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21410:9:13",
														"nodeType": "YulTypedName",
														"src": "21410:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21425:4:13",
														"nodeType": "YulTypedName",
														"src": "21425:4:13",
														"type": ""
													}
												],
												"src": "21259:419:13"
											},
											{
												"body": {
													"nativeSrc": "21790:72:13",
													"nodeType": "YulBlock",
													"src": "21790:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21812:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "21812:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21820:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21820:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21808:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21808:3:13"
																		},
																		"nativeSrc": "21808:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21808:14:13"
																	},
																	{
																		"hexValue": "4e6f20696e766573746f722066756e647320617661696c61626c652e",
																		"kind": "string",
																		"nativeSrc": "21824:30:13",
																		"nodeType": "YulLiteral",
																		"src": "21824:30:13",
																		"type": "",
																		"value": "No investor funds available."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21801:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21801:6:13"
																},
																"nativeSrc": "21801:54:13",
																"nodeType": "YulFunctionCall",
																"src": "21801:54:13"
															},
															"nativeSrc": "21801:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "21801:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15",
												"nativeSrc": "21684:178:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21782:6:13",
														"nodeType": "YulTypedName",
														"src": "21782:6:13",
														"type": ""
													}
												],
												"src": "21684:178:13"
											},
											{
												"body": {
													"nativeSrc": "22014:220:13",
													"nodeType": "YulBlock",
													"src": "22014:220:13",
													"statements": [
														{
															"nativeSrc": "22024:74:13",
															"nodeType": "YulAssignment",
															"src": "22024:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22090:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22090:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22095:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22095:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22031:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "22031:58:13"
																},
																"nativeSrc": "22031:67:13",
																"nodeType": "YulFunctionCall",
																"src": "22031:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22024:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22024:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22196:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22196:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15",
																	"nativeSrc": "22107:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "22107:88:13"
																},
																"nativeSrc": "22107:93:13",
																"nodeType": "YulFunctionCall",
																"src": "22107:93:13"
															},
															"nativeSrc": "22107:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "22107:93:13"
														},
														{
															"nativeSrc": "22209:19:13",
															"nodeType": "YulAssignment",
															"src": "22209:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22220:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22220:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22225:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22225:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22216:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22216:3:13"
																},
																"nativeSrc": "22216:12:13",
																"nodeType": "YulFunctionCall",
																"src": "22216:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22209:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22209:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21868:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22002:3:13",
														"nodeType": "YulTypedName",
														"src": "22002:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22010:3:13",
														"nodeType": "YulTypedName",
														"src": "22010:3:13",
														"type": ""
													}
												],
												"src": "21868:366:13"
											},
											{
												"body": {
													"nativeSrc": "22411:248:13",
													"nodeType": "YulBlock",
													"src": "22411:248:13",
													"statements": [
														{
															"nativeSrc": "22421:26:13",
															"nodeType": "YulAssignment",
															"src": "22421:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22433:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22433:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22444:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22444:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22429:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22429:3:13"
																},
																"nativeSrc": "22429:18:13",
																"nodeType": "YulFunctionCall",
																"src": "22429:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22421:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22421:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22468:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22468:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22479:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22479:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22464:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22464:3:13"
																		},
																		"nativeSrc": "22464:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22464:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22487:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "22487:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22493:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22493:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22483:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22483:3:13"
																		},
																		"nativeSrc": "22483:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22483:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22457:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22457:6:13"
																},
																"nativeSrc": "22457:47:13",
																"nodeType": "YulFunctionCall",
																"src": "22457:47:13"
															},
															"nativeSrc": "22457:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "22457:47:13"
														},
														{
															"nativeSrc": "22513:139:13",
															"nodeType": "YulAssignment",
															"src": "22513:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22647:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "22647:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22521:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "22521:124:13"
																},
																"nativeSrc": "22521:131:13",
																"nodeType": "YulFunctionCall",
																"src": "22521:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22513:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22513:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22240:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22391:9:13",
														"nodeType": "YulTypedName",
														"src": "22391:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22406:4:13",
														"nodeType": "YulTypedName",
														"src": "22406:4:13",
														"type": ""
													}
												],
												"src": "22240:419:13"
											},
											{
												"body": {
													"nativeSrc": "22771:75:13",
													"nodeType": "YulBlock",
													"src": "22771:75:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22793:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "22793:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22801:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22801:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22789:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22789:3:13"
																		},
																		"nativeSrc": "22789:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22789:14:13"
																	},
																	{
																		"hexValue": "4661696c656420746f207472616e7366657220737461626c6520636f696e73",
																		"kind": "string",
																		"nativeSrc": "22805:33:13",
																		"nodeType": "YulLiteral",
																		"src": "22805:33:13",
																		"type": "",
																		"value": "Failed to transfer stable coins"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22782:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22782:6:13"
																},
																"nativeSrc": "22782:57:13",
																"nodeType": "YulFunctionCall",
																"src": "22782:57:13"
															},
															"nativeSrc": "22782:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "22782:57:13"
														}
													]
												},
												"name": "store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b",
												"nativeSrc": "22665:181:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22763:6:13",
														"nodeType": "YulTypedName",
														"src": "22763:6:13",
														"type": ""
													}
												],
												"src": "22665:181:13"
											},
											{
												"body": {
													"nativeSrc": "22998:220:13",
													"nodeType": "YulBlock",
													"src": "22998:220:13",
													"statements": [
														{
															"nativeSrc": "23008:74:13",
															"nodeType": "YulAssignment",
															"src": "23008:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23074:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23074:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23079:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23079:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23015:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "23015:58:13"
																},
																"nativeSrc": "23015:67:13",
																"nodeType": "YulFunctionCall",
																"src": "23015:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23008:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23008:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23180:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23180:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b",
																	"nativeSrc": "23091:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "23091:88:13"
																},
																"nativeSrc": "23091:93:13",
																"nodeType": "YulFunctionCall",
																"src": "23091:93:13"
															},
															"nativeSrc": "23091:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "23091:93:13"
														},
														{
															"nativeSrc": "23193:19:13",
															"nodeType": "YulAssignment",
															"src": "23193:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23204:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23204:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23209:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23209:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23200:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23200:3:13"
																},
																"nativeSrc": "23200:12:13",
																"nodeType": "YulFunctionCall",
																"src": "23200:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23193:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23193:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22852:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22986:3:13",
														"nodeType": "YulTypedName",
														"src": "22986:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22994:3:13",
														"nodeType": "YulTypedName",
														"src": "22994:3:13",
														"type": ""
													}
												],
												"src": "22852:366:13"
											},
											{
												"body": {
													"nativeSrc": "23395:248:13",
													"nodeType": "YulBlock",
													"src": "23395:248:13",
													"statements": [
														{
															"nativeSrc": "23405:26:13",
															"nodeType": "YulAssignment",
															"src": "23405:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23417:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23417:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23428:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23428:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23413:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23413:3:13"
																},
																"nativeSrc": "23413:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23413:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23405:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23405:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23452:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23452:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23463:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23463:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23448:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23448:3:13"
																		},
																		"nativeSrc": "23448:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23448:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23471:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "23471:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23477:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23477:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23467:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23467:3:13"
																		},
																		"nativeSrc": "23467:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23467:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23441:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23441:6:13"
																},
																"nativeSrc": "23441:47:13",
																"nodeType": "YulFunctionCall",
																"src": "23441:47:13"
															},
															"nativeSrc": "23441:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "23441:47:13"
														},
														{
															"nativeSrc": "23497:139:13",
															"nodeType": "YulAssignment",
															"src": "23497:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23631:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23631:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23505:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "23505:124:13"
																},
																"nativeSrc": "23505:131:13",
																"nodeType": "YulFunctionCall",
																"src": "23505:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23497:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23497:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23224:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23375:9:13",
														"nodeType": "YulTypedName",
														"src": "23375:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23390:4:13",
														"nodeType": "YulTypedName",
														"src": "23390:4:13",
														"type": ""
													}
												],
												"src": "23224:419:13"
											},
											{
												"body": {
													"nativeSrc": "23803:288:13",
													"nodeType": "YulBlock",
													"src": "23803:288:13",
													"statements": [
														{
															"nativeSrc": "23813:26:13",
															"nodeType": "YulAssignment",
															"src": "23813:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23825:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23825:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23836:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23836:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23821:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23821:3:13"
																},
																"nativeSrc": "23821:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23821:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23813:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23813:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23893:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23893:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23906:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23906:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23917:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23917:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23902:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23902:3:13"
																		},
																		"nativeSrc": "23902:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23902:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23849:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23849:43:13"
																},
																"nativeSrc": "23849:71:13",
																"nodeType": "YulFunctionCall",
																"src": "23849:71:13"
															},
															"nativeSrc": "23849:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "23849:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23974:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23974:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23987:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23987:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23998:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23998:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23983:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23983:3:13"
																		},
																		"nativeSrc": "23983:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23983:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23930:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23930:43:13"
																},
																"nativeSrc": "23930:72:13",
																"nodeType": "YulFunctionCall",
																"src": "23930:72:13"
															},
															"nativeSrc": "23930:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "23930:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "24056:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24056:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24069:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24069:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24080:2:13",
																				"nodeType": "YulLiteral",
																				"src": "24080:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24065:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24065:3:13"
																		},
																		"nativeSrc": "24065:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24065:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24012:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24012:43:13"
																},
																"nativeSrc": "24012:72:13",
																"nodeType": "YulFunctionCall",
																"src": "24012:72:13"
															},
															"nativeSrc": "24012:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "24012:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "23649:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23759:9:13",
														"nodeType": "YulTypedName",
														"src": "23759:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23771:6:13",
														"nodeType": "YulTypedName",
														"src": "23771:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23779:6:13",
														"nodeType": "YulTypedName",
														"src": "23779:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23787:6:13",
														"nodeType": "YulTypedName",
														"src": "23787:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23798:4:13",
														"nodeType": "YulTypedName",
														"src": "23798:4:13",
														"type": ""
													}
												],
												"src": "23649:442:13"
											},
											{
												"body": {
													"nativeSrc": "24223:206:13",
													"nodeType": "YulBlock",
													"src": "24223:206:13",
													"statements": [
														{
															"nativeSrc": "24233:26:13",
															"nodeType": "YulAssignment",
															"src": "24233:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24245:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "24245:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24256:2:13",
																		"nodeType": "YulLiteral",
																		"src": "24256:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24241:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24241:3:13"
																},
																"nativeSrc": "24241:18:13",
																"nodeType": "YulFunctionCall",
																"src": "24241:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24233:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "24233:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24313:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24313:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24326:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24326:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24337:1:13",
																				"nodeType": "YulLiteral",
																				"src": "24337:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24322:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24322:3:13"
																		},
																		"nativeSrc": "24322:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24322:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24269:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24269:43:13"
																},
																"nativeSrc": "24269:71:13",
																"nodeType": "YulFunctionCall",
																"src": "24269:71:13"
															},
															"nativeSrc": "24269:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "24269:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24394:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24394:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24407:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24407:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24418:2:13",
																				"nodeType": "YulLiteral",
																				"src": "24418:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24403:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24403:3:13"
																		},
																		"nativeSrc": "24403:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24403:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "24350:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24350:43:13"
																},
																"nativeSrc": "24350:72:13",
																"nodeType": "YulFunctionCall",
																"src": "24350:72:13"
															},
															"nativeSrc": "24350:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "24350:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "24097:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24187:9:13",
														"nodeType": "YulTypedName",
														"src": "24187:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24199:6:13",
														"nodeType": "YulTypedName",
														"src": "24199:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24207:6:13",
														"nodeType": "YulTypedName",
														"src": "24207:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24218:4:13",
														"nodeType": "YulTypedName",
														"src": "24218:4:13",
														"type": ""
													}
												],
												"src": "24097:332:13"
											},
											{
												"body": {
													"nativeSrc": "24463:152:13",
													"nodeType": "YulBlock",
													"src": "24463:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24480:1:13",
																		"nodeType": "YulLiteral",
																		"src": "24480:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24483:77:13",
																		"nodeType": "YulLiteral",
																		"src": "24483:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24473:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "24473:6:13"
																},
																"nativeSrc": "24473:88:13",
																"nodeType": "YulFunctionCall",
																"src": "24473:88:13"
															},
															"nativeSrc": "24473:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "24473:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24577:1:13",
																		"nodeType": "YulLiteral",
																		"src": "24577:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24580:4:13",
																		"nodeType": "YulLiteral",
																		"src": "24580:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24570:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "24570:6:13"
																},
																"nativeSrc": "24570:15:13",
																"nodeType": "YulFunctionCall",
																"src": "24570:15:13"
															},
															"nativeSrc": "24570:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "24570:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24601:1:13",
																		"nodeType": "YulLiteral",
																		"src": "24601:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24604:4:13",
																		"nodeType": "YulLiteral",
																		"src": "24604:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "24594:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "24594:6:13"
																},
																"nativeSrc": "24594:15:13",
																"nodeType": "YulFunctionCall",
																"src": "24594:15:13"
															},
															"nativeSrc": "24594:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "24594:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "24435:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "24435:180:13"
											},
											{
												"body": {
													"nativeSrc": "24665:147:13",
													"nodeType": "YulBlock",
													"src": "24665:147:13",
													"statements": [
														{
															"nativeSrc": "24675:25:13",
															"nodeType": "YulAssignment",
															"src": "24675:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24698:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "24698:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24680:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "24680:17:13"
																},
																"nativeSrc": "24680:20:13",
																"nodeType": "YulFunctionCall",
																"src": "24680:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "24675:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "24675:1:13"
																}
															]
														},
														{
															"nativeSrc": "24709:25:13",
															"nodeType": "YulAssignment",
															"src": "24709:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "24732:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "24732:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24714:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "24714:17:13"
																},
																"nativeSrc": "24714:20:13",
																"nodeType": "YulFunctionCall",
																"src": "24714:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "24709:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "24709:1:13"
																}
															]
														},
														{
															"nativeSrc": "24743:16:13",
															"nodeType": "YulAssignment",
															"src": "24743:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24754:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "24754:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "24757:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "24757:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24750:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24750:3:13"
																},
																"nativeSrc": "24750:9:13",
																"nodeType": "YulFunctionCall",
																"src": "24750:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "24743:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24743:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24783:22:13",
																"nodeType": "YulBlock",
																"src": "24783:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "24785:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "24785:16:13"
																			},
																			"nativeSrc": "24785:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24785:18:13"
																		},
																		"nativeSrc": "24785:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "24785:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24775:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "24775:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "24778:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "24778:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24772:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "24772:2:13"
																},
																"nativeSrc": "24772:10:13",
																"nodeType": "YulFunctionCall",
																"src": "24772:10:13"
															},
															"nativeSrc": "24769:36:13",
															"nodeType": "YulIf",
															"src": "24769:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "24621:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "24652:1:13",
														"nodeType": "YulTypedName",
														"src": "24652:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "24655:1:13",
														"nodeType": "YulTypedName",
														"src": "24655:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "24661:3:13",
														"nodeType": "YulTypedName",
														"src": "24661:3:13",
														"type": ""
													}
												],
												"src": "24621:191:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stable coin transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bond token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token holders and amounts length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55(memPtr) {\n\n        mstore(add(memPtr, 0), \"Maturity not yet reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't claim zero coins\")\n\n    }\n\n    function abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15(memPtr) {\n\n        mstore(add(memPtr, 0), \"No investor funds available.\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to transfer stable coins\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1423": [
									{
										"length": 32,
										"start": 1946
									},
									{
										"length": 32,
										"start": 3775
									},
									{
										"length": 32,
										"start": 3852
									},
									{
										"length": 32,
										"start": 4362
									},
									{
										"length": 32,
										"start": 4795
									}
								],
								"1425": [
									{
										"length": 32,
										"start": 4009
									},
									{
										"length": 32,
										"start": 5239
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061020f575f3560e01c80638456cb5911610123578063acd17a99116100ab578063d547741f1161007a578063d547741f146105c9578063d59624b4146105e5578063dd62ed3e14610603578063e091a39b14610633578063f57d283e146106515761020f565b8063acd17a9914610567578063ca19c11c14610585578063ce4120da146105a1578063ced0550f146105bf5761020f565b806394d7cc88116100f257806394d7cc88146104c157806395d89b41146104dd578063992642e5146104fb578063a217fddf14610519578063a9059cbb146105375761020f565b80638456cb591461044d57806386d7165414610457578063904835c41461047557806391d14854146104915761020f565b80632f2ff15d116101a657806342966c681161017557806342966c68146103a95780635c975abb146103c557806370a08231146103e3578063764b666c1461041357806379cc6790146104315761020f565b80632f2ff15d14610349578063313ce5671461036557806336568abe146103835780633f4ba83a1461039f5761020f565b806318160ddd116101e257806318160ddd146102ad57806323b872dd146102cb578063248a9ca3146102fb5780632a0acc6a1461032b5761020f565b806301ffc9a71461021357806306fdde0314610243578063095ea7b31461026157806310002dbd14610291575b5f80fd5b61022d600480360381019061022891906120e2565b61066d565b60405161023a9190612127565b60405180910390f35b61024b6106e6565b60405161025891906121b0565b60405180910390f35b61027b6004803603810190610276919061225d565b610776565b6040516102889190612127565b60405180910390f35b6102ab60048036038101906102a6919061229b565b610798565b005b6102b5610931565b6040516102c291906122d5565b60405180910390f35b6102e560048036038101906102e091906122ee565b61093a565b6040516102f29190612127565b60405180910390f35b61031560048036038101906103109190612371565b610968565b60405161032291906123ab565b60405180910390f35b610333610985565b60405161034091906123ab565b60405180910390f35b610363600480360381019061035e91906123c4565b6109a9565b005b61036d6109cb565b60405161037a919061241d565b60405180910390f35b61039d600480360381019061039891906123c4565b6109d3565b005b6103a7610a4e565b005b6103c360048036038101906103be919061229b565b610a83565b005b6103cd610a97565b6040516103da9190612127565b60405180910390f35b6103fd60048036038101906103f89190612436565b610aac565b60405161040a91906122d5565b60405180910390f35b61041b610af1565b6040516104289190612470565b60405180910390f35b61044b6004803603810190610446919061225d565b610b16565b005b610455610b36565b005b61045f610b6b565b60405161046c91906122d5565b60405180910390f35b61048f600480360381019061048a9190612689565b610be9565b005b6104ab60048036038101906104a691906123c4565b610d86565b6040516104b89190612127565b60405180910390f35b6104db60048036038101906104d69190612436565b610dea565b005b6104e5610e2d565b6040516104f291906121b0565b60405180910390f35b610503610ebd565b6040516105109190612470565b60405180910390f35b610521610ee1565b60405161052e91906123ab565b60405180910390f35b610551600480360381019061054c919061225d565b610ee7565b60405161055e9190612127565b60405180910390f35b61056f610f09565b60405161057c91906122d5565b60405180910390f35b61059f600480360381019061059a919061229b565b610fa7565b005b6105a96111ef565b6040516105b691906122d5565b60405180910390f35b6105c761128e565b005b6105e360048036038101906105de91906123c4565b611453565b005b6105ed611475565b6040516105fa91906122d5565b60405180910390f35b61061d600480360381019061061891906126ff565b611499565b60405161062a91906122d5565b60405180910390f35b61063b61151b565b60405161064891906123ab565b60405180910390f35b61066b6004803603810190610666919061225d565b61153f565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106df57506106de8261166c565b5b9050919050565b6060600380546106f59061276a565b80601f01602080910402602001604051908101604052809291908181526020018280546107219061276a565b801561076c5780601f106107435761010080835404028352916020019161076c565b820191905f5260205f20905b81548152906001019060200180831161074f57829003601f168201915b5050505050905090565b5f806107806116d5565b905061078d8185856116dc565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016107f59392919061279a565b6020604051808303815f875af1158015610811573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083591906127f9565b610874576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086b9061286e565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108af92919061288c565b6020604051808303815f875af11580156108cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ef91906127f9565b61092e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610925906128fd565b60405180910390fd5b50565b5f600254905090565b5f806109446116d5565b90506109518582856116ee565b61095c858585611780565b60019150509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b6109b282610968565b6109bb81611870565b6109c58383611884565b50505050565b5f6012905090565b6109db6116d5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a3f576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a49828261196e565b505050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610a7881611870565b610a80611a58565b50565b610a94610a8e6116d5565b82611ab9565b50565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b2882610b226116d5565b836116ee565b610b328282611ab9565b5050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610b6081611870565b610b68611b38565b50565b5f3073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ba59190612470565b602060405180830381865afa158015610bc0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610be4919061292f565b905090565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610c1381611870565b8151835114610c57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4e906129ca565b60405180910390fd5b5f5b8351811015610d805760075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33868481518110610cb357610cb26129e8565b5b6020026020010151868581518110610cce57610ccd6129e8565b5b60200260200101516040518463ffffffff1660e01b8152600401610cf49392919061279a565b6020604051808303815f875af1158015610d10573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d3491906127f9565b610d73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6a90612a5f565b60405180910390fd5b8080600101915050610c59565b50505050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060048054610e3c9061276a565b80601f0160208091040260200160405190810160405280929190818152602001828054610e689061276a565b8015610eb35780601f10610e8a57610100808354040283529160200191610eb3565b820191905f5260205f20905b815481529060010190602001808311610e9657829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f801b81565b5f80610ef16116d5565b9050610efe818585611780565b600191505092915050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610f639190612470565b602060405180830381865afa158015610f7e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fa2919061292f565b905090565b7f000000000000000000000000000000000000000000000000000000000000000042101561100a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100190612ac7565b60405180910390fd5b5f811161104c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104390612b2f565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016110899392919061279a565b6020604051808303815f875af11580156110a5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110c991906127f9565b611108576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ff906128fd565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161116392919061288c565b6020604051808303815f875af115801561117f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111a391906127f9565b6111e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d99061286e565b60405180910390fd5b6111ec3082611ab9565b50565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161124a9190612470565b602060405180830381865afa158015611265573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611289919061292f565b905090565b7ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b76112b881611870565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113129190612470565b602060405180830381865afa15801561132d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611351919061292f565b90505f8111611395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138c90612b97565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016113d092919061288c565b6020604051808303815f875af11580156113ec573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061141091906127f9565b61144f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144690612bff565b60405180910390fd5b5050565b61145c82610968565b61146581611870565b61146f838361196e565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b781565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4261156981611870565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685856040518463ffffffff1660e01b81526004016115e89392919061279a565b6020604051808303815f875af1158015611604573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061162891906127f9565b611667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165e90612a5f565b60405180910390fd5b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6116e98383836001611b9a565b505050565b5f6116f98484611499565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461177a578181101561176b578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161176293929190612c1d565b60405180910390fd5b61177984848484035f611b9a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117f0575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117e79190612470565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611860575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118579190612470565b60405180910390fd5b61186b838383611d69565b505050565b6118818161187c6116d5565b611d79565b50565b5f61188f8383610d86565b61196457600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506119016116d5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611968565b5f90505b92915050565b5f6119798383610d86565b15611a4e575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506119eb6116d5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611a52565b5f90505b92915050565b611a60611dca565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611aa26116d5565b604051611aaf9190612470565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b29575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611b209190612470565b60405180910390fd5b611b34825f83611d69565b5050565b611b40611e0a565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611b836116d5565b604051611b909190612470565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611c0a575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611c019190612470565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c7a575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611c719190612470565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611d63578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611d5a91906122d5565b60405180910390a35b50505050565b611d74838383611e4b565b505050565b611d838282610d86565b611dc65780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611dbd929190612c52565b60405180910390fd5b5050565b611dd2610a97565b611e08576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611e12610a97565b15611e49576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611e53611e0a565b611e5e838383611e63565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611eb3578060025f828254611ea79190612ca6565b92505081905550611f81565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611f3c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611f3393929190612c1d565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611fc8578060025f8282540392505081905550612012565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161206f91906122d5565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6120c18161208d565b81146120cb575f80fd5b50565b5f813590506120dc816120b8565b92915050565b5f602082840312156120f7576120f6612085565b5b5f612104848285016120ce565b91505092915050565b5f8115159050919050565b6121218161210d565b82525050565b5f60208201905061213a5f830184612118565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61218282612140565b61218c818561214a565b935061219c81856020860161215a565b6121a581612168565b840191505092915050565b5f6020820190508181035f8301526121c88184612178565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6121f9826121d0565b9050919050565b612209816121ef565b8114612213575f80fd5b50565b5f8135905061222481612200565b92915050565b5f819050919050565b61223c8161222a565b8114612246575f80fd5b50565b5f8135905061225781612233565b92915050565b5f806040838503121561227357612272612085565b5b5f61228085828601612216565b925050602061229185828601612249565b9150509250929050565b5f602082840312156122b0576122af612085565b5b5f6122bd84828501612249565b91505092915050565b6122cf8161222a565b82525050565b5f6020820190506122e85f8301846122c6565b92915050565b5f805f6060848603121561230557612304612085565b5b5f61231286828701612216565b935050602061232386828701612216565b925050604061233486828701612249565b9150509250925092565b5f819050919050565b6123508161233e565b811461235a575f80fd5b50565b5f8135905061236b81612347565b92915050565b5f6020828403121561238657612385612085565b5b5f6123938482850161235d565b91505092915050565b6123a58161233e565b82525050565b5f6020820190506123be5f83018461239c565b92915050565b5f80604083850312156123da576123d9612085565b5b5f6123e78582860161235d565b92505060206123f885828601612216565b9150509250929050565b5f60ff82169050919050565b61241781612402565b82525050565b5f6020820190506124305f83018461240e565b92915050565b5f6020828403121561244b5761244a612085565b5b5f61245884828501612216565b91505092915050565b61246a816121ef565b82525050565b5f6020820190506124835f830184612461565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6124c382612168565b810181811067ffffffffffffffff821117156124e2576124e161248d565b5b80604052505050565b5f6124f461207c565b905061250082826124ba565b919050565b5f67ffffffffffffffff82111561251f5761251e61248d565b5b602082029050602081019050919050565b5f80fd5b5f61254661254184612505565b6124eb565b9050808382526020820190506020840283018581111561256957612568612530565b5b835b81811015612592578061257e8882612216565b84526020840193505060208101905061256b565b5050509392505050565b5f82601f8301126125b0576125af612489565b5b81356125c0848260208601612534565b91505092915050565b5f67ffffffffffffffff8211156125e3576125e261248d565b5b602082029050602081019050919050565b5f612606612601846125c9565b6124eb565b9050808382526020820190506020840283018581111561262957612628612530565b5b835b81811015612652578061263e8882612249565b84526020840193505060208101905061262b565b5050509392505050565b5f82601f8301126126705761266f612489565b5b81356126808482602086016125f4565b91505092915050565b5f806040838503121561269f5761269e612085565b5b5f83013567ffffffffffffffff8111156126bc576126bb612089565b5b6126c88582860161259c565b925050602083013567ffffffffffffffff8111156126e9576126e8612089565b5b6126f58582860161265c565b9150509250929050565b5f806040838503121561271557612714612085565b5b5f61272285828601612216565b925050602061273385828601612216565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061278157607f821691505b6020821081036127945761279361273d565b5b50919050565b5f6060820190506127ad5f830186612461565b6127ba6020830185612461565b6127c760408301846122c6565b949350505050565b6127d88161210d565b81146127e2575f80fd5b50565b5f815190506127f3816127cf565b92915050565b5f6020828403121561280e5761280d612085565b5b5f61281b848285016127e5565b91505092915050565b7f537461626c6520636f696e207472616e73666572206661696c656400000000005f82015250565b5f612858601b8361214a565b915061286382612824565b602082019050919050565b5f6020820190508181035f8301526128858161284c565b9050919050565b5f60408201905061289f5f830185612461565b6128ac60208301846122c6565b9392505050565b7f426f6e6420746f6b656e207472616e73666572206661696c65640000000000005f82015250565b5f6128e7601a8361214a565b91506128f2826128b3565b602082019050919050565b5f6020820190508181035f830152612914816128db565b9050919050565b5f8151905061292981612233565b92915050565b5f6020828403121561294457612943612085565b5b5f6129518482850161291b565b91505092915050565b7f546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e6774685f8201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b5f6129b460298361214a565b91506129bf8261295a565b604082019050919050565b5f6020820190508181035f8301526129e1816129a8565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f612a49600f8361214a565b9150612a5482612a15565b602082019050919050565b5f6020820190508181035f830152612a7681612a3d565b9050919050565b7f4d61747572697479206e6f7420796574207265616368656400000000000000005f82015250565b5f612ab160188361214a565b9150612abc82612a7d565b602082019050919050565b5f6020820190508181035f830152612ade81612aa5565b9050919050565b7f43616e277420636c61696d207a65726f20636f696e73000000000000000000005f82015250565b5f612b1960168361214a565b9150612b2482612ae5565b602082019050919050565b5f6020820190508181035f830152612b4681612b0d565b9050919050565b7f4e6f20696e766573746f722066756e647320617661696c61626c652e000000005f82015250565b5f612b81601c8361214a565b9150612b8c82612b4d565b602082019050919050565b5f6020820190508181035f830152612bae81612b75565b9050919050565b7f4661696c656420746f207472616e7366657220737461626c6520636f696e73005f82015250565b5f612be9601f8361214a565b9150612bf482612bb5565b602082019050919050565b5f6020820190508181035f830152612c1681612bdd565b9050919050565b5f606082019050612c305f830186612461565b612c3d60208301856122c6565b612c4a60408301846122c6565b949350505050565b5f604082019050612c655f830185612461565b612c72602083018461239c565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612cb08261222a565b9150612cbb8361222a565b9250828201905080821115612cd357612cd2612c79565b5b9291505056fea26469706673582212200f7e65f7206b52c18eac87858610629e4d35d9ae5049cb7aacf3b4819923f75564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xACD17A99 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0xD59624B4 EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x603 JUMPI DUP1 PUSH4 0xE091A39B EQ PUSH2 0x633 JUMPI DUP1 PUSH4 0xF57D283E EQ PUSH2 0x651 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xACD17A99 EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0xCA19C11C EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0xCE4120DA EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xCED0550F EQ PUSH2 0x5BF JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x94D7CC88 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x94D7CC88 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x537 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0x86D71654 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0x904835C4 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x491 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x764B666C EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x431 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x39F JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x2A0ACC6A EQ PUSH2 0x32B JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x10002DBD EQ PUSH2 0x291 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x21B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0x776 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B5 PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x22EE JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x2371 JUMP JUMPDEST PUSH2 0x968 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x333 PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x363 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36D PUSH2 0x9CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A7 PUSH2 0xA4E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CD PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x2436 JUMP JUMPDEST PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41B PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0xB16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x455 PUSH2 0xB36 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45F PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48A SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xBE9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0x2436 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E5 PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x21B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x503 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x521 PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52E SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x551 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54C SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0xEE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56F PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57C SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59A SWAP2 SWAP1 PUSH2 0x229B JUMP JUMPDEST PUSH2 0xFA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A9 PUSH2 0x11EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B6 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C7 PUSH2 0x128E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x1453 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5ED PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x26FF JUMP JUMPDEST PUSH2 0x1499 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63B PUSH2 0x151B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x666 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH2 0x153F JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x6DF JUMPI POP PUSH2 0x6DE DUP3 PUSH2 0x166C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6F5 SWAP1 PUSH2 0x276A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x721 SWAP1 PUSH2 0x276A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x76C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x743 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x76C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x780 PUSH2 0x16D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x78D DUP2 DUP6 DUP6 PUSH2 0x16DC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x811 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x874 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86B SWAP1 PUSH2 0x286E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AF SWAP3 SWAP2 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8CB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x925 SWAP1 PUSH2 0x28FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x944 PUSH2 0x16D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x951 DUP6 DUP3 DUP6 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0x95C DUP6 DUP6 DUP6 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 DUP2 JUMP JUMPDEST PUSH2 0x9B2 DUP3 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x9BB DUP2 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x9C5 DUP4 DUP4 PUSH2 0x1884 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9DB PUSH2 0x16D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA49 DUP3 DUP3 PUSH2 0x196E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xA78 DUP2 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0xA80 PUSH2 0x1A58 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA94 PUSH2 0xA8E PUSH2 0x16D5 JUMP JUMPDEST DUP3 PUSH2 0x1AB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB28 DUP3 PUSH2 0xB22 PUSH2 0x16D5 JUMP JUMPDEST DUP4 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0xB32 DUP3 DUP3 PUSH2 0x1AB9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xB60 DUP2 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0xB68 PUSH2 0x1B38 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE4 SWAP2 SWAP1 PUSH2 0x292F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xC13 DUP2 PUSH2 0x1870 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4E SWAP1 PUSH2 0x29CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xD80 JUMPI PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCB3 JUMPI PUSH2 0xCB2 PUSH2 0x29E8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xCCE JUMPI PUSH2 0xCCD PUSH2 0x29E8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD10 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD34 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6A SWAP1 PUSH2 0x2A5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC59 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE3C SWAP1 PUSH2 0x276A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE68 SWAP1 PUSH2 0x276A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEB3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE8A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEB3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE96 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEF1 PUSH2 0x16D5 JUMP JUMPDEST SWAP1 POP PUSH2 0xEFE DUP2 DUP6 DUP6 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF63 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF7E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA2 SWAP2 SWAP1 PUSH2 0x292F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x100A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1001 SWAP1 PUSH2 0x2AC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x104C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1043 SWAP1 PUSH2 0x2B2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1089 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10A5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10C9 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x1108 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FF SWAP1 PUSH2 0x28FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1163 SWAP3 SWAP2 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x117F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11A3 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x11E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D9 SWAP1 PUSH2 0x286E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11EC ADDRESS DUP3 PUSH2 0x1AB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124A SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1265 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1289 SWAP2 SWAP1 PUSH2 0x292F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 PUSH2 0x12B8 DUP2 PUSH2 0x1870 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1312 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x132D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1351 SWAP2 SWAP1 PUSH2 0x292F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1395 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138C SWAP1 PUSH2 0x2B97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D0 SWAP3 SWAP2 SWAP1 PUSH2 0x288C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13EC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1410 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x144F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1446 SWAP1 PUSH2 0x2BFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x145C DUP3 PUSH2 0x968 JUMP JUMPDEST PUSH2 0x1465 DUP2 PUSH2 0x1870 JUMP JUMPDEST PUSH2 0x146F DUP4 DUP4 PUSH2 0x196E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 DUP2 JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0x1569 DUP2 PUSH2 0x1870 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1604 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1628 SWAP2 SWAP1 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x1667 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165E SWAP1 PUSH2 0x2A5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x16E9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16F9 DUP5 DUP5 PUSH2 0x1499 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x177A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x176B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1762 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1779 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1B9A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17F0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E7 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1860 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1857 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x186B DUP4 DUP4 DUP4 PUSH2 0x1D69 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1881 DUP2 PUSH2 0x187C PUSH2 0x16D5 JUMP JUMPDEST PUSH2 0x1D79 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x188F DUP4 DUP4 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x1964 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1901 PUSH2 0x16D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1968 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1979 DUP4 DUP4 PUSH2 0xD86 JUMP JUMPDEST ISZERO PUSH2 0x1A4E JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x19EB PUSH2 0x16D5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1A52 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A60 PUSH2 0x1DCA JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1AA2 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AAF SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B29 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B20 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B34 DUP3 PUSH0 DUP4 PUSH2 0x1D69 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1B40 PUSH2 0x1E0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1B83 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B90 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C0A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C01 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C7A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C71 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1D63 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D5A SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1D74 DUP4 DUP4 DUP4 PUSH2 0x1E4B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1D83 DUP3 DUP3 PUSH2 0xD86 JUMP JUMPDEST PUSH2 0x1DC6 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DBD SWAP3 SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1DD2 PUSH2 0xA97 JUMP JUMPDEST PUSH2 0x1E08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1E12 PUSH2 0xA97 JUMP JUMPDEST ISZERO PUSH2 0x1E49 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1E53 PUSH2 0x1E0A JUMP JUMPDEST PUSH2 0x1E5E DUP4 DUP4 DUP4 PUSH2 0x1E63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EB3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1EA7 SWAP2 SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1F81 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1F3C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F33 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FC8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2012 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x206F SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C1 DUP2 PUSH2 0x208D JUMP JUMPDEST DUP2 EQ PUSH2 0x20CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20DC DUP2 PUSH2 0x20B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F7 JUMPI PUSH2 0x20F6 PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2104 DUP5 DUP3 DUP6 ADD PUSH2 0x20CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2121 DUP2 PUSH2 0x210D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x213A PUSH0 DUP4 ADD DUP5 PUSH2 0x2118 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2182 DUP3 PUSH2 0x2140 JUMP JUMPDEST PUSH2 0x218C DUP2 DUP6 PUSH2 0x214A JUMP JUMPDEST SWAP4 POP PUSH2 0x219C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x215A JUMP JUMPDEST PUSH2 0x21A5 DUP2 PUSH2 0x2168 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21C8 DUP2 DUP5 PUSH2 0x2178 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21F9 DUP3 PUSH2 0x21D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2209 DUP2 PUSH2 0x21EF JUMP JUMPDEST DUP2 EQ PUSH2 0x2213 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2224 DUP2 PUSH2 0x2200 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x223C DUP2 PUSH2 0x222A JUMP JUMPDEST DUP2 EQ PUSH2 0x2246 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2257 DUP2 PUSH2 0x2233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2273 JUMPI PUSH2 0x2272 PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2280 DUP6 DUP3 DUP7 ADD PUSH2 0x2216 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2291 DUP6 DUP3 DUP7 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22B0 JUMPI PUSH2 0x22AF PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22BD DUP5 DUP3 DUP6 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22CF DUP2 PUSH2 0x222A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22E8 PUSH0 DUP4 ADD DUP5 PUSH2 0x22C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2305 JUMPI PUSH2 0x2304 PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2312 DUP7 DUP3 DUP8 ADD PUSH2 0x2216 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2323 DUP7 DUP3 DUP8 ADD PUSH2 0x2216 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2334 DUP7 DUP3 DUP8 ADD PUSH2 0x2249 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2350 DUP2 PUSH2 0x233E JUMP JUMPDEST DUP2 EQ PUSH2 0x235A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x236B DUP2 PUSH2 0x2347 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2386 JUMPI PUSH2 0x2385 PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2393 DUP5 DUP3 DUP6 ADD PUSH2 0x235D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23A5 DUP2 PUSH2 0x233E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23BE PUSH0 DUP4 ADD DUP5 PUSH2 0x239C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23DA JUMPI PUSH2 0x23D9 PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23E7 DUP6 DUP3 DUP7 ADD PUSH2 0x235D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23F8 DUP6 DUP3 DUP7 ADD PUSH2 0x2216 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2417 DUP2 PUSH2 0x2402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2430 PUSH0 DUP4 ADD DUP5 PUSH2 0x240E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244B JUMPI PUSH2 0x244A PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2458 DUP5 DUP3 DUP6 ADD PUSH2 0x2216 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x246A DUP2 PUSH2 0x21EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2483 PUSH0 DUP4 ADD DUP5 PUSH2 0x2461 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x24C3 DUP3 PUSH2 0x2168 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x24E2 JUMPI PUSH2 0x24E1 PUSH2 0x248D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24F4 PUSH2 0x207C JUMP JUMPDEST SWAP1 POP PUSH2 0x2500 DUP3 DUP3 PUSH2 0x24BA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x251F JUMPI PUSH2 0x251E PUSH2 0x248D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x2546 PUSH2 0x2541 DUP5 PUSH2 0x2505 JUMP JUMPDEST PUSH2 0x24EB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2569 JUMPI PUSH2 0x2568 PUSH2 0x2530 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2592 JUMPI DUP1 PUSH2 0x257E DUP9 DUP3 PUSH2 0x2216 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x256B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25B0 JUMPI PUSH2 0x25AF PUSH2 0x2489 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x25C0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2534 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25E3 JUMPI PUSH2 0x25E2 PUSH2 0x248D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2606 PUSH2 0x2601 DUP5 PUSH2 0x25C9 JUMP JUMPDEST PUSH2 0x24EB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2629 JUMPI PUSH2 0x2628 PUSH2 0x2530 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2652 JUMPI DUP1 PUSH2 0x263E DUP9 DUP3 PUSH2 0x2249 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x262B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2670 JUMPI PUSH2 0x266F PUSH2 0x2489 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2680 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x269F JUMPI PUSH2 0x269E PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26BC JUMPI PUSH2 0x26BB PUSH2 0x2089 JUMP JUMPDEST JUMPDEST PUSH2 0x26C8 DUP6 DUP3 DUP7 ADD PUSH2 0x259C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26E9 JUMPI PUSH2 0x26E8 PUSH2 0x2089 JUMP JUMPDEST JUMPDEST PUSH2 0x26F5 DUP6 DUP3 DUP7 ADD PUSH2 0x265C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2715 JUMPI PUSH2 0x2714 PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2722 DUP6 DUP3 DUP7 ADD PUSH2 0x2216 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2733 DUP6 DUP3 DUP7 ADD PUSH2 0x2216 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2781 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2794 JUMPI PUSH2 0x2793 PUSH2 0x273D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x27AD PUSH0 DUP4 ADD DUP7 PUSH2 0x2461 JUMP JUMPDEST PUSH2 0x27BA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2461 JUMP JUMPDEST PUSH2 0x27C7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22C6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x27D8 DUP2 PUSH2 0x210D JUMP JUMPDEST DUP2 EQ PUSH2 0x27E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27F3 DUP2 PUSH2 0x27CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x280E JUMPI PUSH2 0x280D PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x281B DUP5 DUP3 DUP6 ADD PUSH2 0x27E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537461626C6520636F696E207472616E73666572206661696C65640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2858 PUSH1 0x1B DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x2863 DUP3 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2885 DUP2 PUSH2 0x284C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x289F PUSH0 DUP4 ADD DUP6 PUSH2 0x2461 JUMP JUMPDEST PUSH2 0x28AC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x426F6E6420746F6B656E207472616E73666572206661696C6564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28E7 PUSH1 0x1A DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x28F2 DUP3 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2914 DUP2 PUSH2 0x28DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2929 DUP2 PUSH2 0x2233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2944 JUMPI PUSH2 0x2943 PUSH2 0x2085 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2951 DUP5 DUP3 DUP6 ADD PUSH2 0x291B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20686F6C6465727320616E6420616D6F756E7473206C656E677468 PUSH0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29B4 PUSH1 0x29 DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x29BF DUP3 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29E1 DUP2 PUSH2 0x29A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A49 PUSH1 0xF DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x2A54 DUP3 PUSH2 0x2A15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A76 DUP2 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D61747572697479206E6F742079657420726561636865640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AB1 PUSH1 0x18 DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x2ABC DUP3 PUSH2 0x2A7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2ADE DUP2 PUSH2 0x2AA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E277420636C61696D207A65726F20636F696E7300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B19 PUSH1 0x16 DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x2B24 DUP3 PUSH2 0x2AE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B46 DUP2 PUSH2 0x2B0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20696E766573746F722066756E647320617661696C61626C652E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B81 PUSH1 0x1C DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x2B8C DUP3 PUSH2 0x2B4D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BAE DUP2 PUSH2 0x2B75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E7366657220737461626C6520636F696E7300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BE9 PUSH1 0x1F DUP4 PUSH2 0x214A JUMP JUMPDEST SWAP2 POP PUSH2 0x2BF4 DUP3 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C16 DUP2 PUSH2 0x2BDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C30 PUSH0 DUP4 ADD DUP7 PUSH2 0x2461 JUMP JUMPDEST PUSH2 0x2C3D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22C6 JUMP JUMPDEST PUSH2 0x2C4A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22C6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C65 PUSH0 DUP4 ADD DUP6 PUSH2 0x2461 JUMP JUMPDEST PUSH2 0x2C72 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x239C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2CB0 DUP3 PUSH2 0x222A JUMP JUMPDEST SWAP2 POP PUSH2 0x2CBB DUP4 PUSH2 0x222A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CD3 JUMPI PUSH2 0x2CD2 PUSH2 0x2C79 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF PUSH31 0x65F7206B52C18EAC87858610629E4D35D9AE5049CB7AACF3B4819923F75564 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "373:3409:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1207:264:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3144:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;455:50:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3711:69:12;;;:::i;:::-;;618:87:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1850:84:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;663:28:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:158:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3640:65:12;;;:::i;:::-;;2983:116;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1681:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1091:110:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2276:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;579:35:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3235:120:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2425:524;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3104:126;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2093:326;;;:::i;:::-;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;620:37:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;511:62:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1477:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2074:89:3:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;1207:264:12:-;1277:10;1270:31;;;1302:10;1321:4;1327:12;1270:70;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1262:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;1395:4;1389:20;;;1410:10;1421:12;1389:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1381:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1207:264;:::o;3144:97:3:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;455:50:12:-;487:18;455:50;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;3002:82:3:-;3051:5;3075:2;3068:9;;3002:82;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;3711:69:12:-;487:18;2464:16:0;2475:4;2464:10;:16::i;:::-;3763:10:12::1;:8;:10::i;:::-;3711:69:::0;:::o;618:87:5:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;1850:84:9:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;663:28:12:-;;;;;;;;;;;;;:::o;1021:158:5:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;3640:65:12:-;487:18;2464:16:0;2475:4;2464:10;:16::i;:::-;3690:8:12::1;:6;:8::i;:::-;3640:65:::0;:::o;2983:116::-;3030:7;3062:4;3056:21;;;3086:4;3056:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3049:43;;2983:116;:::o;1681:406::-;487:18;2464:16:0;2475:4;2464:10;:16::i;:::-;1833:7:12::1;:14;1810:12;:19;:37;1802:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;1908:9;1903:178;1927:12;:19;1923:1;:23;1903:178;;;1982:13;;;;;;;;;;;1975:34;;;2010:10;2022:12;2035:1;2022:15;;;;;;;;:::i;:::-;;;;;;;;2039:7;2047:1;2039:10;;;;;;;;:::i;:::-;;;;;;;;1975:75;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1967:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;1948:3;;;;;;;1903:178;;;;1681:406:::0;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1091:110:12:-;1177:17;1161:13;;:33;;;;;;;;;;;;;;;;;;1091:110;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;579:35:12:-;;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3610:178:3:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3235:120:12:-;3283:7;3315:10;3308:28;;;3337:10;3308:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3301:47;;3235:120;:::o;2425:524::-;2539:12;2520:15;:31;;2512:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2639:1;2624:12;:16;2616:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2690:4;2684:24;;;2709:10;2728:4;2734:12;2684:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2676:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;2802:10;2795:27;;;2823:10;2834:12;2795:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2787:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;2909:33;2923:4;2929:12;2909:5;:33::i;:::-;2425:524;:::o;3104:126::-;3155:7;3187:13;;;;;;;;;;;3180:31;;;3212:10;3180:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3173:50;;3104:126;:::o;2093:326::-;549:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2161:27:12::1;2198:10;2191:28;;;2228:4;2191:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2161:73;;2274:1;2252:19;:23;2244:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2331:4;2325:20;;;2346:10;2357:19;2325:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2317:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2151:268;2093:326:::0;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;620:37:12:-;;;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;511:62:12:-;549:24;511:62;:::o;1477:198::-;487:18;2464:16:0;2475:4;2464:10;:16::i;:::-;1588:13:12::1;;;;;;;;;;;1581:34;;;1616:13;;;;;;;;;;;1630:11;1642:6;1581:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1573:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1477:198:::0;;;:::o;762:146:10:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;2710:117:9:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;8247:206:3:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2463:115:9:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;9949:432:3:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;3466:165:12:-;3594:30;3608:4;3614:2;3618:5;3594:13;:30::i;:::-;3466:165;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;2202:126:9:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;2002:128::-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;1112:145:6:-;1474:19:9;:17;:19::i;:::-;1220:30:6::1;1234:4;1240:2;1244:5;1220:13;:30::i;:::-;1112:145:::0;;;:::o;6271:1107:3:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:329::-;4155:6;4204:2;4192:9;4183:7;4179:23;4175:32;4172:119;;;4210:79;;:::i;:::-;4172:119;4330:1;4355:53;4400:7;4391:6;4380:9;4376:22;4355:53;:::i;:::-;4345:63;;4301:117;4096:329;;;;:::o;4431:118::-;4518:24;4536:5;4518:24;:::i;:::-;4513:3;4506:37;4431:118;;:::o;4555:222::-;4648:4;4686:2;4675:9;4671:18;4663:26;;4699:71;4767:1;4756:9;4752:17;4743:6;4699:71;:::i;:::-;4555:222;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:77::-;5445:7;5474:5;5463:16;;5408:77;;;:::o;5491:122::-;5564:24;5582:5;5564:24;:::i;:::-;5557:5;5554:35;5544:63;;5603:1;5600;5593:12;5544:63;5491:122;:::o;5619:139::-;5665:5;5703:6;5690:20;5681:29;;5719:33;5746:5;5719:33;:::i;:::-;5619:139;;;;:::o;5764:329::-;5823:6;5872:2;5860:9;5851:7;5847:23;5843:32;5840:119;;;5878:79;;:::i;:::-;5840:119;5998:1;6023:53;6068:7;6059:6;6048:9;6044:22;6023:53;:::i;:::-;6013:63;;5969:117;5764:329;;;;:::o;6099:118::-;6186:24;6204:5;6186:24;:::i;:::-;6181:3;6174:37;6099:118;;:::o;6223:222::-;6316:4;6354:2;6343:9;6339:18;6331:26;;6367:71;6435:1;6424:9;6420:17;6411:6;6367:71;:::i;:::-;6223:222;;;;:::o;6451:474::-;6519:6;6527;6576:2;6564:9;6555:7;6551:23;6547:32;6544:119;;;6582:79;;:::i;:::-;6544:119;6702:1;6727:53;6772:7;6763:6;6752:9;6748:22;6727:53;:::i;:::-;6717:63;;6673:117;6829:2;6855:53;6900:7;6891:6;6880:9;6876:22;6855:53;:::i;:::-;6845:63;;6800:118;6451:474;;;;;:::o;6931:86::-;6966:7;7006:4;6999:5;6995:16;6984:27;;6931:86;;;:::o;7023:112::-;7106:22;7122:5;7106:22;:::i;:::-;7101:3;7094:35;7023:112;;:::o;7141:214::-;7230:4;7268:2;7257:9;7253:18;7245:26;;7281:67;7345:1;7334:9;7330:17;7321:6;7281:67;:::i;:::-;7141:214;;;;:::o;7361:329::-;7420:6;7469:2;7457:9;7448:7;7444:23;7440:32;7437:119;;;7475:79;;:::i;:::-;7437:119;7595:1;7620:53;7665:7;7656:6;7645:9;7641:22;7620:53;:::i;:::-;7610:63;;7566:117;7361:329;;;;:::o;7696:118::-;7783:24;7801:5;7783:24;:::i;:::-;7778:3;7771:37;7696:118;;:::o;7820:222::-;7913:4;7951:2;7940:9;7936:18;7928:26;;7964:71;8032:1;8021:9;8017:17;8008:6;7964:71;:::i;:::-;7820:222;;;;:::o;8048:117::-;8157:1;8154;8147:12;8171:180;8219:77;8216:1;8209:88;8316:4;8313:1;8306:15;8340:4;8337:1;8330:15;8357:281;8440:27;8462:4;8440:27;:::i;:::-;8432:6;8428:40;8570:6;8558:10;8555:22;8534:18;8522:10;8519:34;8516:62;8513:88;;;8581:18;;:::i;:::-;8513:88;8621:10;8617:2;8610:22;8400:238;8357:281;;:::o;8644:129::-;8678:6;8705:20;;:::i;:::-;8695:30;;8734:33;8762:4;8754:6;8734:33;:::i;:::-;8644:129;;;:::o;8779:311::-;8856:4;8946:18;8938:6;8935:30;8932:56;;;8968:18;;:::i;:::-;8932:56;9018:4;9010:6;9006:17;8998:25;;9078:4;9072;9068:15;9060:23;;8779:311;;;:::o;9096:117::-;9205:1;9202;9195:12;9236:710;9332:5;9357:81;9373:64;9430:6;9373:64;:::i;:::-;9357:81;:::i;:::-;9348:90;;9458:5;9487:6;9480:5;9473:21;9521:4;9514:5;9510:16;9503:23;;9574:4;9566:6;9562:17;9554:6;9550:30;9603:3;9595:6;9592:15;9589:122;;;9622:79;;:::i;:::-;9589:122;9737:6;9720:220;9754:6;9749:3;9746:15;9720:220;;;9829:3;9858:37;9891:3;9879:10;9858:37;:::i;:::-;9853:3;9846:50;9925:4;9920:3;9916:14;9909:21;;9796:144;9780:4;9775:3;9771:14;9764:21;;9720:220;;;9724:21;9338:608;;9236:710;;;;;:::o;9969:370::-;10040:5;10089:3;10082:4;10074:6;10070:17;10066:27;10056:122;;10097:79;;:::i;:::-;10056:122;10214:6;10201:20;10239:94;10329:3;10321:6;10314:4;10306:6;10302:17;10239:94;:::i;:::-;10230:103;;10046:293;9969:370;;;;:::o;10345:311::-;10422:4;10512:18;10504:6;10501:30;10498:56;;;10534:18;;:::i;:::-;10498:56;10584:4;10576:6;10572:17;10564:25;;10644:4;10638;10634:15;10626:23;;10345:311;;;:::o;10679:710::-;10775:5;10800:81;10816:64;10873:6;10816:64;:::i;:::-;10800:81;:::i;:::-;10791:90;;10901:5;10930:6;10923:5;10916:21;10964:4;10957:5;10953:16;10946:23;;11017:4;11009:6;11005:17;10997:6;10993:30;11046:3;11038:6;11035:15;11032:122;;;11065:79;;:::i;:::-;11032:122;11180:6;11163:220;11197:6;11192:3;11189:15;11163:220;;;11272:3;11301:37;11334:3;11322:10;11301:37;:::i;:::-;11296:3;11289:50;11368:4;11363:3;11359:14;11352:21;;11239:144;11223:4;11218:3;11214:14;11207:21;;11163:220;;;11167:21;10781:608;;10679:710;;;;;:::o;11412:370::-;11483:5;11532:3;11525:4;11517:6;11513:17;11509:27;11499:122;;11540:79;;:::i;:::-;11499:122;11657:6;11644:20;11682:94;11772:3;11764:6;11757:4;11749:6;11745:17;11682:94;:::i;:::-;11673:103;;11489:293;11412:370;;;;:::o;11788:894::-;11906:6;11914;11963:2;11951:9;11942:7;11938:23;11934:32;11931:119;;;11969:79;;:::i;:::-;11931:119;12117:1;12106:9;12102:17;12089:31;12147:18;12139:6;12136:30;12133:117;;;12169:79;;:::i;:::-;12133:117;12274:78;12344:7;12335:6;12324:9;12320:22;12274:78;:::i;:::-;12264:88;;12060:302;12429:2;12418:9;12414:18;12401:32;12460:18;12452:6;12449:30;12446:117;;;12482:79;;:::i;:::-;12446:117;12587:78;12657:7;12648:6;12637:9;12633:22;12587:78;:::i;:::-;12577:88;;12372:303;11788:894;;;;;:::o;12688:474::-;12756:6;12764;12813:2;12801:9;12792:7;12788:23;12784:32;12781:119;;;12819:79;;:::i;:::-;12781:119;12939:1;12964:53;13009:7;13000:6;12989:9;12985:22;12964:53;:::i;:::-;12954:63;;12910:117;13066:2;13092:53;13137:7;13128:6;13117:9;13113:22;13092:53;:::i;:::-;13082:63;;13037:118;12688:474;;;;;:::o;13168:180::-;13216:77;13213:1;13206:88;13313:4;13310:1;13303:15;13337:4;13334:1;13327:15;13354:320;13398:6;13435:1;13429:4;13425:12;13415:22;;13482:1;13476:4;13472:12;13503:18;13493:81;;13559:4;13551:6;13547:17;13537:27;;13493:81;13621:2;13613:6;13610:14;13590:18;13587:38;13584:84;;13640:18;;:::i;:::-;13584:84;13405:269;13354:320;;;:::o;13680:442::-;13829:4;13867:2;13856:9;13852:18;13844:26;;13880:71;13948:1;13937:9;13933:17;13924:6;13880:71;:::i;:::-;13961:72;14029:2;14018:9;14014:18;14005:6;13961:72;:::i;:::-;14043;14111:2;14100:9;14096:18;14087:6;14043:72;:::i;:::-;13680:442;;;;;;:::o;14128:116::-;14198:21;14213:5;14198:21;:::i;:::-;14191:5;14188:32;14178:60;;14234:1;14231;14224:12;14178:60;14128:116;:::o;14250:137::-;14304:5;14335:6;14329:13;14320:22;;14351:30;14375:5;14351:30;:::i;:::-;14250:137;;;;:::o;14393:345::-;14460:6;14509:2;14497:9;14488:7;14484:23;14480:32;14477:119;;;14515:79;;:::i;:::-;14477:119;14635:1;14660:61;14713:7;14704:6;14693:9;14689:22;14660:61;:::i;:::-;14650:71;;14606:125;14393:345;;;;:::o;14744:177::-;14884:29;14880:1;14872:6;14868:14;14861:53;14744:177;:::o;14927:366::-;15069:3;15090:67;15154:2;15149:3;15090:67;:::i;:::-;15083:74;;15166:93;15255:3;15166:93;:::i;:::-;15284:2;15279:3;15275:12;15268:19;;14927:366;;;:::o;15299:419::-;15465:4;15503:2;15492:9;15488:18;15480:26;;15552:9;15546:4;15542:20;15538:1;15527:9;15523:17;15516:47;15580:131;15706:4;15580:131;:::i;:::-;15572:139;;15299:419;;;:::o;15724:332::-;15845:4;15883:2;15872:9;15868:18;15860:26;;15896:71;15964:1;15953:9;15949:17;15940:6;15896:71;:::i;:::-;15977:72;16045:2;16034:9;16030:18;16021:6;15977:72;:::i;:::-;15724:332;;;;;:::o;16062:176::-;16202:28;16198:1;16190:6;16186:14;16179:52;16062:176;:::o;16244:366::-;16386:3;16407:67;16471:2;16466:3;16407:67;:::i;:::-;16400:74;;16483:93;16572:3;16483:93;:::i;:::-;16601:2;16596:3;16592:12;16585:19;;16244:366;;;:::o;16616:419::-;16782:4;16820:2;16809:9;16805:18;16797:26;;16869:9;16863:4;16859:20;16855:1;16844:9;16840:17;16833:47;16897:131;17023:4;16897:131;:::i;:::-;16889:139;;16616:419;;;:::o;17041:143::-;17098:5;17129:6;17123:13;17114:22;;17145:33;17172:5;17145:33;:::i;:::-;17041:143;;;;:::o;17190:351::-;17260:6;17309:2;17297:9;17288:7;17284:23;17280:32;17277:119;;;17315:79;;:::i;:::-;17277:119;17435:1;17460:64;17516:7;17507:6;17496:9;17492:22;17460:64;:::i;:::-;17450:74;;17406:128;17190:351;;;;:::o;17547:228::-;17687:34;17683:1;17675:6;17671:14;17664:58;17756:11;17751:2;17743:6;17739:15;17732:36;17547:228;:::o;17781:366::-;17923:3;17944:67;18008:2;18003:3;17944:67;:::i;:::-;17937:74;;18020:93;18109:3;18020:93;:::i;:::-;18138:2;18133:3;18129:12;18122:19;;17781:366;;;:::o;18153:419::-;18319:4;18357:2;18346:9;18342:18;18334:26;;18406:9;18400:4;18396:20;18392:1;18381:9;18377:17;18370:47;18434:131;18560:4;18434:131;:::i;:::-;18426:139;;18153:419;;;:::o;18578:180::-;18626:77;18623:1;18616:88;18723:4;18720:1;18713:15;18747:4;18744:1;18737:15;18764:165;18904:17;18900:1;18892:6;18888:14;18881:41;18764:165;:::o;18935:366::-;19077:3;19098:67;19162:2;19157:3;19098:67;:::i;:::-;19091:74;;19174:93;19263:3;19174:93;:::i;:::-;19292:2;19287:3;19283:12;19276:19;;18935:366;;;:::o;19307:419::-;19473:4;19511:2;19500:9;19496:18;19488:26;;19560:9;19554:4;19550:20;19546:1;19535:9;19531:17;19524:47;19588:131;19714:4;19588:131;:::i;:::-;19580:139;;19307:419;;;:::o;19732:174::-;19872:26;19868:1;19860:6;19856:14;19849:50;19732:174;:::o;19912:366::-;20054:3;20075:67;20139:2;20134:3;20075:67;:::i;:::-;20068:74;;20151:93;20240:3;20151:93;:::i;:::-;20269:2;20264:3;20260:12;20253:19;;19912:366;;;:::o;20284:419::-;20450:4;20488:2;20477:9;20473:18;20465:26;;20537:9;20531:4;20527:20;20523:1;20512:9;20508:17;20501:47;20565:131;20691:4;20565:131;:::i;:::-;20557:139;;20284:419;;;:::o;20709:172::-;20849:24;20845:1;20837:6;20833:14;20826:48;20709:172;:::o;20887:366::-;21029:3;21050:67;21114:2;21109:3;21050:67;:::i;:::-;21043:74;;21126:93;21215:3;21126:93;:::i;:::-;21244:2;21239:3;21235:12;21228:19;;20887:366;;;:::o;21259:419::-;21425:4;21463:2;21452:9;21448:18;21440:26;;21512:9;21506:4;21502:20;21498:1;21487:9;21483:17;21476:47;21540:131;21666:4;21540:131;:::i;:::-;21532:139;;21259:419;;;:::o;21684:178::-;21824:30;21820:1;21812:6;21808:14;21801:54;21684:178;:::o;21868:366::-;22010:3;22031:67;22095:2;22090:3;22031:67;:::i;:::-;22024:74;;22107:93;22196:3;22107:93;:::i;:::-;22225:2;22220:3;22216:12;22209:19;;21868:366;;;:::o;22240:419::-;22406:4;22444:2;22433:9;22429:18;22421:26;;22493:9;22487:4;22483:20;22479:1;22468:9;22464:17;22457:47;22521:131;22647:4;22521:131;:::i;:::-;22513:139;;22240:419;;;:::o;22665:181::-;22805:33;22801:1;22793:6;22789:14;22782:57;22665:181;:::o;22852:366::-;22994:3;23015:67;23079:2;23074:3;23015:67;:::i;:::-;23008:74;;23091:93;23180:3;23091:93;:::i;:::-;23209:2;23204:3;23200:12;23193:19;;22852:366;;;:::o;23224:419::-;23390:4;23428:2;23417:9;23413:18;23405:26;;23477:9;23471:4;23467:20;23463:1;23452:9;23448:17;23441:47;23505:131;23631:4;23505:131;:::i;:::-;23497:139;;23224:419;;;:::o;23649:442::-;23798:4;23836:2;23825:9;23821:18;23813:26;;23849:71;23917:1;23906:9;23902:17;23893:6;23849:71;:::i;:::-;23930:72;23998:2;23987:9;23983:18;23974:6;23930:72;:::i;:::-;24012;24080:2;24069:9;24065:18;24056:6;24012:72;:::i;:::-;23649:442;;;;;;:::o;24097:332::-;24218:4;24256:2;24245:9;24241:18;24233:26;;24269:71;24337:1;24326:9;24322:17;24313:6;24269:71;:::i;:::-;24350:72;24418:2;24407:9;24403:18;24394:6;24350:72;:::i;:::-;24097:332;;;;;:::o;24435:180::-;24483:77;24480:1;24473:88;24580:4;24577:1;24570:15;24604:4;24601:1;24594:15;24621:191;24661:3;24680:20;24698:1;24680:20;:::i;:::-;24675:25;;24714:20;24732:1;24714:20;:::i;:::-;24709:25;;24757:1;24754;24750:9;24743:16;;24778:3;24775:1;24772:10;24769:36;;;24785:18;;:::i;:::-;24769:36;24621:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2307000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN()": "437",
								"BOND_ISSUER()": "435",
								"DEFAULT_ADMIN_ROLE()": "441",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"buyBond(uint256)": "infinite",
								"claimFaceValue(uint256)": "infinite",
								"claimInvestorFunds()": "infinite",
								"decimals()": "406",
								"distributeInterest(address,uint256)": "infinite",
								"distributeInterestAll(address[],uint256[])": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3234",
								"interestToken()": "2619",
								"maturityDate()": "infinite",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "2540",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setInterestToken(address)": "24760",
								"showBondTokens()": "infinite",
								"showInterestTokens()": "infinite",
								"showStableCoins()": "infinite",
								"stableCoin()": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 373,
									"end": 3782,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 698,
									"end": 1086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "C"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "426F6E44654669546F6B656E0000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "4244460000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 872,
									"end": 904,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 487,
									"end": 505,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
								},
								{
									"begin": 890,
									"end": 903,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 872,
									"end": 882,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 872,
									"end": 882,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 872,
									"end": 882,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 872,
									"end": 904,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 872,
									"end": 904,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 872,
									"end": 904,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 872,
									"end": 904,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 872,
									"end": 904,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 872,
									"end": 904,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 914,
									"end": 949,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 549,
									"end": 573,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "F877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7"
								},
								{
									"begin": 938,
									"end": 948,
									"modifierDepth": 1,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 914,
									"end": 924,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 914,
									"end": 924,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 914,
									"end": 924,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 914,
									"end": 949,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 914,
									"end": 949,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 914,
									"end": 949,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 914,
									"end": 949,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 914,
									"end": 949,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 914,
									"end": 949,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 972,
									"end": 983,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 959,
									"end": 983,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 983,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 959,
									"end": 983,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 959,
									"end": 983,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 959,
									"end": 983,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 983,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 959,
									"end": 983,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 959,
									"end": 983,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 959,
									"end": 983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 959,
									"end": 983,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1008,
									"end": 1021,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 993,
									"end": 1021,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 993,
									"end": 1021,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 993,
									"end": 1021,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 993,
									"end": 1021,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 993,
									"end": 1021,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 993,
									"end": 1021,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1031,
									"end": 1079,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1037,
									"end": 1047,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 1068,
									"end": 1078,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1068,
									"end": 1076,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1068,
									"end": 1076,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1068,
									"end": 1076,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1068,
									"end": 1078,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1068,
									"end": 1078,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1068,
									"end": 1078,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1068,
									"end": 1078,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1068,
									"end": 1078,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1062,
									"end": 1064,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 1062,
									"end": 1078,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1062,
									"end": 1078,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1062,
									"end": 1078,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1062,
									"end": 1078,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1062,
									"end": 1078,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1062,
									"end": 1078,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1062,
									"end": 1078,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1049,
									"end": 1059,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1049,
									"end": 1078,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1049,
									"end": 1078,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1049,
									"end": 1078,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1049,
									"end": 1078,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1049,
									"end": 1078,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1049,
									"end": 1078,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1049,
									"end": 1078,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1031,
									"end": 1036,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1031,
									"end": 1036,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1031,
									"end": 1036,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1031,
									"end": 1079,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1031,
									"end": 1079,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1031,
									"end": 1079,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1031,
									"end": 1079,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1031,
									"end": 1079,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 698,
									"end": 1086,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3002,
									"end": 3084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3466,
									"end": 3631,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 3466,
									"end": 3631,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3594,
									"end": 3624,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 3608,
									"end": 3612,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3614,
									"end": 3616,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3618,
									"end": 3623,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3594,
									"end": 3607,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3594,
									"end": 3607,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3594,
									"end": 3607,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3594,
									"end": 3624,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3594,
									"end": 3624,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3594,
									"end": 3624,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3594,
									"end": 3624,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 3594,
									"end": 3624,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3466,
									"end": 3631,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3466,
									"end": 3631,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3466,
									"end": 3631,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3466,
									"end": 3631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1234,
									"end": 1238,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1242,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1244,
									"end": 1249,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1220,
									"end": 1250,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2002,
									"end": 2130,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 2002,
									"end": 2130,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2075,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 9,
									"value": "D93C066500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2002,
									"end": 2130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1897,
									"end": 1901,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1913,
									"end": 1927,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1913,
									"end": 1927,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1850,
									"end": 1934,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1317,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 1325,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1327,
									"end": 1333,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1343,
									"end": 1349,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1392,
									"end": 1395,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 1380,
									"end": 1389,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1367,
									"end": 1390,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1363,
									"end": 1396,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 1399,
									"end": 1478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1519,
									"end": 1520,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 1600,
									"end": 1607,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1591,
									"end": 1597,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1580,
									"end": 1589,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1576,
									"end": 1598,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1544,
									"end": 1608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1534,
									"end": 1608,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1534,
									"end": 1608,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1490,
									"end": 1618,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 1739,
									"end": 1746,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1736,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1719,
									"end": 1728,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1715,
									"end": 1737,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1683,
									"end": 1747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "tag",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1673,
									"end": 1747,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 1673,
									"end": 1747,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1628,
									"end": 1757,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1796,
									"end": 1798,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 1878,
									"end": 1885,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1869,
									"end": 1875,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1858,
									"end": 1867,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1854,
									"end": 1876,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1822,
									"end": 1886,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1812,
									"end": 1886,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1812,
									"end": 1886,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1767,
									"end": 1896,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1935,
									"end": 1937,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 2017,
									"end": 2024,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 2008,
									"end": 2014,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1997,
									"end": 2006,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1993,
									"end": 2015,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 1961,
									"end": 2025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "tag",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1951,
									"end": 2025,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1951,
									"end": 2025,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1906,
									"end": 2035,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2074,
									"end": 2077,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 2157,
									"end": 2164,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2137,
									"end": 2146,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 2133,
									"end": 2155,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2101,
									"end": 2165,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2091,
									"end": 2165,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2091,
									"end": 2165,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2045,
									"end": 2175,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2188,
									"end": 2287,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2188,
									"end": 2287,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2240,
									"end": 2246,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2274,
									"end": 2279,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2268,
									"end": 2280,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2258,
									"end": 2280,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2258,
									"end": 2280,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2188,
									"end": 2287,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2188,
									"end": 2287,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2188,
									"end": 2287,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2188,
									"end": 2287,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2293,
									"end": 2473,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2293,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2341,
									"end": 2418,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2331,
									"end": 2419,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2438,
									"end": 2442,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 2435,
									"end": 2436,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2428,
									"end": 2443,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2459,
									"end": 2460,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2452,
									"end": 2467,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2479,
									"end": 2659,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2479,
									"end": 2659,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2527,
									"end": 2604,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2524,
									"end": 2525,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2517,
									"end": 2605,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2624,
									"end": 2628,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 2621,
									"end": 2622,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2614,
									"end": 2629,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2648,
									"end": 2652,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2645,
									"end": 2646,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2638,
									"end": 2653,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2665,
									"end": 2985,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2665,
									"end": 2985,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2709,
									"end": 2715,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2746,
									"end": 2747,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 2740,
									"end": 2744,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2736,
									"end": 2748,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 2726,
									"end": 2748,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2726,
									"end": 2748,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2793,
									"end": 2794,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2787,
									"end": 2791,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2783,
									"end": 2795,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2814,
									"end": 2832,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2804,
									"end": 2885,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 2804,
									"end": 2885,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2870,
									"end": 2874,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 2862,
									"end": 2868,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2848,
									"end": 2875,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2848,
									"end": 2875,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2804,
									"end": 2885,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 2804,
									"end": 2885,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2932,
									"end": 2934,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2924,
									"end": 2930,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2921,
									"end": 2935,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2901,
									"end": 2919,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2898,
									"end": 2936,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2895,
									"end": 2979,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 2895,
									"end": 2979,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2951,
									"end": 2969,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 2951,
									"end": 2969,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2951,
									"end": 2969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2951,
									"end": 2969,
									"name": "tag",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 2951,
									"end": 2969,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2895,
									"end": 2979,
									"name": "tag",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 2895,
									"end": 2979,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2716,
									"end": 2985,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2665,
									"end": 2985,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2665,
									"end": 2985,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2665,
									"end": 2985,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2665,
									"end": 2985,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2991,
									"end": 3132,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 2991,
									"end": 3132,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3040,
									"end": 3044,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3063,
									"end": 3066,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3055,
									"end": 3066,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3055,
									"end": 3066,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3086,
									"end": 3089,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3083,
									"end": 3084,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3076,
									"end": 3090,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3120,
									"end": 3124,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3117,
									"end": 3118,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3107,
									"end": 3125,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 3099,
									"end": 3125,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3099,
									"end": 3125,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2991,
									"end": 3132,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2991,
									"end": 3132,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2991,
									"end": 3132,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2991,
									"end": 3132,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3138,
									"end": 3231,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3138,
									"end": 3231,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3175,
									"end": 3181,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3222,
									"end": 3224,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3217,
									"end": 3219,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3210,
									"end": 3215,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3206,
									"end": 3220,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3202,
									"end": 3225,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 3192,
									"end": 3225,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3192,
									"end": 3225,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3138,
									"end": 3231,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3138,
									"end": 3231,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3138,
									"end": 3231,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3138,
									"end": 3231,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3237,
									"end": 3344,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 3237,
									"end": 3344,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3281,
									"end": 3289,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3331,
									"end": 3336,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3325,
									"end": 3329,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3321,
									"end": 3337,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3300,
									"end": 3337,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3300,
									"end": 3337,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3237,
									"end": 3344,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3237,
									"end": 3344,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3237,
									"end": 3344,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3237,
									"end": 3344,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3237,
									"end": 3344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3350,
									"end": 3743,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 3350,
									"end": 3743,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3419,
									"end": 3425,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 3457,
									"end": 3467,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3453,
									"end": 3471,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3492,
									"end": 3589,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 3522,
									"end": 3588,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3511,
									"end": 3520,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3492,
									"end": 3589,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 3492,
									"end": 3589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3492,
									"end": 3589,
									"name": "tag",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 3492,
									"end": 3589,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3610,
									"end": 3649,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 3640,
									"end": 3648,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3629,
									"end": 3638,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3610,
									"end": 3649,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 3610,
									"end": 3649,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3610,
									"end": 3649,
									"name": "tag",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 3610,
									"end": 3649,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3598,
									"end": 3649,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 3598,
									"end": 3649,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3682,
									"end": 3686,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3678,
									"end": 3687,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3671,
									"end": 3676,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3667,
									"end": 3688,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3658,
									"end": 3688,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 3658,
									"end": 3688,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3731,
									"end": 3735,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3721,
									"end": 3729,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3717,
									"end": 3736,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3710,
									"end": 3715,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3707,
									"end": 3737,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 3697,
									"end": 3737,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3697,
									"end": 3737,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3426,
									"end": 3743,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3426,
									"end": 3743,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3350,
									"end": 3743,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 3350,
									"end": 3743,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3350,
									"end": 3743,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3350,
									"end": 3743,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3350,
									"end": 3743,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3350,
									"end": 3743,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3749,
									"end": 3809,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3749,
									"end": 3809,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3777,
									"end": 3780,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3798,
									"end": 3803,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3749,
									"end": 3809,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3749,
									"end": 3809,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3749,
									"end": 3809,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3749,
									"end": 3809,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3815,
									"end": 3957,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3815,
									"end": 3957,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3865,
									"end": 3874,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3898,
									"end": 3951,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 3916,
									"end": 3950,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 3925,
									"end": 3949,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 3943,
									"end": 3948,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 3949,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 3925,
									"end": 3949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 3949,
									"name": "tag",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 3925,
									"end": 3949,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3916,
									"end": 3950,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3916,
									"end": 3950,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3916,
									"end": 3950,
									"name": "tag",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 3916,
									"end": 3950,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3898,
									"end": 3951,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 3898,
									"end": 3951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3898,
									"end": 3951,
									"name": "tag",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 3898,
									"end": 3951,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3885,
									"end": 3951,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3885,
									"end": 3951,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3815,
									"end": 3957,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3815,
									"end": 3957,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3815,
									"end": 3957,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3815,
									"end": 3957,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3963,
									"end": 4038,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3963,
									"end": 4038,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4006,
									"end": 4009,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4027,
									"end": 4032,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4020,
									"end": 4032,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4020,
									"end": 4032,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3963,
									"end": 4038,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3963,
									"end": 4038,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3963,
									"end": 4038,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3963,
									"end": 4038,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4044,
									"end": 4313,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 4044,
									"end": 4313,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4154,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 4185,
									"end": 4192,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4154,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 4154,
									"end": 4193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4154,
									"end": 4193,
									"name": "tag",
									"source": 13,
									"value": "149"
								},
								{
									"begin": 4154,
									"end": 4193,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4215,
									"end": 4306,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 4264,
									"end": 4305,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 4288,
									"end": 4304,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4264,
									"end": 4305,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 4264,
									"end": 4305,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4264,
									"end": 4305,
									"name": "tag",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 4264,
									"end": 4305,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4256,
									"end": 4262,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4243,
									"end": 4254,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4215,
									"end": 4306,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 4215,
									"end": 4306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4215,
									"end": 4306,
									"name": "tag",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 4215,
									"end": 4306,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4209,
									"end": 4213,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4202,
									"end": 4307,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4120,
									"end": 4313,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4044,
									"end": 4313,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4044,
									"end": 4313,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4044,
									"end": 4313,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4044,
									"end": 4313,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4319,
									"end": 4392,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 4319,
									"end": 4392,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4364,
									"end": 4367,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4319,
									"end": 4392,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4319,
									"end": 4392,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4398,
									"end": 4587,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 4398,
									"end": 4587,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4475,
									"end": 4507,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 4475,
									"end": 4507,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 4475,
									"end": 4507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4475,
									"end": 4507,
									"name": "tag",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 4475,
									"end": 4507,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4516,
									"end": 4581,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 4574,
									"end": 4580,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4566,
									"end": 4572,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4560,
									"end": 4564,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4516,
									"end": 4581,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 4516,
									"end": 4581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4516,
									"end": 4581,
									"name": "tag",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 4516,
									"end": 4581,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4587,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4398,
									"end": 4587,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4398,
									"end": 4587,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4398,
									"end": 4587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4593,
									"end": 4779,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 4593,
									"end": 4779,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "tag",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4670,
									"end": 4673,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4663,
									"end": 4668,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4660,
									"end": 4674,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4724,
									"end": 4763,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 4761,
									"end": 4762,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4754,
									"end": 4759,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4724,
									"end": 4763,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 4724,
									"end": 4763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4724,
									"end": 4763,
									"name": "tag",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 4724,
									"end": 4763,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4697,
									"end": 4698,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4690,
									"end": 4695,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4686,
									"end": 4699,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4677,
									"end": 4699,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4677,
									"end": 4699,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "tag",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 4653,
									"end": 4773,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4593,
									"end": 4779,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4593,
									"end": 4779,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4593,
									"end": 4779,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4785,
									"end": 5328,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 4785,
									"end": 5328,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4888,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4881,
									"end": 4884,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4878,
									"end": 4889,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4875,
									"end": 5321,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4875,
									"end": 5321,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 4875,
									"end": 5321,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4920,
									"end": 4958,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "163"
								},
								{
									"begin": 4952,
									"end": 4957,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4920,
									"end": 4958,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 4920,
									"end": 4958,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4920,
									"end": 4958,
									"name": "tag",
									"source": 13,
									"value": "163"
								},
								{
									"begin": 4920,
									"end": 4958,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5004,
									"end": 5033,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 5022,
									"end": 5032,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5004,
									"end": 5033,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 5004,
									"end": 5033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5004,
									"end": 5033,
									"name": "tag",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 5004,
									"end": 5033,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4994,
									"end": 5002,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4990,
									"end": 5034,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5187,
									"end": 5189,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5175,
									"end": 5185,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5172,
									"end": 5190,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5169,
									"end": 5218,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5169,
									"end": 5218,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "165"
								},
								{
									"begin": 5169,
									"end": 5218,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5208,
									"end": 5216,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5193,
									"end": 5216,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5193,
									"end": 5216,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5169,
									"end": 5218,
									"name": "tag",
									"source": 13,
									"value": "165"
								},
								{
									"begin": 5169,
									"end": 5218,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5231,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 5287,
									"end": 5309,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 5305,
									"end": 5308,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5287,
									"end": 5309,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 5287,
									"end": 5309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5287,
									"end": 5309,
									"name": "tag",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 5287,
									"end": 5309,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5277,
									"end": 5285,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5273,
									"end": 5310,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5260,
									"end": 5271,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5231,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 5231,
									"end": 5311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5231,
									"end": 5311,
									"name": "tag",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 5231,
									"end": 5311,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4890,
									"end": 5321,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4890,
									"end": 5321,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4875,
									"end": 5321,
									"name": "tag",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 4875,
									"end": 5321,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4785,
									"end": 5328,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4785,
									"end": 5328,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4785,
									"end": 5328,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4785,
									"end": 5328,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5334,
									"end": 5451,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 5334,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5388,
									"end": 5396,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5438,
									"end": 5443,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5432,
									"end": 5436,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5428,
									"end": 5444,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 5407,
									"end": 5444,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5407,
									"end": 5444,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5334,
									"end": 5451,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5334,
									"end": 5451,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5334,
									"end": 5451,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5334,
									"end": 5451,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5334,
									"end": 5451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5457,
									"end": 5626,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 5457,
									"end": 5626,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5534,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 5582,
									"end": 5583,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5578,
									"end": 5584,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5570,
									"end": 5575,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5567,
									"end": 5568,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 5563,
									"end": 5576,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 5534,
									"end": 5585,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 5534,
									"end": 5585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5534,
									"end": 5585,
									"name": "tag",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 5534,
									"end": 5585,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5530,
									"end": 5586,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5615,
									"end": 5619,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5609,
									"end": 5613,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5605,
									"end": 5620,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5508,
									"end": 5626,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5457,
									"end": 5626,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5457,
									"end": 5626,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5457,
									"end": 5626,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5457,
									"end": 5626,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5457,
									"end": 5626,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5631,
									"end": 5926,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 5631,
									"end": 5926,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5707,
									"end": 5711,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5853,
									"end": 5882,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "172"
								},
								{
									"begin": 5878,
									"end": 5881,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5872,
									"end": 5876,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5853,
									"end": 5882,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 5853,
									"end": 5882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5853,
									"end": 5882,
									"name": "tag",
									"source": 13,
									"value": "172"
								},
								{
									"begin": 5853,
									"end": 5882,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5845,
									"end": 5882,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5845,
									"end": 5882,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5912,
									"end": 5913,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 5908,
									"end": 5919,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 5902,
									"end": 5906,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5899,
									"end": 5920,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 5891,
									"end": 5920,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5891,
									"end": 5920,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5631,
									"end": 5926,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5631,
									"end": 5926,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5631,
									"end": 5926,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5631,
									"end": 5926,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5631,
									"end": 5926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5931,
									"end": 7326,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 5931,
									"end": 7326,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6048,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "174"
								},
								{
									"begin": 6081,
									"end": 6084,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6048,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 6048,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6048,
									"end": 6085,
									"name": "tag",
									"source": 13,
									"value": "174"
								},
								{
									"begin": 6048,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6150,
									"end": 6168,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6142,
									"end": 6148,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6139,
									"end": 6169,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 6136,
									"end": 6192,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6136,
									"end": 6192,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "175"
								},
								{
									"begin": 6136,
									"end": 6192,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6172,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "176"
								},
								{
									"begin": 6172,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 6172,
									"end": 6190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6172,
									"end": 6190,
									"name": "tag",
									"source": 13,
									"value": "176"
								},
								{
									"begin": 6172,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6136,
									"end": 6192,
									"name": "tag",
									"source": 13,
									"value": "175"
								},
								{
									"begin": 6136,
									"end": 6192,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6216,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "177"
								},
								{
									"begin": 6248,
									"end": 6252,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6242,
									"end": 6253,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 6216,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 6216,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6216,
									"end": 6254,
									"name": "tag",
									"source": 13,
									"value": "177"
								},
								{
									"begin": 6216,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6301,
									"end": 6368,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "178"
								},
								{
									"begin": 6361,
									"end": 6367,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6353,
									"end": 6359,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6301,
									"end": 6368,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 6301,
									"end": 6368,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6301,
									"end": 6368,
									"name": "tag",
									"source": 13,
									"value": "178"
								},
								{
									"begin": 6301,
									"end": 6368,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6395,
									"end": 6396,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6419,
									"end": 6423,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6406,
									"end": 6423,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6406,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6451,
									"end": 6453,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6443,
									"end": 6449,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6440,
									"end": 6454,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 6468,
									"end": 6469,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6463,
									"end": 7081,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 7081,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 7081,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "180"
								},
								{
									"begin": 6463,
									"end": 7081,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7125,
									"end": 7126,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7142,
									"end": 7148,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7139,
									"end": 7216,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7139,
									"end": 7216,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "181"
								},
								{
									"begin": 7139,
									"end": 7216,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7191,
									"end": 7200,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7186,
									"end": 7189,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 7182,
									"end": 7201,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7176,
									"end": 7202,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7167,
									"end": 7202,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7167,
									"end": 7202,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7139,
									"end": 7216,
									"name": "tag",
									"source": 13,
									"value": "181"
								},
								{
									"begin": 7139,
									"end": 7216,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7242,
									"end": 7309,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "182"
								},
								{
									"begin": 7302,
									"end": 7308,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7295,
									"end": 7300,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7242,
									"end": 7309,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 7242,
									"end": 7309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7242,
									"end": 7309,
									"name": "tag",
									"source": 13,
									"value": "182"
								},
								{
									"begin": 7242,
									"end": 7309,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7236,
									"end": 7240,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7229,
									"end": 7310,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7098,
									"end": 7320,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6433,
									"end": 7320,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "179"
								},
								{
									"begin": 6433,
									"end": 7320,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 7081,
									"name": "tag",
									"source": 13,
									"value": "180"
								},
								{
									"begin": 6463,
									"end": 7081,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6515,
									"end": 6519,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6511,
									"end": 6520,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 6503,
									"end": 6509,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6499,
									"end": 6521,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6549,
									"end": 6586,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 6549,
									"end": 6586,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 6549,
									"end": 6586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6549,
									"end": 6586,
									"name": "tag",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 6549,
									"end": 6586,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6608,
									"end": 6609,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "tag",
									"source": 13,
									"value": "184"
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6636,
									"end": 6643,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6633,
									"end": 6634,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6630,
									"end": 6644,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "186"
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6715,
									"end": 6724,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6710,
									"end": 6713,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6706,
									"end": 6725,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6700,
									"end": 6726,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6692,
									"end": 6698,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6685,
									"end": 6727,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6766,
									"end": 6767,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6758,
									"end": 6764,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6754,
									"end": 6768,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6744,
									"end": 6768,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6744,
									"end": 6768,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6813,
									"end": 6815,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6802,
									"end": 6811,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6798,
									"end": 6816,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6785,
									"end": 6816,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 6785,
									"end": 6816,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6659,
									"end": 6663,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6656,
									"end": 6657,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6652,
									"end": 6664,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6647,
									"end": 6664,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6647,
									"end": 6664,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "184"
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "tag",
									"source": 13,
									"value": "186"
								},
								{
									"begin": 6622,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6858,
									"end": 6864,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 6849,
									"end": 6856,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6846,
									"end": 6865,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6843,
									"end": 7022,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6843,
									"end": 7022,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 6843,
									"end": 7022,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6916,
									"end": 6925,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6911,
									"end": 6914,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6907,
									"end": 6926,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6901,
									"end": 6927,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6959,
									"end": 7007,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "188"
								},
								{
									"begin": 7001,
									"end": 7005,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6993,
									"end": 6999,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 6989,
									"end": 7006,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6978,
									"end": 6987,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6959,
									"end": 7007,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 6959,
									"end": 7007,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6959,
									"end": 7007,
									"name": "tag",
									"source": 13,
									"value": "188"
								},
								{
									"begin": 6959,
									"end": 7007,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6951,
									"end": 6957,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6944,
									"end": 7008,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6866,
									"end": 7022,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6843,
									"end": 7022,
									"name": "tag",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 6843,
									"end": 7022,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7068,
									"end": 7069,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7064,
									"end": 7065,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 7056,
									"end": 7062,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 7052,
									"end": 7066,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7048,
									"end": 7070,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7042,
									"end": 7046,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 7035,
									"end": 7071,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6470,
									"end": 7081,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6470,
									"end": 7081,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6470,
									"end": 7081,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6433,
									"end": 7320,
									"name": "tag",
									"source": 13,
									"value": "179"
								},
								{
									"begin": 6433,
									"end": 7320,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6433,
									"end": 7320,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6023,
									"end": 7326,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6023,
									"end": 7326,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6023,
									"end": 7326,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5931,
									"end": 7326,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5931,
									"end": 7326,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5931,
									"end": 7326,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7332,
									"end": 7512,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 7332,
									"end": 7512,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7380,
									"end": 7457,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7377,
									"end": 7378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7370,
									"end": 7458,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 7477,
									"end": 7481,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 7474,
									"end": 7475,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 7467,
									"end": 7482,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 7501,
									"end": 7505,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 7498,
									"end": 7499,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7491,
									"end": 7506,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 7518,
									"end": 7620,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 7518,
									"end": 7620,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7560,
									"end": 7568,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7607,
									"end": 7612,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7604,
									"end": 7605,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7600,
									"end": 7613,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 7579,
									"end": 7613,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7579,
									"end": 7613,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7518,
									"end": 7620,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7518,
									"end": 7620,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7518,
									"end": 7620,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7518,
									"end": 7620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7626,
									"end": 8474,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 7626,
									"end": 8474,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7687,
									"end": 7692,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7694,
									"end": 7698,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7718,
									"end": 7724,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7709,
									"end": 7724,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7709,
									"end": 7724,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7742,
									"end": 7747,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7733,
									"end": 7747,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7733,
									"end": 7747,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7756,
									"end": 8468,
									"name": "tag",
									"source": 13,
									"value": "192"
								},
								{
									"begin": 7756,
									"end": 8468,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7777,
									"end": 7778,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7767,
									"end": 7775,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7764,
									"end": 7779,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7756,
									"end": 8468,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7756,
									"end": 8468,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "194"
								},
								{
									"begin": 7756,
									"end": 8468,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7872,
									"end": 7876,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7867,
									"end": 7870,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7863,
									"end": 7877,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 7857,
									"end": 7861,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7854,
									"end": 7878,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7851,
									"end": 7901,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7851,
									"end": 7901,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "195"
								},
								{
									"begin": 7851,
									"end": 7901,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7881,
									"end": 7899,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "196"
								},
								{
									"begin": 7881,
									"end": 7899,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 7881,
									"end": 7899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7881,
									"end": 7899,
									"name": "tag",
									"source": 13,
									"value": "196"
								},
								{
									"begin": 7881,
									"end": 7899,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7851,
									"end": 7901,
									"name": "tag",
									"source": 13,
									"value": "195"
								},
								{
									"begin": 7851,
									"end": 7901,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7931,
									"end": 7932,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7921,
									"end": 7929,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7917,
									"end": 7933,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7914,
									"end": 8365,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7914,
									"end": 8365,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "197"
								},
								{
									"begin": 7914,
									"end": 8365,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8346,
									"end": 8350,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 8339,
									"end": 8344,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8335,
									"end": 8351,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 8326,
									"end": 8351,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8326,
									"end": 8351,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7914,
									"end": 8365,
									"name": "tag",
									"source": 13,
									"value": "197"
								},
								{
									"begin": 7914,
									"end": 8365,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8396,
									"end": 8400,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 8390,
									"end": 8394,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8386,
									"end": 8401,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 8378,
									"end": 8401,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8378,
									"end": 8401,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8426,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "198"
								},
								{
									"begin": 8449,
									"end": 8457,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8426,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 8426,
									"end": 8458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8426,
									"end": 8458,
									"name": "tag",
									"source": 13,
									"value": "198"
								},
								{
									"begin": 8426,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8414,
									"end": 8458,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 8414,
									"end": 8458,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7756,
									"end": 8468,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "192"
								},
								{
									"begin": 7756,
									"end": 8468,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7756,
									"end": 8468,
									"name": "tag",
									"source": 13,
									"value": "194"
								},
								{
									"begin": 7756,
									"end": 8468,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7626,
									"end": 8474,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7626,
									"end": 8474,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7626,
									"end": 8474,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7626,
									"end": 8474,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7626,
									"end": 8474,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7626,
									"end": 8474,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7626,
									"end": 8474,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7626,
									"end": 8474,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8480,
									"end": 9553,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 8480,
									"end": 9553,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8534,
									"end": 8539,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8725,
									"end": 8733,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8715,
									"end": 8755,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "200"
								},
								{
									"begin": 8715,
									"end": 8755,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8746,
									"end": 8747,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8737,
									"end": 8747,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8737,
									"end": 8747,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8748,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 8748,
									"end": 8753,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8715,
									"end": 8755,
									"name": "tag",
									"source": 13,
									"value": "200"
								},
								{
									"begin": 8715,
									"end": 8755,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8774,
									"end": 8778,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8764,
									"end": 8800,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "201"
								},
								{
									"begin": 8764,
									"end": 8800,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8791,
									"end": 8792,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8782,
									"end": 8792,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8782,
									"end": 8792,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8793,
									"end": 8798,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 8793,
									"end": 8798,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8764,
									"end": 8800,
									"name": "tag",
									"source": 13,
									"value": "201"
								},
								{
									"begin": 8764,
									"end": 8800,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8860,
									"end": 8864,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8908,
									"end": 8909,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8903,
									"end": 8930,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8903,
									"end": 8930,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 8903,
									"end": 8930,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "203"
								},
								{
									"begin": 8903,
									"end": 8930,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8944,
									"end": 8945,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 8939,
									"end": 9130,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8939,
									"end": 9130,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 8939,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "204"
								},
								{
									"begin": 8939,
									"end": 9130,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8853,
									"end": 9130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "202"
								},
								{
									"begin": 8853,
									"end": 9130,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8903,
									"end": 8930,
									"name": "tag",
									"source": 13,
									"value": "203"
								},
								{
									"begin": 8903,
									"end": 8930,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8921,
									"end": 8922,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8912,
									"end": 8922,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8912,
									"end": 8922,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8923,
									"end": 8928,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8923,
									"end": 8928,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 8923,
									"end": 8928,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8939,
									"end": 9130,
									"name": "tag",
									"source": 13,
									"value": "204"
								},
								{
									"begin": 8939,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8984,
									"end": 8987,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 8974,
									"end": 8982,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8971,
									"end": 8988,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8968,
									"end": 9011,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8968,
									"end": 9011,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "205"
								},
								{
									"begin": 8968,
									"end": 9011,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8991,
									"end": 9009,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 8991,
									"end": 9009,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 8991,
									"end": 9009,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8991,
									"end": 9009,
									"name": "tag",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 8991,
									"end": 9009,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8968,
									"end": 9011,
									"name": "tag",
									"source": 13,
									"value": "205"
								},
								{
									"begin": 8968,
									"end": 9011,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9040,
									"end": 9048,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9037,
									"end": 9038,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 9033,
									"end": 9049,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 9024,
									"end": 9049,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9024,
									"end": 9049,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9075,
									"end": 9078,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9068,
									"end": 9073,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9065,
									"end": 9079,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9062,
									"end": 9102,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9062,
									"end": 9102,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "207"
								},
								{
									"begin": 9062,
									"end": 9102,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9082,
									"end": 9100,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "208"
								},
								{
									"begin": 9082,
									"end": 9100,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 9082,
									"end": 9100,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9082,
									"end": 9100,
									"name": "tag",
									"source": 13,
									"value": "208"
								},
								{
									"begin": 9082,
									"end": 9100,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9062,
									"end": 9102,
									"name": "tag",
									"source": 13,
									"value": "207"
								},
								{
									"begin": 9062,
									"end": 9102,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9115,
									"end": 9120,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9115,
									"end": 9120,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 9115,
									"end": 9120,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8853,
									"end": 9130,
									"name": "tag",
									"source": 13,
									"value": "202"
								},
								{
									"begin": 8853,
									"end": 9130,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8853,
									"end": 9130,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9239,
									"end": 9241,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9229,
									"end": 9237,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9226,
									"end": 9242,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 9220,
									"end": 9223,
									"name": "PUSH",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 9214,
									"end": 9218,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9211,
									"end": 9224,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 9207,
									"end": 9243,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9189,
									"end": 9191,
									"name": "PUSH",
									"source": 13,
									"value": "4E"
								},
								{
									"begin": 9179,
									"end": 9187,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9176,
									"end": 9192,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 9171,
									"end": 9173,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 9165,
									"end": 9169,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9162,
									"end": 9174,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 9158,
									"end": 9193,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9142,
									"end": 9253,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 9139,
									"end": 9385,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9139,
									"end": 9385,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "209"
								},
								{
									"begin": 9139,
									"end": 9385,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9295,
									"end": 9303,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9289,
									"end": 9293,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9285,
									"end": 9304,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 9276,
									"end": 9304,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9276,
									"end": 9304,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9330,
									"end": 9333,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9323,
									"end": 9328,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9320,
									"end": 9334,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9317,
									"end": 9357,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9317,
									"end": 9357,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 9317,
									"end": 9357,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9337,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "211"
								},
								{
									"begin": 9337,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 9337,
									"end": 9355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9337,
									"end": 9355,
									"name": "tag",
									"source": 13,
									"value": "211"
								},
								{
									"begin": 9337,
									"end": 9355,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9317,
									"end": 9357,
									"name": "tag",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 9317,
									"end": 9357,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9370,
									"end": 9375,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 9370,
									"end": 9375,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9139,
									"end": 9385,
									"name": "tag",
									"source": 13,
									"value": "209"
								},
								{
									"begin": 9139,
									"end": 9385,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9410,
									"end": 9452,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "212"
								},
								{
									"begin": 9448,
									"end": 9451,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9438,
									"end": 9446,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9432,
									"end": 9436,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9429,
									"end": 9430,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 9410,
									"end": 9452,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 9410,
									"end": 9452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9410,
									"end": 9452,
									"name": "tag",
									"source": 13,
									"value": "212"
								},
								{
									"begin": 9410,
									"end": 9452,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9395,
									"end": 9452,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9395,
									"end": 9452,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9395,
									"end": 9452,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9395,
									"end": 9452,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9484,
									"end": 9488,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9479,
									"end": 9482,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9475,
									"end": 9489,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 9468,
									"end": 9473,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9465,
									"end": 9490,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9462,
									"end": 9513,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9462,
									"end": 9513,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "213"
								},
								{
									"begin": 9462,
									"end": 9513,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9493,
									"end": 9511,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "214"
								},
								{
									"begin": 9493,
									"end": 9511,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 9493,
									"end": 9511,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9493,
									"end": 9511,
									"name": "tag",
									"source": 13,
									"value": "214"
								},
								{
									"begin": 9493,
									"end": 9511,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9462,
									"end": 9513,
									"name": "tag",
									"source": 13,
									"value": "213"
								},
								{
									"begin": 9462,
									"end": 9513,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9542,
									"end": 9546,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9535,
									"end": 9540,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9531,
									"end": 9547,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 9522,
									"end": 9547,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9522,
									"end": 9547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8480,
									"end": 9553,
									"name": "tag",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 8480,
									"end": 9553,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8480,
									"end": 9553,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 8480,
									"end": 9553,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 8480,
									"end": 9553,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8480,
									"end": 9553,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8480,
									"end": 9553,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8480,
									"end": 9553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9559,
									"end": 9645,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 9559,
									"end": 9645,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9594,
									"end": 9601,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9634,
									"end": 9638,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 9627,
									"end": 9632,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9623,
									"end": 9639,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9612,
									"end": 9639,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9612,
									"end": 9639,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9559,
									"end": 9645,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9559,
									"end": 9645,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9559,
									"end": 9645,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9559,
									"end": 9645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9651,
									"end": 9932,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9651,
									"end": 9932,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9709,
									"end": 9714,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9733,
									"end": 9756,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "217"
								},
								{
									"begin": 9751,
									"end": 9755,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9733,
									"end": 9756,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 9733,
									"end": 9756,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9733,
									"end": 9756,
									"name": "tag",
									"source": 13,
									"value": "217"
								},
								{
									"begin": 9733,
									"end": 9756,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9725,
									"end": 9756,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9725,
									"end": 9756,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9777,
									"end": 9802,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "218"
								},
								{
									"begin": 9793,
									"end": 9801,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9777,
									"end": 9802,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 9777,
									"end": 9802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9777,
									"end": 9802,
									"name": "tag",
									"source": 13,
									"value": "218"
								},
								{
									"begin": 9777,
									"end": 9802,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9765,
									"end": 9802,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9765,
									"end": 9802,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9821,
									"end": 9925,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "219"
								},
								{
									"begin": 9858,
									"end": 9924,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9848,
									"end": 9856,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9842,
									"end": 9846,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9821,
									"end": 9925,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 9821,
									"end": 9925,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9821,
									"end": 9925,
									"name": "tag",
									"source": 13,
									"value": "219"
								},
								{
									"begin": 9821,
									"end": 9925,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9812,
									"end": 9925,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9812,
									"end": 9925,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9651,
									"end": 9932,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9651,
									"end": 9932,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9651,
									"end": 9932,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9651,
									"end": 9932,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9651,
									"end": 9932,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9938,
									"end": 10348,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 9938,
									"end": 10348,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9978,
									"end": 9985,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10001,
									"end": 10021,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "221"
								},
								{
									"begin": 10019,
									"end": 10020,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10001,
									"end": 10021,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 10001,
									"end": 10021,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10001,
									"end": 10021,
									"name": "tag",
									"source": 13,
									"value": "221"
								},
								{
									"begin": 10001,
									"end": 10021,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9996,
									"end": 10021,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9996,
									"end": 10021,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10035,
									"end": 10055,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "222"
								},
								{
									"begin": 10053,
									"end": 10054,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10035,
									"end": 10055,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 10035,
									"end": 10055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10035,
									"end": 10055,
									"name": "tag",
									"source": 13,
									"value": "222"
								},
								{
									"begin": 10035,
									"end": 10055,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10030,
									"end": 10055,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10030,
									"end": 10055,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10090,
									"end": 10091,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10087,
									"end": 10088,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10083,
									"end": 10092,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 10112,
									"end": 10142,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "223"
								},
								{
									"begin": 10130,
									"end": 10141,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10112,
									"end": 10142,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 10112,
									"end": 10142,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10112,
									"end": 10142,
									"name": "tag",
									"source": 13,
									"value": "223"
								},
								{
									"begin": 10112,
									"end": 10142,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10101,
									"end": 10142,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10101,
									"end": 10142,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10291,
									"end": 10292,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10282,
									"end": 10289,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10278,
									"end": 10293,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 10275,
									"end": 10276,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10272,
									"end": 10294,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 10252,
									"end": 10253,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10245,
									"end": 10254,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 10225,
									"end": 10308,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 10202,
									"end": 10341,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "224"
								},
								{
									"begin": 10202,
									"end": 10341,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 10321,
									"end": 10339,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "225"
								},
								{
									"begin": 10321,
									"end": 10339,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 10321,
									"end": 10339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10321,
									"end": 10339,
									"name": "tag",
									"source": 13,
									"value": "225"
								},
								{
									"begin": 10321,
									"end": 10339,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10202,
									"end": 10341,
									"name": "tag",
									"source": 13,
									"value": "224"
								},
								{
									"begin": 10202,
									"end": 10341,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9986,
									"end": 10348,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9938,
									"end": 10348,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9938,
									"end": 10348,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9938,
									"end": 10348,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9938,
									"end": 10348,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9938,
									"end": 10348,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10354,
									"end": 10472,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 10354,
									"end": 10472,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10441,
									"end": 10465,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "227"
								},
								{
									"begin": 10459,
									"end": 10464,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10441,
									"end": 10465,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 10441,
									"end": 10465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10441,
									"end": 10465,
									"name": "tag",
									"source": 13,
									"value": "227"
								},
								{
									"begin": 10441,
									"end": 10465,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10436,
									"end": 10439,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10429,
									"end": 10466,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 10354,
									"end": 10472,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10354,
									"end": 10472,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10354,
									"end": 10472,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10478,
									"end": 10700,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 10478,
									"end": 10700,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10571,
									"end": 10575,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10609,
									"end": 10611,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 10598,
									"end": 10607,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10594,
									"end": 10612,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10586,
									"end": 10612,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10586,
									"end": 10612,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10622,
									"end": 10693,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "229"
								},
								{
									"begin": 10690,
									"end": 10691,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10679,
									"end": 10688,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10675,
									"end": 10692,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10666,
									"end": 10672,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10622,
									"end": 10693,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 10622,
									"end": 10693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10622,
									"end": 10693,
									"name": "tag",
									"source": 13,
									"value": "229"
								},
								{
									"begin": 10622,
									"end": 10693,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10478,
									"end": 10700,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10478,
									"end": 10700,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10478,
									"end": 10700,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10478,
									"end": 10700,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10478,
									"end": 10700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10706,
									"end": 10897,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 10706,
									"end": 10897,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10746,
									"end": 10749,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10765,
									"end": 10785,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "231"
								},
								{
									"begin": 10783,
									"end": 10784,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10765,
									"end": 10785,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 10765,
									"end": 10785,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10765,
									"end": 10785,
									"name": "tag",
									"source": 13,
									"value": "231"
								},
								{
									"begin": 10765,
									"end": 10785,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10760,
									"end": 10785,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10760,
									"end": 10785,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10799,
									"end": 10819,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "232"
								},
								{
									"begin": 10817,
									"end": 10818,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10799,
									"end": 10819,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 10799,
									"end": 10819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10799,
									"end": 10819,
									"name": "tag",
									"source": 13,
									"value": "232"
								},
								{
									"begin": 10799,
									"end": 10819,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10794,
									"end": 10819,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10794,
									"end": 10819,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10842,
									"end": 10843,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10839,
									"end": 10840,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10835,
									"end": 10844,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10828,
									"end": 10844,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10828,
									"end": 10844,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10863,
									"end": 10866,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 10860,
									"end": 10861,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10857,
									"end": 10867,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 10854,
									"end": 10890,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 10854,
									"end": 10890,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "233"
								},
								{
									"begin": 10854,
									"end": 10890,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 10870,
									"end": 10888,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "234"
								},
								{
									"begin": 10870,
									"end": 10888,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 10870,
									"end": 10888,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10870,
									"end": 10888,
									"name": "tag",
									"source": 13,
									"value": "234"
								},
								{
									"begin": 10870,
									"end": 10888,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10854,
									"end": 10890,
									"name": "tag",
									"source": 13,
									"value": "233"
								},
								{
									"begin": 10854,
									"end": 10890,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10706,
									"end": 10897,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10706,
									"end": 10897,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10706,
									"end": 10897,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10706,
									"end": 10897,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10706,
									"end": 10897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10903,
									"end": 11021,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 10903,
									"end": 11021,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10990,
									"end": 11014,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "236"
								},
								{
									"begin": 11008,
									"end": 11013,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10990,
									"end": 11014,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 10990,
									"end": 11014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10990,
									"end": 11014,
									"name": "tag",
									"source": 13,
									"value": "236"
								},
								{
									"begin": 10990,
									"end": 11014,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10985,
									"end": 10988,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10978,
									"end": 11015,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 10903,
									"end": 11021,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10903,
									"end": 11021,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10903,
									"end": 11021,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11027,
									"end": 11469,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 11027,
									"end": 11469,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11176,
									"end": 11180,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11214,
									"end": 11216,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 11203,
									"end": 11212,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11199,
									"end": 11217,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11191,
									"end": 11217,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11191,
									"end": 11217,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11227,
									"end": 11298,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "238"
								},
								{
									"begin": 11295,
									"end": 11296,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11284,
									"end": 11293,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11280,
									"end": 11297,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11271,
									"end": 11277,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 11227,
									"end": 11298,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 11227,
									"end": 11298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11227,
									"end": 11298,
									"name": "tag",
									"source": 13,
									"value": "238"
								},
								{
									"begin": 11227,
									"end": 11298,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11308,
									"end": 11380,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "239"
								},
								{
									"begin": 11376,
									"end": 11378,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 11365,
									"end": 11374,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11361,
									"end": 11379,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11352,
									"end": 11358,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 11308,
									"end": 11380,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 11308,
									"end": 11380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11308,
									"end": 11380,
									"name": "tag",
									"source": 13,
									"value": "239"
								},
								{
									"begin": 11308,
									"end": 11380,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11390,
									"end": 11462,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "240"
								},
								{
									"begin": 11458,
									"end": 11460,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 11447,
									"end": 11456,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11443,
									"end": 11461,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11434,
									"end": 11440,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 11390,
									"end": 11462,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 11390,
									"end": 11462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11390,
									"end": 11462,
									"name": "tag",
									"source": 13,
									"value": "240"
								},
								{
									"begin": 11390,
									"end": 11462,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11027,
									"end": 11469,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 11027,
									"end": 11469,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 11027,
									"end": 11469,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11027,
									"end": 11469,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11027,
									"end": 11469,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11027,
									"end": 11469,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11027,
									"end": 11469,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11475,
									"end": 11697,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 11475,
									"end": 11697,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11568,
									"end": 11572,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11606,
									"end": 11608,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 11595,
									"end": 11604,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11591,
									"end": 11609,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11583,
									"end": 11609,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11583,
									"end": 11609,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11619,
									"end": 11690,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "242"
								},
								{
									"begin": 11687,
									"end": 11688,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11676,
									"end": 11685,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11672,
									"end": 11689,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11663,
									"end": 11669,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 11619,
									"end": 11690,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 11619,
									"end": 11690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11619,
									"end": 11690,
									"name": "tag",
									"source": 13,
									"value": "242"
								},
								{
									"begin": 11619,
									"end": 11690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11475,
									"end": 11697,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 11475,
									"end": 11697,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11475,
									"end": 11697,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11475,
									"end": 11697,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11475,
									"end": 11697,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1425"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1423"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3782,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f7e65f7206b52c18eac87858610629e4d35d9ae5049cb7aacf3b4819923f75564736f6c634300081a0033",
									".code": [
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "8456CB59"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "ACD17A99"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "D59624B4"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "E091A39B"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "F57D283E"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "ACD17A99"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "CA19C11C"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "CE4120DA"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "CED0550F"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "94D7CC88"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "94D7CC88"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "992642E5"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "8456CB59"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "86D71654"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "904835C4"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "91D14854"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "42966C68"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "42966C68"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "5C975ABB"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "764B666C"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "79CC6790"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "3F4BA83A"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "2A0ACC6A"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "10002DBD"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3782,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1207,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1207,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 455,
											"end": 505,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 455,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 455,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3711,
											"end": 3780,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 3711,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3711,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 3711,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 3711,
											"end": 3780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3711,
											"end": 3780,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 3711,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3711,
											"end": 3780,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 663,
											"end": 691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 663,
											"end": 691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3705,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3640,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 3640,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 3640,
											"end": 3705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3705,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 3640,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3705,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 2983,
											"end": 3099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 2983,
											"end": 3099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 1681,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 1681,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 1091,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 1091,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 579,
											"end": 614,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 579,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 579,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 3235,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 3235,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 2425,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 2425,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 3104,
											"end": 3230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 3104,
											"end": 3230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2093,
											"end": 2419,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2093,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2093,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 2093,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 2093,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2093,
											"end": 2419,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 2093,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2093,
											"end": 2419,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 657,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 620,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 620,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 511,
											"end": 573,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 511,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 511,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1477,
											"end": 1675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 1477,
											"end": 1675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1277,
											"end": 1287,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1423"
										},
										{
											"begin": 1270,
											"end": 1301,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1270,
											"end": 1301,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1301,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 1302,
											"end": 1312,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1321,
											"end": 1325,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 1270,
											"end": 1340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 1270,
											"end": 1340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 1270,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 1262,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 1262,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1395,
											"end": 1399,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1409,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1389,
											"end": 1409,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1409,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 1410,
											"end": 1420,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1433,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 1389,
											"end": 1434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 1389,
											"end": 1434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 1389,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 1381,
											"end": 1464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 1381,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 455,
											"end": 505,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 505,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 455,
											"end": 505,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 455,
											"end": 505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3711,
											"end": 3780,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 3711,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 505,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 3763,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 3763,
											"end": 3773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3763,
											"end": 3773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 3763,
											"end": 3773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3711,
											"end": 3780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3711,
											"end": 3780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 663,
											"end": 691,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 691,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 663,
											"end": 691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3640,
											"end": 3705,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 3640,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 505,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 3698,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 3690,
											"end": 3696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 3690,
											"end": 3698,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3690,
											"end": 3698,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 3690,
											"end": 3698,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3640,
											"end": 3705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3030,
											"end": 3037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3066,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3077,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3056,
											"end": 3077,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3077,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 3056,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 3056,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 3056,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3092,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 505,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1833,
											"end": 1840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1833,
											"end": 1847,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1810,
											"end": 1822,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1810,
											"end": 1829,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1810,
											"end": 1847,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 1802,
											"end": 1893,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 1802,
											"end": 1893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1908,
											"end": 1917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 2081,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 1903,
											"end": 2081,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1927,
											"end": 1939,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1927,
											"end": 1946,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1923,
											"end": 1946,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2081,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2081,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 1903,
											"end": 2081,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1982,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1982,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1982,
											"end": 1995,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1982,
											"end": 1995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1982,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1982,
											"end": 1995,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1982,
											"end": 1995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1982,
											"end": 1995,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1982,
											"end": 1995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1982,
											"end": 1995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 2009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 2010,
											"end": 2020,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2034,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2035,
											"end": 2036,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 2022,
											"end": 2037,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2046,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2047,
											"end": 2048,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 2039,
											"end": 2049,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2049,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 1975,
											"end": 2050,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 2050,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 1975,
											"end": 2050,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 1975,
											"end": 2050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1967,
											"end": 2070,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 1967,
											"end": 2070,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1948,
											"end": 1951,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1948,
											"end": 1951,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1948,
											"end": 1951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1948,
											"end": 1951,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1948,
											"end": 1951,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1948,
											"end": 1951,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1948,
											"end": 1951,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2081,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 1903,
											"end": 2081,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2081,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 1903,
											"end": 2081,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 2081,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 2087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1194,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 579,
											"end": 614,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1423"
										},
										{
											"begin": 579,
											"end": 614,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 579,
											"end": 614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3283,
											"end": 3290,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3325,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1423"
										},
										{
											"begin": 3308,
											"end": 3336,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3308,
											"end": 3336,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3336,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 3337,
											"end": 3347,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 3308,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 3308,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3308,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3301,
											"end": 3348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3301,
											"end": 3348,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2551,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1425"
										},
										{
											"begin": 2520,
											"end": 2535,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2551,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2551,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 2512,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 2512,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2640,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2624,
											"end": 2640,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2616,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2616,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2690,
											"end": 2694,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2708,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2708,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2708,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 2709,
											"end": 2719,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2728,
											"end": 2732,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2734,
											"end": 2746,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 2684,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 2684,
											"end": 2747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 2684,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 2676,
											"end": 2777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 2676,
											"end": 2777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2802,
											"end": 2812,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1423"
										},
										{
											"begin": 2795,
											"end": 2822,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2822,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2822,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2834,
											"end": 2846,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 2795,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 2795,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 2795,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 2787,
											"end": 2878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 2787,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 2923,
											"end": 2927,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 2909,
											"end": 2942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3162,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3200,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3187,
											"end": 3200,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3200,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3200,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3187,
											"end": 3200,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3200,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3200,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3187,
											"end": 3200,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3211,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3180,
											"end": 3211,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3211,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 3212,
											"end": 3222,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 3180,
											"end": 3223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 3180,
											"end": 3223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 3180,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3173,
											"end": 3223,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3173,
											"end": 3223,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3104,
											"end": 3230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2093,
											"end": 2419,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 2093,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 549,
											"end": 573,
											"name": "PUSH",
											"source": 12,
											"value": "F877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1423"
										},
										{
											"begin": 2191,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2191,
											"end": 2219,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 2228,
											"end": 2232,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 2191,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2234,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 2191,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 2191,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2274,
											"end": 2275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2252,
											"end": 2275,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 2244,
											"end": 2307,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 2244,
											"end": 2307,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2331,
											"end": 2335,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2325,
											"end": 2345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 2346,
											"end": 2356,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2357,
											"end": 2376,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 2325,
											"end": 2377,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2377,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 2325,
											"end": 2377,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 2325,
											"end": 2377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 2317,
											"end": 2412,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 2317,
											"end": 2412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2151,
											"end": 2419,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2093,
											"end": 2419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2093,
											"end": 2419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 620,
											"end": 657,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1425"
										},
										{
											"begin": 620,
											"end": 657,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 620,
											"end": 657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 511,
											"end": 573,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 549,
											"end": 573,
											"name": "PUSH",
											"source": 12,
											"value": "F877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7"
										},
										{
											"begin": 511,
											"end": 573,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 511,
											"end": 573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 505,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1588,
											"end": 1601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1601,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1588,
											"end": 1601,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1601,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1601,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1581,
											"end": 1615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 1616,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1616,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 1629,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 1629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1616,
											"end": 1629,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 1629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 1629,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1616,
											"end": 1629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1630,
											"end": 1641,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1642,
											"end": 1648,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 1581,
											"end": 1649,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1649,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 1581,
											"end": 1649,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 1581,
											"end": 1649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1573,
											"end": 1668,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 1573,
											"end": 1668,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 2807,
											"end": 2817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 2807,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2798,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2558,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2551,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3466,
											"end": 3631,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 3466,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3594,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 3608,
											"end": 3612,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3614,
											"end": 3616,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3623,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3594,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 3594,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3594,
											"end": 3624,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 3594,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3466,
											"end": 3631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3466,
											"end": 3631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3466,
											"end": 3631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3466,
											"end": 3631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2265,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2067,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 1234,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1242,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1249,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 1220,
											"end": 1250,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 3,
											"value": "419"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "424"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4161,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4204,
											"end": 4206,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4201,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4183,
											"end": 4190,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4202,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4207,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 4210,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 4210,
											"end": 4289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4289,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 4210,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4330,
											"end": 4331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 4400,
											"end": 4407,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4391,
											"end": 4397,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4380,
											"end": 4389,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4376,
											"end": 4398,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 4355,
											"end": 4408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4345,
											"end": 4408,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4345,
											"end": 4408,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4418,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 4536,
											"end": 4541,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 4518,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4513,
											"end": 4516,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4543,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4648,
											"end": 4652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4675,
											"end": 4684,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 4767,
											"end": 4768,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4756,
											"end": 4765,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4752,
											"end": 4769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 4699,
											"end": 4770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5445,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5479,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5479,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 5582,
											"end": 5587,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 5564,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5557,
											"end": 5562,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5589,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5601,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5605,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5681,
											"end": 5710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5681,
											"end": 5710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 5746,
											"end": 5751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 5719,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5829,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 5874,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5860,
											"end": 5869,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5858,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5847,
											"end": 5870,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 5878,
											"end": 5957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5998,
											"end": 5999,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 6068,
											"end": 6075,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6059,
											"end": 6065,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6048,
											"end": 6057,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6066,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 6023,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6076,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5969,
											"end": 6086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 6204,
											"end": 6209,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 6186,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6181,
											"end": 6184,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6356,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6343,
											"end": 6352,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6331,
											"end": 6357,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6331,
											"end": 6357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 6435,
											"end": 6436,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6420,
											"end": 6437,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 6367,
											"end": 6438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6519,
											"end": 6525,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6576,
											"end": 6578,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6564,
											"end": 6573,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6555,
											"end": 6562,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6551,
											"end": 6574,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6547,
											"end": 6579,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 6582,
											"end": 6661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6702,
											"end": 6703,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 6772,
											"end": 6779,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6763,
											"end": 6769,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6752,
											"end": 6761,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6748,
											"end": 6770,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 6727,
											"end": 6780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6780,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6673,
											"end": 6790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6829,
											"end": 6831,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 6900,
											"end": 6907,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6880,
											"end": 6889,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6876,
											"end": 6898,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 6855,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6800,
											"end": 6918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7010,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6999,
											"end": 7004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6995,
											"end": 7011,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 7011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 7011,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 7122,
											"end": 7127,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 7106,
											"end": 7128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7101,
											"end": 7104,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7094,
											"end": 7129,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7230,
											"end": 7234,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7268,
											"end": 7270,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7257,
											"end": 7266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7253,
											"end": 7271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7343,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7330,
											"end": 7347,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 7281,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7420,
											"end": 7426,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7471,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7457,
											"end": 7466,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7448,
											"end": 7455,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7440,
											"end": 7472,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 7475,
											"end": 7554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7595,
											"end": 7596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 7665,
											"end": 7672,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7656,
											"end": 7662,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7645,
											"end": 7654,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7641,
											"end": 7663,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 7620,
											"end": 7673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7566,
											"end": 7683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 7814,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 7696,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7783,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 7801,
											"end": 7806,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7783,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 7783,
											"end": 7807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7783,
											"end": 7807,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 7783,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7778,
											"end": 7781,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7771,
											"end": 7808,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 7814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 7814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 7814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7820,
											"end": 8042,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 7820,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7913,
											"end": 7917,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7951,
											"end": 7953,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7940,
											"end": 7949,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7936,
											"end": 7954,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7954,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7954,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7964,
											"end": 8035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 8032,
											"end": 8033,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8021,
											"end": 8030,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8017,
											"end": 8034,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8008,
											"end": 8014,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7964,
											"end": 8035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 7964,
											"end": 8035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7964,
											"end": 8035,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 7964,
											"end": 8035,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7820,
											"end": 8042,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7820,
											"end": 8042,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7820,
											"end": 8042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7820,
											"end": 8042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7820,
											"end": 8042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8048,
											"end": 8165,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 8048,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8157,
											"end": 8158,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8147,
											"end": 8159,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8351,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 8171,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8219,
											"end": 8296,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8216,
											"end": 8217,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8209,
											"end": 8297,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8316,
											"end": 8320,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 8313,
											"end": 8314,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8306,
											"end": 8321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8340,
											"end": 8344,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8337,
											"end": 8338,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8330,
											"end": 8345,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8357,
											"end": 8638,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 8357,
											"end": 8638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 8462,
											"end": 8466,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 8440,
											"end": 8467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8467,
											"name": "tag",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 8440,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8432,
											"end": 8438,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8428,
											"end": 8468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8570,
											"end": 8576,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8558,
											"end": 8568,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8555,
											"end": 8577,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8534,
											"end": 8552,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8522,
											"end": 8532,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8519,
											"end": 8553,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8516,
											"end": 8578,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8513,
											"end": 8601,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8513,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 8513,
											"end": 8601,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 8581,
											"end": 8599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8513,
											"end": 8601,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 8513,
											"end": 8601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8621,
											"end": 8631,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8617,
											"end": 8619,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8610,
											"end": 8632,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8400,
											"end": 8638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8357,
											"end": 8638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8357,
											"end": 8638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8357,
											"end": 8638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8644,
											"end": 8773,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 8644,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8678,
											"end": 8684,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 8705,
											"end": 8725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 8725,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 8725,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8734,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 8762,
											"end": 8766,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8754,
											"end": 8760,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8734,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 8734,
											"end": 8767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8734,
											"end": 8767,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 8734,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8644,
											"end": 8773,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8644,
											"end": 8773,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8644,
											"end": 8773,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8644,
											"end": 8773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8779,
											"end": 9090,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 8779,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8856,
											"end": 8860,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8935,
											"end": 8965,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8968,
											"end": 8986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 8968,
											"end": 8986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 8968,
											"end": 8986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8968,
											"end": 8986,
											"name": "tag",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 8968,
											"end": 8986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "tag",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 8932,
											"end": 8988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9018,
											"end": 9022,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9010,
											"end": 9016,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9006,
											"end": 9023,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8998,
											"end": 9023,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8998,
											"end": 9023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9078,
											"end": 9082,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9072,
											"end": 9076,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9068,
											"end": 9083,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9060,
											"end": 9083,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9060,
											"end": 9083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8779,
											"end": 9090,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8779,
											"end": 9090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8779,
											"end": 9090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8779,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9096,
											"end": 9213,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 9096,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9205,
											"end": 9206,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9202,
											"end": 9203,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9195,
											"end": 9207,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9946,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 9236,
											"end": 9946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9332,
											"end": 9337,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9357,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 9373,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 9430,
											"end": 9436,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9373,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 9373,
											"end": 9437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9373,
											"end": 9437,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 9373,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9357,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 9357,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9357,
											"end": 9438,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 9357,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9348,
											"end": 9438,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9348,
											"end": 9438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9463,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9487,
											"end": 9493,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9480,
											"end": 9485,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9473,
											"end": 9494,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9521,
											"end": 9525,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9514,
											"end": 9519,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9510,
											"end": 9526,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9503,
											"end": 9526,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9503,
											"end": 9526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9574,
											"end": 9578,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9566,
											"end": 9572,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 9579,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 9554,
											"end": 9560,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9550,
											"end": 9580,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9603,
											"end": 9606,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9595,
											"end": 9601,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9592,
											"end": 9607,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9589,
											"end": 9711,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9589,
											"end": 9711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 9589,
											"end": 9711,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9622,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 9622,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 9622,
											"end": 9701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9622,
											"end": 9701,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 9622,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9589,
											"end": 9711,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 9589,
											"end": 9711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9737,
											"end": 9743,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9720,
											"end": 9940,
											"name": "tag",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 9720,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9754,
											"end": 9760,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9749,
											"end": 9752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9746,
											"end": 9761,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9720,
											"end": 9940,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9720,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 9720,
											"end": 9940,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9829,
											"end": 9832,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9858,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 9891,
											"end": 9894,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9879,
											"end": 9889,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9858,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 9858,
											"end": 9895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9858,
											"end": 9895,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 9858,
											"end": 9895,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9853,
											"end": 9856,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9846,
											"end": 9896,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9925,
											"end": 9929,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9920,
											"end": 9923,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9916,
											"end": 9930,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9909,
											"end": 9930,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9909,
											"end": 9930,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9796,
											"end": 9940,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9780,
											"end": 9784,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9775,
											"end": 9778,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9771,
											"end": 9785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9764,
											"end": 9785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9764,
											"end": 9785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9720,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 9720,
											"end": 9940,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9720,
											"end": 9940,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 9720,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9724,
											"end": 9745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9338,
											"end": 9946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9338,
											"end": 9946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9946,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9946,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10339,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 9969,
											"end": 10339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10045,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10089,
											"end": 10092,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10082,
											"end": 10086,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10074,
											"end": 10080,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10070,
											"end": 10087,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10066,
											"end": 10093,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10056,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 10056,
											"end": 10178,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10097,
											"end": 10176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 10097,
											"end": 10176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 10097,
											"end": 10176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10097,
											"end": 10176,
											"name": "tag",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 10097,
											"end": 10176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10056,
											"end": 10178,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 10056,
											"end": 10178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10214,
											"end": 10220,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10201,
											"end": 10221,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 10329,
											"end": 10332,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10321,
											"end": 10327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10314,
											"end": 10318,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10306,
											"end": 10312,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10302,
											"end": 10319,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 10239,
											"end": 10333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10239,
											"end": 10333,
											"name": "tag",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 10239,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10230,
											"end": 10333,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10230,
											"end": 10333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10046,
											"end": 10339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10339,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10339,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10345,
											"end": 10656,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 10345,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10422,
											"end": 10426,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10512,
											"end": 10530,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10504,
											"end": 10510,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10501,
											"end": 10531,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10498,
											"end": 10554,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10498,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 10498,
											"end": 10554,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10534,
											"end": 10552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 10534,
											"end": 10552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 10534,
											"end": 10552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10534,
											"end": 10552,
											"name": "tag",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 10534,
											"end": 10552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10498,
											"end": 10554,
											"name": "tag",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 10498,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10584,
											"end": 10588,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10576,
											"end": 10582,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10572,
											"end": 10589,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 10564,
											"end": 10589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10564,
											"end": 10589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10644,
											"end": 10648,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10638,
											"end": 10642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10634,
											"end": 10649,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10626,
											"end": 10649,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10626,
											"end": 10649,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10345,
											"end": 10656,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10345,
											"end": 10656,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10345,
											"end": 10656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10345,
											"end": 10656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10679,
											"end": 11389,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 10679,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10775,
											"end": 10780,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10800,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 10816,
											"end": 10880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 10873,
											"end": 10879,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10816,
											"end": 10880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 10816,
											"end": 10880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10816,
											"end": 10880,
											"name": "tag",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 10816,
											"end": 10880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10800,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 10800,
											"end": 10881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10800,
											"end": 10881,
											"name": "tag",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 10800,
											"end": 10881,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10791,
											"end": 10881,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10791,
											"end": 10881,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10901,
											"end": 10906,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10930,
											"end": 10936,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10923,
											"end": 10928,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10916,
											"end": 10937,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10964,
											"end": 10968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10957,
											"end": 10962,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10953,
											"end": 10969,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10946,
											"end": 10969,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10946,
											"end": 10969,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11017,
											"end": 11021,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11009,
											"end": 11015,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11005,
											"end": 11022,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 10997,
											"end": 11003,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10993,
											"end": 11023,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11046,
											"end": 11049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11035,
											"end": 11050,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11032,
											"end": 11154,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11032,
											"end": 11154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 11032,
											"end": 11154,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11065,
											"end": 11144,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 11065,
											"end": 11144,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 11065,
											"end": 11144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11065,
											"end": 11144,
											"name": "tag",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 11065,
											"end": 11144,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11032,
											"end": 11154,
											"name": "tag",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 11032,
											"end": 11154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11180,
											"end": 11186,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11163,
											"end": 11383,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 11163,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11197,
											"end": 11203,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11192,
											"end": 11195,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11189,
											"end": 11204,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11163,
											"end": 11383,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11163,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 11163,
											"end": 11383,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11272,
											"end": 11275,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11301,
											"end": 11338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 11334,
											"end": 11337,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11322,
											"end": 11332,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11301,
											"end": 11338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 11301,
											"end": 11338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11301,
											"end": 11338,
											"name": "tag",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 11301,
											"end": 11338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11296,
											"end": 11299,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11339,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11368,
											"end": 11372,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11363,
											"end": 11366,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11359,
											"end": 11373,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11352,
											"end": 11373,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11352,
											"end": 11373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11239,
											"end": 11383,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11227,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11218,
											"end": 11221,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11214,
											"end": 11228,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11207,
											"end": 11228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11207,
											"end": 11228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11163,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 11163,
											"end": 11383,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11163,
											"end": 11383,
											"name": "tag",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 11163,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11167,
											"end": 11188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10781,
											"end": 11389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10781,
											"end": 11389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10679,
											"end": 11389,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10679,
											"end": 11389,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10679,
											"end": 11389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10679,
											"end": 11389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10679,
											"end": 11389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10679,
											"end": 11389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11412,
											"end": 11782,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 11412,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11483,
											"end": 11488,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11532,
											"end": 11535,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11525,
											"end": 11529,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11517,
											"end": 11523,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11513,
											"end": 11530,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11509,
											"end": 11536,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11499,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 11499,
											"end": 11621,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 11540,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 11540,
											"end": 11619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11619,
											"name": "tag",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 11540,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11499,
											"end": 11621,
											"name": "tag",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 11499,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11657,
											"end": 11663,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11644,
											"end": 11664,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11682,
											"end": 11776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 11772,
											"end": 11775,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11770,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11757,
											"end": 11761,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11749,
											"end": 11755,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11745,
											"end": 11762,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11682,
											"end": 11776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 11682,
											"end": 11776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11682,
											"end": 11776,
											"name": "tag",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 11682,
											"end": 11776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11673,
											"end": 11776,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11673,
											"end": 11776,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11489,
											"end": 11782,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11412,
											"end": 11782,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11412,
											"end": 11782,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11412,
											"end": 11782,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11412,
											"end": 11782,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11412,
											"end": 11782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11788,
											"end": 12682,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 11788,
											"end": 12682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11906,
											"end": 11912,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11914,
											"end": 11920,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11963,
											"end": 11965,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11951,
											"end": 11960,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11942,
											"end": 11949,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11938,
											"end": 11961,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11934,
											"end": 11966,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11931,
											"end": 12050,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11931,
											"end": 12050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 11931,
											"end": 12050,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11969,
											"end": 12048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 11969,
											"end": 12048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 11969,
											"end": 12048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11969,
											"end": 12048,
											"name": "tag",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 11969,
											"end": 12048,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11931,
											"end": 12050,
											"name": "tag",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 11931,
											"end": 12050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12117,
											"end": 12118,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12106,
											"end": 12115,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12102,
											"end": 12119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12089,
											"end": 12120,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12147,
											"end": 12165,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12139,
											"end": 12145,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12136,
											"end": 12166,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12133,
											"end": 12250,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12133,
											"end": 12250,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 12133,
											"end": 12250,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12169,
											"end": 12248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 12169,
											"end": 12248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 12169,
											"end": 12248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12169,
											"end": 12248,
											"name": "tag",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 12169,
											"end": 12248,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12133,
											"end": 12250,
											"name": "tag",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 12133,
											"end": 12250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12274,
											"end": 12352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 12344,
											"end": 12351,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12335,
											"end": 12341,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12324,
											"end": 12333,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12342,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12274,
											"end": 12352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 12274,
											"end": 12352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12274,
											"end": 12352,
											"name": "tag",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 12274,
											"end": 12352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12264,
											"end": 12352,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12264,
											"end": 12352,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12060,
											"end": 12362,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12429,
											"end": 12431,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12418,
											"end": 12427,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12414,
											"end": 12432,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12401,
											"end": 12433,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12478,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12452,
											"end": 12458,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12449,
											"end": 12479,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12446,
											"end": 12563,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12446,
											"end": 12563,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 12446,
											"end": 12563,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12482,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 12482,
											"end": 12561,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 12482,
											"end": 12561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12482,
											"end": 12561,
											"name": "tag",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 12482,
											"end": 12561,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12446,
											"end": 12563,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 12446,
											"end": 12563,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12587,
											"end": 12665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 12657,
											"end": 12664,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12648,
											"end": 12654,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12637,
											"end": 12646,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12633,
											"end": 12655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12587,
											"end": 12665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 12587,
											"end": 12665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12587,
											"end": 12665,
											"name": "tag",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 12587,
											"end": 12665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12577,
											"end": 12665,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12577,
											"end": 12665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12372,
											"end": 12675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11788,
											"end": 12682,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11788,
											"end": 12682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11788,
											"end": 12682,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11788,
											"end": 12682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11788,
											"end": 12682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11788,
											"end": 12682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12756,
											"end": 12762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12764,
											"end": 12770,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12813,
											"end": 12815,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12801,
											"end": 12810,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12792,
											"end": 12799,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12788,
											"end": 12811,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12784,
											"end": 12816,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12819,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 12819,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 12819,
											"end": 12898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12819,
											"end": 12898,
											"name": "tag",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 12819,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "tag",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12939,
											"end": 12940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12964,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 13009,
											"end": 13016,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13000,
											"end": 13006,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12989,
											"end": 12998,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12985,
											"end": 13007,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12964,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 12964,
											"end": 13017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12964,
											"end": 13017,
											"name": "tag",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 12964,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12954,
											"end": 13017,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12954,
											"end": 13017,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12910,
											"end": 13027,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13066,
											"end": 13068,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13092,
											"end": 13145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 13137,
											"end": 13144,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13128,
											"end": 13134,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13117,
											"end": 13126,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13092,
											"end": 13145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 13092,
											"end": 13145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13092,
											"end": 13145,
											"name": "tag",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 13092,
											"end": 13145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13037,
											"end": 13155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13168,
											"end": 13348,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 13168,
											"end": 13348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13216,
											"end": 13293,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13213,
											"end": 13214,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13206,
											"end": 13294,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13313,
											"end": 13317,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 13310,
											"end": 13311,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13303,
											"end": 13318,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13337,
											"end": 13341,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13334,
											"end": 13335,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13327,
											"end": 13342,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13398,
											"end": 13404,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13435,
											"end": 13436,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 13429,
											"end": 13433,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13425,
											"end": 13437,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13415,
											"end": 13437,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13415,
											"end": 13437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13482,
											"end": 13483,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13476,
											"end": 13480,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13503,
											"end": 13521,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13493,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 13493,
											"end": 13574,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13559,
											"end": 13563,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 13551,
											"end": 13557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13564,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13537,
											"end": 13564,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13537,
											"end": 13564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13493,
											"end": 13574,
											"name": "tag",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 13493,
											"end": 13574,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13621,
											"end": 13623,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13613,
											"end": 13619,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13610,
											"end": 13624,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13608,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13587,
											"end": 13625,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13584,
											"end": 13668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 13584,
											"end": 13668,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13640,
											"end": 13658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 13640,
											"end": 13658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 13640,
											"end": 13658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13640,
											"end": 13658,
											"name": "tag",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 13640,
											"end": 13658,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13584,
											"end": 13668,
											"name": "tag",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 13584,
											"end": 13668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13405,
											"end": 13674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13680,
											"end": 14122,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 13680,
											"end": 14122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13829,
											"end": 13833,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13867,
											"end": 13869,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 13856,
											"end": 13865,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13852,
											"end": 13870,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13844,
											"end": 13870,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13844,
											"end": 13870,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13880,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 13948,
											"end": 13949,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13937,
											"end": 13946,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13933,
											"end": 13950,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13924,
											"end": 13930,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13880,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 13880,
											"end": 13951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13880,
											"end": 13951,
											"name": "tag",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 13880,
											"end": 13951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13961,
											"end": 14033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 14029,
											"end": 14031,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14018,
											"end": 14027,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14014,
											"end": 14032,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14005,
											"end": 14011,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13961,
											"end": 14033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 13961,
											"end": 14033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13961,
											"end": 14033,
											"name": "tag",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 13961,
											"end": 14033,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14043,
											"end": 14115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 14111,
											"end": 14113,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14100,
											"end": 14109,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14096,
											"end": 14114,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14087,
											"end": 14093,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14043,
											"end": 14115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 14043,
											"end": 14115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14043,
											"end": 14115,
											"name": "tag",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 14043,
											"end": 14115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13680,
											"end": 14122,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 13680,
											"end": 14122,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13680,
											"end": 14122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13680,
											"end": 14122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13680,
											"end": 14122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13680,
											"end": 14122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13680,
											"end": 14122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14128,
											"end": 14244,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 14128,
											"end": 14244,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14198,
											"end": 14219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 14213,
											"end": 14218,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14198,
											"end": 14219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 14198,
											"end": 14219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14198,
											"end": 14219,
											"name": "tag",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 14198,
											"end": 14219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14191,
											"end": 14196,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14188,
											"end": 14220,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 14178,
											"end": 14238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 14178,
											"end": 14238,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14234,
											"end": 14235,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14231,
											"end": 14232,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14224,
											"end": 14236,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14178,
											"end": 14238,
											"name": "tag",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 14178,
											"end": 14238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14128,
											"end": 14244,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14128,
											"end": 14244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14250,
											"end": 14387,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 14250,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14304,
											"end": 14309,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14335,
											"end": 14341,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14329,
											"end": 14342,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14320,
											"end": 14342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14320,
											"end": 14342,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14351,
											"end": 14381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 14375,
											"end": 14380,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14351,
											"end": 14381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 14351,
											"end": 14381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14351,
											"end": 14381,
											"name": "tag",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 14351,
											"end": 14381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14250,
											"end": 14387,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14250,
											"end": 14387,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14250,
											"end": 14387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14250,
											"end": 14387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14250,
											"end": 14387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14393,
											"end": 14738,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 14393,
											"end": 14738,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14460,
											"end": 14466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14509,
											"end": 14511,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14497,
											"end": 14506,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14488,
											"end": 14495,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14484,
											"end": 14507,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14480,
											"end": 14512,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 14477,
											"end": 14596,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14477,
											"end": 14596,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 14477,
											"end": 14596,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14515,
											"end": 14594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 14515,
											"end": 14594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 14515,
											"end": 14594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14515,
											"end": 14594,
											"name": "tag",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 14515,
											"end": 14594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14477,
											"end": 14596,
											"name": "tag",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 14477,
											"end": 14596,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14635,
											"end": 14636,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14660,
											"end": 14721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 14713,
											"end": 14720,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14704,
											"end": 14710,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14693,
											"end": 14702,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14689,
											"end": 14711,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14660,
											"end": 14721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 14660,
											"end": 14721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14660,
											"end": 14721,
											"name": "tag",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 14660,
											"end": 14721,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14650,
											"end": 14721,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14650,
											"end": 14721,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14606,
											"end": 14731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14393,
											"end": 14738,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14393,
											"end": 14738,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14393,
											"end": 14738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14393,
											"end": 14738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14393,
											"end": 14738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14744,
											"end": 14921,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 14744,
											"end": 14921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14884,
											"end": 14913,
											"name": "PUSH",
											"source": 13,
											"value": "537461626C6520636F696E207472616E73666572206661696C65640000000000"
										},
										{
											"begin": 14880,
											"end": 14881,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14872,
											"end": 14878,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14868,
											"end": 14882,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14861,
											"end": 14914,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14744,
											"end": 14921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14744,
											"end": 14921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14927,
											"end": 15293,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 14927,
											"end": 15293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15069,
											"end": 15072,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15090,
											"end": 15157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 15154,
											"end": 15156,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 15149,
											"end": 15152,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15090,
											"end": 15157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 15090,
											"end": 15157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15090,
											"end": 15157,
											"name": "tag",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 15090,
											"end": 15157,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15083,
											"end": 15157,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15083,
											"end": 15157,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15166,
											"end": 15259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 15255,
											"end": 15258,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15166,
											"end": 15259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 15166,
											"end": 15259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15166,
											"end": 15259,
											"name": "tag",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 15166,
											"end": 15259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15284,
											"end": 15286,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15279,
											"end": 15282,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15275,
											"end": 15287,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15268,
											"end": 15287,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15268,
											"end": 15287,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14927,
											"end": 15293,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14927,
											"end": 15293,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14927,
											"end": 15293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14927,
											"end": 15293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15299,
											"end": 15718,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 15299,
											"end": 15718,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15465,
											"end": 15469,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15503,
											"end": 15505,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15492,
											"end": 15501,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15488,
											"end": 15506,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15480,
											"end": 15506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15552,
											"end": 15561,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15546,
											"end": 15550,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15542,
											"end": 15562,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15538,
											"end": 15539,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15527,
											"end": 15536,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15523,
											"end": 15540,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15516,
											"end": 15563,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15580,
											"end": 15711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 15706,
											"end": 15710,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15580,
											"end": 15711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 15580,
											"end": 15711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15580,
											"end": 15711,
											"name": "tag",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 15580,
											"end": 15711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15572,
											"end": 15711,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15572,
											"end": 15711,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15299,
											"end": 15718,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15299,
											"end": 15718,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15299,
											"end": 15718,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15299,
											"end": 15718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15724,
											"end": 16056,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 15724,
											"end": 16056,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15845,
											"end": 15849,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15883,
											"end": 15885,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15872,
											"end": 15881,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15868,
											"end": 15886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15860,
											"end": 15886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15860,
											"end": 15886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15896,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 15964,
											"end": 15965,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15953,
											"end": 15962,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15949,
											"end": 15966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15940,
											"end": 15946,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15896,
											"end": 15967,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 15896,
											"end": 15967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15896,
											"end": 15967,
											"name": "tag",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 15896,
											"end": 15967,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15977,
											"end": 16049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "667"
										},
										{
											"begin": 16045,
											"end": 16047,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16034,
											"end": 16043,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16030,
											"end": 16048,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16021,
											"end": 16027,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15977,
											"end": 16049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 15977,
											"end": 16049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15977,
											"end": 16049,
											"name": "tag",
											"source": 13,
											"value": "667"
										},
										{
											"begin": 15977,
											"end": 16049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15724,
											"end": 16056,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15724,
											"end": 16056,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15724,
											"end": 16056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15724,
											"end": 16056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15724,
											"end": 16056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15724,
											"end": 16056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16062,
											"end": 16238,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 16062,
											"end": 16238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16202,
											"end": 16230,
											"name": "PUSH",
											"source": 13,
											"value": "426F6E6420746F6B656E207472616E73666572206661696C6564000000000000"
										},
										{
											"begin": 16198,
											"end": 16199,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16190,
											"end": 16196,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16186,
											"end": 16200,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16179,
											"end": 16231,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16062,
											"end": 16238,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16062,
											"end": 16238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16244,
											"end": 16610,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 16244,
											"end": 16610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16386,
											"end": 16389,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16407,
											"end": 16474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 16471,
											"end": 16473,
											"name": "PUSH",
											"source": 13,
											"value": "1A"
										},
										{
											"begin": 16466,
											"end": 16469,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16407,
											"end": 16474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 16407,
											"end": 16474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16407,
											"end": 16474,
											"name": "tag",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 16407,
											"end": 16474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16400,
											"end": 16474,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16400,
											"end": 16474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16483,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "671"
										},
										{
											"begin": 16572,
											"end": 16575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16483,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 16483,
											"end": 16576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16483,
											"end": 16576,
											"name": "tag",
											"source": 13,
											"value": "671"
										},
										{
											"begin": 16483,
											"end": 16576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16601,
											"end": 16603,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16596,
											"end": 16599,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16592,
											"end": 16604,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16585,
											"end": 16604,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16585,
											"end": 16604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16244,
											"end": 16610,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16244,
											"end": 16610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16244,
											"end": 16610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16244,
											"end": 16610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16616,
											"end": 17035,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 16616,
											"end": 17035,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16782,
											"end": 16786,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16820,
											"end": 16822,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16809,
											"end": 16818,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16805,
											"end": 16823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16797,
											"end": 16823,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16797,
											"end": 16823,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16869,
											"end": 16878,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16863,
											"end": 16867,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16859,
											"end": 16879,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16855,
											"end": 16856,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16844,
											"end": 16853,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 16857,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16833,
											"end": 16880,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16897,
											"end": 17028,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 17023,
											"end": 17027,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16897,
											"end": 17028,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 16897,
											"end": 17028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16897,
											"end": 17028,
											"name": "tag",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 16897,
											"end": 17028,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16889,
											"end": 17028,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16889,
											"end": 17028,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16616,
											"end": 17035,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16616,
											"end": 17035,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16616,
											"end": 17035,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16616,
											"end": 17035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17041,
											"end": 17184,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 17041,
											"end": 17184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17098,
											"end": 17103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17129,
											"end": 17135,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17123,
											"end": 17136,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17114,
											"end": 17136,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17114,
											"end": 17136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17145,
											"end": 17178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "675"
										},
										{
											"begin": 17172,
											"end": 17177,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17145,
											"end": 17178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 17145,
											"end": 17178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17145,
											"end": 17178,
											"name": "tag",
											"source": 13,
											"value": "675"
										},
										{
											"begin": 17145,
											"end": 17178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17041,
											"end": 17184,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17041,
											"end": 17184,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17041,
											"end": 17184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17041,
											"end": 17184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17041,
											"end": 17184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17190,
											"end": 17541,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 17190,
											"end": 17541,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17260,
											"end": 17266,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17309,
											"end": 17311,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17297,
											"end": 17306,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17288,
											"end": 17295,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17284,
											"end": 17307,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17280,
											"end": 17312,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 17277,
											"end": 17396,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17277,
											"end": 17396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 17277,
											"end": 17396,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17315,
											"end": 17394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "678"
										},
										{
											"begin": 17315,
											"end": 17394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 17315,
											"end": 17394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17315,
											"end": 17394,
											"name": "tag",
											"source": 13,
											"value": "678"
										},
										{
											"begin": 17315,
											"end": 17394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17277,
											"end": 17396,
											"name": "tag",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 17277,
											"end": 17396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17435,
											"end": 17436,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17460,
											"end": 17524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 17516,
											"end": 17523,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17507,
											"end": 17513,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17496,
											"end": 17505,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17492,
											"end": 17514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17460,
											"end": 17524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 17460,
											"end": 17524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17460,
											"end": 17524,
											"name": "tag",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 17460,
											"end": 17524,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17450,
											"end": 17524,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17450,
											"end": 17524,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17406,
											"end": 17534,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17190,
											"end": 17541,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17190,
											"end": 17541,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17190,
											"end": 17541,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17190,
											"end": 17541,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17190,
											"end": 17541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17547,
											"end": 17775,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 17547,
											"end": 17775,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17687,
											"end": 17721,
											"name": "PUSH",
											"source": 13,
											"value": "546F6B656E20686F6C6465727320616E6420616D6F756E7473206C656E677468"
										},
										{
											"begin": 17683,
											"end": 17684,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17675,
											"end": 17681,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17671,
											"end": 17685,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17664,
											"end": 17722,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17756,
											"end": 17767,
											"name": "PUSH",
											"source": 13,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17751,
											"end": 17753,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17743,
											"end": 17749,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17739,
											"end": 17754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17732,
											"end": 17768,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17547,
											"end": 17775,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17547,
											"end": 17775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17781,
											"end": 18147,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 17781,
											"end": 18147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17923,
											"end": 17926,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17944,
											"end": 18011,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "682"
										},
										{
											"begin": 18008,
											"end": 18010,
											"name": "PUSH",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 18003,
											"end": 18006,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17944,
											"end": 18011,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 17944,
											"end": 18011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17944,
											"end": 18011,
											"name": "tag",
											"source": 13,
											"value": "682"
										},
										{
											"begin": 17944,
											"end": 18011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17937,
											"end": 18011,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17937,
											"end": 18011,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18020,
											"end": 18113,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "683"
										},
										{
											"begin": 18109,
											"end": 18112,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18020,
											"end": 18113,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 18020,
											"end": 18113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18020,
											"end": 18113,
											"name": "tag",
											"source": 13,
											"value": "683"
										},
										{
											"begin": 18020,
											"end": 18113,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18138,
											"end": 18140,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18133,
											"end": 18136,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18129,
											"end": 18141,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18122,
											"end": 18141,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18122,
											"end": 18141,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17781,
											"end": 18147,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17781,
											"end": 18147,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17781,
											"end": 18147,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17781,
											"end": 18147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18153,
											"end": 18572,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 18153,
											"end": 18572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18319,
											"end": 18323,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18357,
											"end": 18359,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18346,
											"end": 18355,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18342,
											"end": 18360,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18334,
											"end": 18360,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18334,
											"end": 18360,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18406,
											"end": 18415,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18400,
											"end": 18404,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18396,
											"end": 18416,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18392,
											"end": 18393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18381,
											"end": 18390,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18377,
											"end": 18394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18370,
											"end": 18417,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18434,
											"end": 18565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "685"
										},
										{
											"begin": 18560,
											"end": 18564,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18434,
											"end": 18565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 18434,
											"end": 18565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18434,
											"end": 18565,
											"name": "tag",
											"source": 13,
											"value": "685"
										},
										{
											"begin": 18434,
											"end": 18565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18426,
											"end": 18565,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18426,
											"end": 18565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18153,
											"end": 18572,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18153,
											"end": 18572,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18153,
											"end": 18572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18153,
											"end": 18572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18578,
											"end": 18758,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 18578,
											"end": 18758,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18626,
											"end": 18703,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18623,
											"end": 18624,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18616,
											"end": 18704,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18723,
											"end": 18727,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 18720,
											"end": 18721,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 18713,
											"end": 18728,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18747,
											"end": 18751,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 18744,
											"end": 18745,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18737,
											"end": 18752,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18764,
											"end": 18929,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 18764,
											"end": 18929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18904,
											"end": 18921,
											"name": "PUSH",
											"source": 13,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 18900,
											"end": 18901,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18892,
											"end": 18898,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18888,
											"end": 18902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18881,
											"end": 18922,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18764,
											"end": 18929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18764,
											"end": 18929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18935,
											"end": 19301,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 18935,
											"end": 19301,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19077,
											"end": 19080,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19098,
											"end": 19165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 19162,
											"end": 19164,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 19157,
											"end": 19160,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19098,
											"end": 19165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 19098,
											"end": 19165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19098,
											"end": 19165,
											"name": "tag",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 19098,
											"end": 19165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19091,
											"end": 19165,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19091,
											"end": 19165,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19174,
											"end": 19267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "690"
										},
										{
											"begin": 19263,
											"end": 19266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19174,
											"end": 19267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 19174,
											"end": 19267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19174,
											"end": 19267,
											"name": "tag",
											"source": 13,
											"value": "690"
										},
										{
											"begin": 19174,
											"end": 19267,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19292,
											"end": 19294,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19287,
											"end": 19290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19283,
											"end": 19295,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19276,
											"end": 19295,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19276,
											"end": 19295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18935,
											"end": 19301,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18935,
											"end": 19301,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18935,
											"end": 19301,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18935,
											"end": 19301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19307,
											"end": 19726,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 19307,
											"end": 19726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19473,
											"end": 19477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19511,
											"end": 19513,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19500,
											"end": 19509,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19496,
											"end": 19514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19488,
											"end": 19514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19488,
											"end": 19514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19560,
											"end": 19569,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19554,
											"end": 19558,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19550,
											"end": 19570,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19546,
											"end": 19547,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19535,
											"end": 19544,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19531,
											"end": 19548,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19524,
											"end": 19571,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19588,
											"end": 19719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "692"
										},
										{
											"begin": 19714,
											"end": 19718,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19588,
											"end": 19719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 19588,
											"end": 19719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19588,
											"end": 19719,
											"name": "tag",
											"source": 13,
											"value": "692"
										},
										{
											"begin": 19588,
											"end": 19719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19580,
											"end": 19719,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19580,
											"end": 19719,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19307,
											"end": 19726,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19307,
											"end": 19726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19307,
											"end": 19726,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19307,
											"end": 19726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19732,
											"end": 19906,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 19732,
											"end": 19906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19872,
											"end": 19898,
											"name": "PUSH",
											"source": 13,
											"value": "4D61747572697479206E6F742079657420726561636865640000000000000000"
										},
										{
											"begin": 19868,
											"end": 19869,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19860,
											"end": 19866,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19856,
											"end": 19870,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19849,
											"end": 19899,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19732,
											"end": 19906,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19732,
											"end": 19906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19912,
											"end": 20278,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 19912,
											"end": 20278,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20054,
											"end": 20057,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20075,
											"end": 20142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "695"
										},
										{
											"begin": 20139,
											"end": 20141,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 20134,
											"end": 20137,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20075,
											"end": 20142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 20075,
											"end": 20142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20075,
											"end": 20142,
											"name": "tag",
											"source": 13,
											"value": "695"
										},
										{
											"begin": 20075,
											"end": 20142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20068,
											"end": 20142,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20068,
											"end": 20142,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20151,
											"end": 20244,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "696"
										},
										{
											"begin": 20240,
											"end": 20243,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20151,
											"end": 20244,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 20151,
											"end": 20244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20151,
											"end": 20244,
											"name": "tag",
											"source": 13,
											"value": "696"
										},
										{
											"begin": 20151,
											"end": 20244,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20269,
											"end": 20271,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20264,
											"end": 20267,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20260,
											"end": 20272,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20253,
											"end": 20272,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20253,
											"end": 20272,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19912,
											"end": 20278,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19912,
											"end": 20278,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19912,
											"end": 20278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19912,
											"end": 20278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20284,
											"end": 20703,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 20284,
											"end": 20703,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20450,
											"end": 20454,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20488,
											"end": 20490,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20477,
											"end": 20486,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20473,
											"end": 20491,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20465,
											"end": 20491,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20465,
											"end": 20491,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20537,
											"end": 20546,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20531,
											"end": 20535,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20527,
											"end": 20547,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20523,
											"end": 20524,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20512,
											"end": 20521,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20508,
											"end": 20525,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20501,
											"end": 20548,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20565,
											"end": 20696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "698"
										},
										{
											"begin": 20691,
											"end": 20695,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20565,
											"end": 20696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 20565,
											"end": 20696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20565,
											"end": 20696,
											"name": "tag",
											"source": 13,
											"value": "698"
										},
										{
											"begin": 20565,
											"end": 20696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20557,
											"end": 20696,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20557,
											"end": 20696,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20284,
											"end": 20703,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20284,
											"end": 20703,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20284,
											"end": 20703,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20284,
											"end": 20703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20709,
											"end": 20881,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 20709,
											"end": 20881,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20849,
											"end": 20873,
											"name": "PUSH",
											"source": 13,
											"value": "43616E277420636C61696D207A65726F20636F696E7300000000000000000000"
										},
										{
											"begin": 20845,
											"end": 20846,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20837,
											"end": 20843,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20833,
											"end": 20847,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20826,
											"end": 20874,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20709,
											"end": 20881,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20709,
											"end": 20881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20887,
											"end": 21253,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 20887,
											"end": 21253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21029,
											"end": 21032,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21050,
											"end": 21117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "701"
										},
										{
											"begin": 21114,
											"end": 21116,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 21109,
											"end": 21112,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21050,
											"end": 21117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 21050,
											"end": 21117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21050,
											"end": 21117,
											"name": "tag",
											"source": 13,
											"value": "701"
										},
										{
											"begin": 21050,
											"end": 21117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21043,
											"end": 21117,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21043,
											"end": 21117,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21126,
											"end": 21219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "702"
										},
										{
											"begin": 21215,
											"end": 21218,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21126,
											"end": 21219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 21126,
											"end": 21219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21126,
											"end": 21219,
											"name": "tag",
											"source": 13,
											"value": "702"
										},
										{
											"begin": 21126,
											"end": 21219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21244,
											"end": 21246,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21239,
											"end": 21242,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21235,
											"end": 21247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21228,
											"end": 21247,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21228,
											"end": 21247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20887,
											"end": 21253,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20887,
											"end": 21253,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20887,
											"end": 21253,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20887,
											"end": 21253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21259,
											"end": 21678,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 21259,
											"end": 21678,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21425,
											"end": 21429,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21463,
											"end": 21465,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21452,
											"end": 21461,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21448,
											"end": 21466,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21440,
											"end": 21466,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21440,
											"end": 21466,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21512,
											"end": 21521,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21506,
											"end": 21510,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21502,
											"end": 21522,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21498,
											"end": 21499,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21487,
											"end": 21496,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21483,
											"end": 21500,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21476,
											"end": 21523,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21540,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "704"
										},
										{
											"begin": 21666,
											"end": 21670,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21540,
											"end": 21671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 21540,
											"end": 21671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21540,
											"end": 21671,
											"name": "tag",
											"source": 13,
											"value": "704"
										},
										{
											"begin": 21540,
											"end": 21671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21532,
											"end": 21671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21532,
											"end": 21671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21259,
											"end": 21678,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21259,
											"end": 21678,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21259,
											"end": 21678,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21259,
											"end": 21678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21684,
											"end": 21862,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 21684,
											"end": 21862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21824,
											"end": 21854,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F20696E766573746F722066756E647320617661696C61626C652E00000000"
										},
										{
											"begin": 21820,
											"end": 21821,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21812,
											"end": 21818,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21808,
											"end": 21822,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21801,
											"end": 21855,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21684,
											"end": 21862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21684,
											"end": 21862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21868,
											"end": 22234,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 21868,
											"end": 22234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22010,
											"end": 22013,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22031,
											"end": 22098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "707"
										},
										{
											"begin": 22095,
											"end": 22097,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 22090,
											"end": 22093,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22031,
											"end": 22098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 22031,
											"end": 22098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22031,
											"end": 22098,
											"name": "tag",
											"source": 13,
											"value": "707"
										},
										{
											"begin": 22031,
											"end": 22098,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22024,
											"end": 22098,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22024,
											"end": 22098,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22107,
											"end": 22200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "708"
										},
										{
											"begin": 22196,
											"end": 22199,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22107,
											"end": 22200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 22107,
											"end": 22200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22107,
											"end": 22200,
											"name": "tag",
											"source": 13,
											"value": "708"
										},
										{
											"begin": 22107,
											"end": 22200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22225,
											"end": 22227,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22220,
											"end": 22223,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22216,
											"end": 22228,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22209,
											"end": 22228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22209,
											"end": 22228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21868,
											"end": 22234,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21868,
											"end": 22234,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21868,
											"end": 22234,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21868,
											"end": 22234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22240,
											"end": 22659,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 22240,
											"end": 22659,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22406,
											"end": 22410,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22444,
											"end": 22446,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22433,
											"end": 22442,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22429,
											"end": 22447,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22421,
											"end": 22447,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22421,
											"end": 22447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22493,
											"end": 22502,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22487,
											"end": 22491,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22483,
											"end": 22503,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 22479,
											"end": 22480,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22468,
											"end": 22477,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22464,
											"end": 22481,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22457,
											"end": 22504,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22521,
											"end": 22652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "710"
										},
										{
											"begin": 22647,
											"end": 22651,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22521,
											"end": 22652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 22521,
											"end": 22652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22521,
											"end": 22652,
											"name": "tag",
											"source": 13,
											"value": "710"
										},
										{
											"begin": 22521,
											"end": 22652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22513,
											"end": 22652,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22513,
											"end": 22652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22240,
											"end": 22659,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22240,
											"end": 22659,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22240,
											"end": 22659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22240,
											"end": 22659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22665,
											"end": 22846,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 22665,
											"end": 22846,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22805,
											"end": 22838,
											"name": "PUSH",
											"source": 13,
											"value": "4661696C656420746F207472616E7366657220737461626C6520636F696E7300"
										},
										{
											"begin": 22801,
											"end": 22802,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22793,
											"end": 22799,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22789,
											"end": 22803,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22782,
											"end": 22839,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22665,
											"end": 22846,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22665,
											"end": 22846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22852,
											"end": 23218,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 22852,
											"end": 23218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22994,
											"end": 22997,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23015,
											"end": 23082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "713"
										},
										{
											"begin": 23079,
											"end": 23081,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 23074,
											"end": 23077,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23015,
											"end": 23082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 23015,
											"end": 23082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23015,
											"end": 23082,
											"name": "tag",
											"source": 13,
											"value": "713"
										},
										{
											"begin": 23015,
											"end": 23082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23008,
											"end": 23082,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23008,
											"end": 23082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23091,
											"end": 23184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "714"
										},
										{
											"begin": 23180,
											"end": 23183,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23091,
											"end": 23184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 23091,
											"end": 23184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23091,
											"end": 23184,
											"name": "tag",
											"source": 13,
											"value": "714"
										},
										{
											"begin": 23091,
											"end": 23184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23209,
											"end": 23211,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23204,
											"end": 23207,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23200,
											"end": 23212,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23193,
											"end": 23212,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23193,
											"end": 23212,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22852,
											"end": 23218,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22852,
											"end": 23218,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22852,
											"end": 23218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22852,
											"end": 23218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23224,
											"end": 23643,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 23224,
											"end": 23643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23390,
											"end": 23394,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23428,
											"end": 23430,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23417,
											"end": 23426,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23413,
											"end": 23431,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23405,
											"end": 23431,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23405,
											"end": 23431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23477,
											"end": 23486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23471,
											"end": 23475,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23467,
											"end": 23487,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23463,
											"end": 23464,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23452,
											"end": 23461,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23448,
											"end": 23465,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23441,
											"end": 23488,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23505,
											"end": 23636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "716"
										},
										{
											"begin": 23631,
											"end": 23635,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23505,
											"end": 23636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 23505,
											"end": 23636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23505,
											"end": 23636,
											"name": "tag",
											"source": 13,
											"value": "716"
										},
										{
											"begin": 23505,
											"end": 23636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23497,
											"end": 23636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23497,
											"end": 23636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23224,
											"end": 23643,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23224,
											"end": 23643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23224,
											"end": 23643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23224,
											"end": 23643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23649,
											"end": 24091,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 23649,
											"end": 24091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23798,
											"end": 23802,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23836,
											"end": 23838,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 23825,
											"end": 23834,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23821,
											"end": 23839,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23813,
											"end": 23839,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23813,
											"end": 23839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23849,
											"end": 23920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "718"
										},
										{
											"begin": 23917,
											"end": 23918,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23906,
											"end": 23915,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23902,
											"end": 23919,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23893,
											"end": 23899,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23849,
											"end": 23920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 23849,
											"end": 23920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23849,
											"end": 23920,
											"name": "tag",
											"source": 13,
											"value": "718"
										},
										{
											"begin": 23849,
											"end": 23920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23930,
											"end": 24002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "719"
										},
										{
											"begin": 23998,
											"end": 24000,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23987,
											"end": 23996,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23983,
											"end": 24001,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23974,
											"end": 23980,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23930,
											"end": 24002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 23930,
											"end": 24002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23930,
											"end": 24002,
											"name": "tag",
											"source": 13,
											"value": "719"
										},
										{
											"begin": 23930,
											"end": 24002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24012,
											"end": 24084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "720"
										},
										{
											"begin": 24080,
											"end": 24082,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 24069,
											"end": 24078,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24065,
											"end": 24083,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24056,
											"end": 24062,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24012,
											"end": 24084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 24012,
											"end": 24084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24012,
											"end": 24084,
											"name": "tag",
											"source": 13,
											"value": "720"
										},
										{
											"begin": 24012,
											"end": 24084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23649,
											"end": 24091,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 23649,
											"end": 24091,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23649,
											"end": 24091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23649,
											"end": 24091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23649,
											"end": 24091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23649,
											"end": 24091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23649,
											"end": 24091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24097,
											"end": 24429,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 24097,
											"end": 24429,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24218,
											"end": 24222,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24256,
											"end": 24258,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 24245,
											"end": 24254,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24241,
											"end": 24259,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24233,
											"end": 24259,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24233,
											"end": 24259,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24269,
											"end": 24340,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "722"
										},
										{
											"begin": 24337,
											"end": 24338,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24326,
											"end": 24335,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24322,
											"end": 24339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24313,
											"end": 24319,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24269,
											"end": 24340,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 24269,
											"end": 24340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24269,
											"end": 24340,
											"name": "tag",
											"source": 13,
											"value": "722"
										},
										{
											"begin": 24269,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24350,
											"end": 24422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "723"
										},
										{
											"begin": 24418,
											"end": 24420,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24407,
											"end": 24416,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24403,
											"end": 24421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24394,
											"end": 24400,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24350,
											"end": 24422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 24350,
											"end": 24422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24350,
											"end": 24422,
											"name": "tag",
											"source": 13,
											"value": "723"
										},
										{
											"begin": 24350,
											"end": 24422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24097,
											"end": 24429,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 24097,
											"end": 24429,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24097,
											"end": 24429,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24097,
											"end": 24429,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24097,
											"end": 24429,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24097,
											"end": 24429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24435,
											"end": 24615,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 24435,
											"end": 24615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24483,
											"end": 24560,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24480,
											"end": 24481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24473,
											"end": 24561,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24580,
											"end": 24584,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 24577,
											"end": 24578,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 24570,
											"end": 24585,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24604,
											"end": 24608,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 24601,
											"end": 24602,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24594,
											"end": 24609,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 24621,
											"end": 24812,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 24621,
											"end": 24812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24661,
											"end": 24664,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24680,
											"end": 24700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "726"
										},
										{
											"begin": 24698,
											"end": 24699,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24680,
											"end": 24700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 24680,
											"end": 24700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24680,
											"end": 24700,
											"name": "tag",
											"source": 13,
											"value": "726"
										},
										{
											"begin": 24680,
											"end": 24700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24675,
											"end": 24700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24675,
											"end": 24700,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24714,
											"end": 24734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "727"
										},
										{
											"begin": 24732,
											"end": 24733,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24714,
											"end": 24734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 24714,
											"end": 24734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24714,
											"end": 24734,
											"name": "tag",
											"source": 13,
											"value": "727"
										},
										{
											"begin": 24714,
											"end": 24734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24709,
											"end": 24734,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24709,
											"end": 24734,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24757,
											"end": 24758,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24754,
											"end": 24755,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24750,
											"end": 24759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24743,
											"end": 24759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24743,
											"end": 24759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24778,
											"end": 24781,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 24775,
											"end": 24776,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24772,
											"end": 24782,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 24769,
											"end": 24805,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24769,
											"end": 24805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "728"
										},
										{
											"begin": 24769,
											"end": 24805,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 24785,
											"end": 24803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "729"
										},
										{
											"begin": 24785,
											"end": 24803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 24785,
											"end": 24803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24785,
											"end": 24803,
											"name": "tag",
											"source": 13,
											"value": "729"
										},
										{
											"begin": 24785,
											"end": 24803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24769,
											"end": 24805,
											"name": "tag",
											"source": 13,
											"value": "728"
										},
										{
											"begin": 24769,
											"end": 24805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24621,
											"end": 24812,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24621,
											"end": 24812,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24621,
											"end": 24812,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24621,
											"end": 24812,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24621,
											"end": 24812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/BonDeFiToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN()": "2a0acc6a",
							"BOND_ISSUER()": "e091a39b",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"buyBond(uint256)": "10002dbd",
							"claimFaceValue(uint256)": "ca19c11c",
							"claimInvestorFunds()": "ced0550f",
							"decimals()": "313ce567",
							"distributeInterest(address,uint256)": "f57d283e",
							"distributeInterestAll(address[],uint256[])": "904835c4",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"interestToken()": "764b666c",
							"maturityDate()": "d59624b4",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setInterestToken(address)": "94d7cc88",
							"showBondTokens()": "86d71654",
							"showInterestTokens()": "ce4120da",
							"showStableCoins()": "acd17a99",
							"stableCoin()": "992642e5",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"administrator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bondIssuer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stableCoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_faceValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maturityDate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BOND_ISSUER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"name\":\"buyBond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"name\":\"claimFaceValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimInvestorFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenHolders\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"distributeInterestAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturityDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"interestTokenAddr\",\"type\":\"address\"}],\"name\":\"setInterestToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showBondTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showInterestTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showStableCoins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BonDeFiToken.sol\":\"BonDeFiToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/BonDeFiToken.sol\":{\"keccak256\":\"0xb01ee414211203741cc58fbdf2a9eb96c79a6b3399ec6c61ff3515838c12cd2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f188d300c1c590ffe07c25f5e388786cea7205112b6ddcfc9d9720a09e3ef0c\",\"dweb:/ipfs/QmfHAkGvTLsXMRfWHMXYQ8xAsosvuj1bJN4n4kxcY2BomS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1253,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 26,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "_roles",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1427,
								"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
								"label": "interestToken",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/BonDeFiToken.sol:BonDeFiToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1244
						],
						"ERC165": [
							1385
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1245,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1244,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1386,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1385,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1244,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1385,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1385,
								1397,
								378,
								1244
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1384
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1384,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1226,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1226,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 516,
							"src": "278:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 516,
							"src": "2186:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 516,
							"src": "4424:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1244
						],
						"ERC20": [
							1030
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1214
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1109,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 518,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1215,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 520,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1214,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1245,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1244,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 516,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1244,
										"src": "1428:7:3"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 529,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "1437:6:3"
									},
									"id": 530,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 531,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1214,
										"src": "1445:14:3"
									},
									"id": 532,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 533,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1461:12:3"
									},
									"id": 534,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030,
								420,
								1214,
								1108,
								1244
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 537,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 536,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 544,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 543,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 542,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 540,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 547,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 549,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 567,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 1030,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1201
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 573,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 572,
												"id": 574,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 1030,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1207
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 582,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 1030,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1213
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 588,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 1030,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 600,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 601,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 1030,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 611,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 613,
													"indexExpression": {
														"id": 612,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 614,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 1030,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 628,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 625,
												"id": 638,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 1030,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 650,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 652,
														"indexExpression": {
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 654,
													"indexExpression": {
														"id": 653,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 655,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 1030,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1095
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 669,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 921,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 666,
												"id": 679,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 1030,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 711,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 1030,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 730,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 729,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 735,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 739,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 745,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 1030,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																782
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 782,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 807,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 786,
															"initialValue": {
																"baseExpression": {
																	"id": 783,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"id": 784,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 787,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 797,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 791,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 792,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 793,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 790,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 795,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 806,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 798,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 800,
																			"indexExpression": {
																				"id": 799,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 801,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 802,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 805,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 776,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 809,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 810,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 827,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 821,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 826,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 819,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 815,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 831,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 1030,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 851,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 857,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 860,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 1030,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 1030,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 913,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 981,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 1030,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 946,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 940,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 939,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 945,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 948,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 955,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 954,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 960,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 963,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 966,
															"indexExpression": {
																"id": 964,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 967,
														"indexExpression": {
															"id": 965,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 968,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 971,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 975,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 972,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 1030,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 999,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1005,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1015,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 1014,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1009,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1010,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1008,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1013,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 1025,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1020,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1016,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				921,
																				981
																			],
																			"referencedDeclaration": 981,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 1030,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1031,
							"src": "1401:9741:3",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						]
					},
					"id": 1109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1033,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1042,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1051,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 1108,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 1108,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 1108,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 1108,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 1108,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 1108,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1109,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1244
						],
						"ERC20": [
							1030
						],
						"ERC20Burnable": [
							1154
						]
					},
					"id": 1155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 1031,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1111,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1030,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 1245,
							"src": "186:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1113,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1244,
										"src": "194:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1116,
										"name": "Context",
										"nameLocations": [
											"483:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1244,
										"src": "483:7:5"
									},
									"id": 1117,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:5"
								},
								{
									"baseName": {
										"id": 1118,
										"name": "ERC20",
										"nameLocations": [
											"492:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "492:5:5"
									},
									"id": 1119,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:5"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1115,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1154,
							"linearizedBaseContracts": [
								1154,
								1030,
								420,
								1214,
								1108,
								1244
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "662:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1126,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "678:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "692:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1125,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "672:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "672:26:5"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:5",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "632:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:5"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:5"
									},
									"scope": 1154,
									"src": "618:87:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "1086:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1141,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "1112:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1142,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "1121:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "1135:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1140,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "1096:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1148,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "1157:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1149,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "1166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1147,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "1151:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:5"
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1039:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1056:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:5"
									},
									"scope": 1154,
									"src": "1021:158:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1155,
							"src": "448:733:5",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "124:1058:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20": [
							1030
						],
						"ERC20Pausable": [
							1188
						],
						"Pausable": [
							1361
						]
					},
					"id": 1189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1156,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1158,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 1031,
							"src": "150:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1157,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1030,
										"src": "158:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 1160,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 1362,
							"src": "186:53:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1159,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1361,
										"src": "194:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1162,
										"name": "ERC20",
										"nameLocations": [
											"964:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "964:5:6"
									},
									"id": 1163,
									"nodeType": "InheritanceSpecifier",
									"src": "964:5:6"
								},
								{
									"baseName": {
										"id": 1164,
										"name": "Pausable",
										"nameLocations": [
											"971:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1361,
										"src": "971:8:6"
									},
									"id": 1165,
									"nodeType": "InheritanceSpecifier",
									"src": "971:8:6"
								}
							],
							"canonicalName": "ERC20Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1161,
								"nodeType": "StructuredDocumentation",
								"src": "241:687:6",
								"text": " @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 1188,
							"linearizedBaseContracts": [
								1188,
								1361,
								1030,
								420,
								1214,
								1108,
								1244
							],
							"name": "ERC20Pausable",
							"nameLocation": "947:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										837
									],
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "1210:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "1234:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1182,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "1240:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "1244:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1178,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1220:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$1188_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1226:7:6",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 837,
														"src": "1220:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1220:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "1220:30:6"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "986:121:6",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1176,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1175,
												"name": "whenNotPaused",
												"nameLocations": [
													"1196:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1286,
												"src": "1196:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1196:13:6"
										}
									],
									"name": "_update",
									"nameLocation": "1121:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1174,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1187:8:6"
									},
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1137:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1129:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1151:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1143:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1163:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1155:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:41:6"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1210:0:6"
									},
									"scope": 1188,
									"src": "1112:145:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1189,
							"src": "929:330:6",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419,
								1266,
								1269
							],
							"usedEvents": [
								1042,
								1051,
								1258,
								1263
							]
						}
					],
					"src": "124:1136:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						],
						"IERC20Metadata": [
							1214
						]
					},
					"id": 1215,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1215,
							"sourceUnit": 1109,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1191,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1194,
										"name": "IERC20",
										"nameLocations": [
											"305:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "305:6:7"
									},
									"id": 1195,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1193,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:7",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1214,
							"linearizedBaseContracts": [
								1214,
								1108
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:7"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "416:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:7"
									},
									"scope": 1214,
									"src": "377:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:7"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "539:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:7"
									},
									"scope": 1214,
									"src": "498:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:7"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "673:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1210,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:7"
									},
									"scope": 1214,
									"src": "630:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1215,
							"src": "277:405:7",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "125:558:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1244
						]
					},
					"id": 1245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1216,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1217,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1244,
							"linearizedBaseContracts": [
								1244
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1222,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1221,
												"id": 1224,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1244,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1231,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1230,
												"id": 1233,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1228,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1244,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1239,
												"id": 1241,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1244,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1245,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1244
						],
						"Pausable": [
							1361
						]
					},
					"id": 1362,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1362,
							"sourceUnit": 1245,
							"src": "128:45:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1247,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1244,
										"src": "136:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1250,
										"name": "Context",
										"nameLocations": [
											"645:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1244,
										"src": "645:7:9"
									},
									"id": 1251,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:9"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1249,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:9",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1361,
							"linearizedBaseContracts": [
								1361,
								1244
							],
							"name": "Pausable",
							"nameLocation": "633:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1253,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1361,
									"src": "659:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1252,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:9",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1258,
									"name": "Paused",
									"nameLocation": "770:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "777:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:9"
									},
									"src": "764:30:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:9",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1263,
									"name": "Unpaused",
									"nameLocation": "881:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "890:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:9"
									},
									"src": "875:32:9"
								},
								{
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:9",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1266,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:9"
									},
									"src": "994:22:9"
								},
								{
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:9",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1269,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:9"
									},
									"src": "1107:22:9"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "1221:32:9",
										"statements": [
											{
												"expression": {
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1273,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "1231:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:9"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:9",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1278,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:9"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:9"
									},
									"scope": 1361,
									"src": "1207:46:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "1464:47:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1281,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "1474:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:9"
											},
											{
												"id": 1284,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:9"
											}
										]
									},
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:9",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1286,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:9"
									},
									"src": "1439:72:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "1711:44:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1289,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "1721:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:9"
											},
											{
												"id": 1292,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:9"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:9",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1294,
									"name": "whenPaused",
									"nameLocation": "1698:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:9"
									},
									"src": "1689:66:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "1903:31:9",
										"statements": [
											{
												"expression": {
													"id": 1300,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1253,
													"src": "1920:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1301,
												"nodeType": "Return",
												"src": "1913:14:9"
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:9",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:9"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1897:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:9"
									},
									"scope": 1361,
									"src": "1850:84:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "2053:77:9",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1307,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "2067:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "IfStatement",
												"src": "2063:61:9",
												"trueBody": {
													"id": 1312,
													"nodeType": "Block",
													"src": "2077:47:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1309,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "2098:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1311,
															"nodeType": "RevertStatement",
															"src": "2091:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:9",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:9"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:9"
									},
									"scope": 1361,
									"src": "2002:128:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "2250:78:9",
										"statements": [
											{
												"condition": {
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:9",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1319,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "2265:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1326,
												"nodeType": "IfStatement",
												"src": "2260:62:9",
												"trueBody": {
													"id": 1325,
													"nodeType": "Block",
													"src": "2275:47:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1322,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "2296:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1324,
															"nodeType": "RevertStatement",
															"src": "2289:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:9",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:9"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:9"
									},
									"scope": 1361,
									"src": "2202:126:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "2512:66:9",
										"statements": [
											{
												"expression": {
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1334,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "2522:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1339,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "2558:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1338,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "2551:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "EmitStatement",
												"src": "2546:25:9"
											}
										]
									},
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:9",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1332,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1331,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1286,
												"src": "2498:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:9"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:9"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:9"
									},
									"scope": 1361,
									"src": "2463:115:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "2758:69:9",
										"statements": [
											{
												"expression": {
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1350,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "2768:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1355,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "2807:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1354,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "2798:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "EmitStatement",
												"src": "2793:27:9"
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:9",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1347,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1294,
												"src": "2747:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:9"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:9"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:9"
									},
									"scope": 1361,
									"src": "2710:117:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1362,
							"src": "615:2214:9",
							"usedErrors": [
								1266,
								1269
							],
							"usedEvents": [
								1258,
								1263
							]
						}
					],
					"src": "102:2728:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1385
						],
						"IERC165": [
							1397
						]
					},
					"id": 1386,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1363,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1386,
							"sourceUnit": 1398,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1364,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1397,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1367,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1397,
										"src": "687:7:10"
									},
									"id": 1368,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1366,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1385,
							"linearizedBaseContracts": [
								1385,
								1397
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1396
									],
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1376,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1378,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1397_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1397_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1377,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1397",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1375,
												"id": 1382,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1370,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 1385,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1386,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1397
						]
					},
					"id": 1398,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1387,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1388,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1397,
							"linearizedBaseContracts": [
								1397
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1390,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1393,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 1397,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1398,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"contracts/BonDeFiToken.sol": {
				"ast": {
					"absolutePath": "contracts/BonDeFiToken.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"BonDeFiToken": [
							1774
						],
						"Context": [
							1244
						],
						"ERC165": [
							1385
						],
						"ERC20": [
							1030
						],
						"ERC20Burnable": [
							1154
						],
						"ERC20Pausable": [
							1188
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1214
						],
						"Pausable": [
							1361
						]
					},
					"id": 1775,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1399,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1775,
							"sourceUnit": 1031,
							"src": "107:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1401,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1775,
							"sourceUnit": 1155,
							"src": "163:74:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"id": 1402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1775,
							"sourceUnit": 1189,
							"src": "238:74:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1403,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1775,
							"sourceUnit": 296,
							"src": "313:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1404,
										"name": "ERC20",
										"nameLocations": [
											"398:5:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "398:5:12"
									},
									"id": 1405,
									"nodeType": "InheritanceSpecifier",
									"src": "398:5:12"
								},
								{
									"baseName": {
										"id": 1406,
										"name": "ERC20Burnable",
										"nameLocations": [
											"405:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1154,
										"src": "405:13:12"
									},
									"id": 1407,
									"nodeType": "InheritanceSpecifier",
									"src": "405:13:12"
								},
								{
									"baseName": {
										"id": 1408,
										"name": "ERC20Pausable",
										"nameLocations": [
											"420:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "420:13:12"
									},
									"id": 1409,
									"nodeType": "InheritanceSpecifier",
									"src": "420:13:12"
								},
								{
									"baseName": {
										"id": 1410,
										"name": "AccessControl",
										"nameLocations": [
											"435:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "435:13:12"
									},
									"id": 1411,
									"nodeType": "InheritanceSpecifier",
									"src": "435:13:12"
								}
							],
							"canonicalName": "BonDeFiToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1774,
							"linearizedBaseContracts": [
								1774,
								295,
								1385,
								1397,
								378,
								1188,
								1361,
								1154,
								1030,
								420,
								1214,
								1108,
								1244
							],
							"name": "BonDeFiToken",
							"nameLocation": "382:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "2a0acc6a",
									"id": 1416,
									"mutability": "constant",
									"name": "ADMIN",
									"nameLocation": "479:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 1774,
									"src": "455:50:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1412,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "455:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e",
												"id": 1414,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "497:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
													"typeString": "literal_string \"ADMIN\""
												},
												"value": "ADMIN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
													"typeString": "literal_string \"ADMIN\""
												}
											],
											"id": 1413,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "487:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1415,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "487:18:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e091a39b",
									"id": 1421,
									"mutability": "constant",
									"name": "BOND_ISSUER",
									"nameLocation": "535:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 1774,
									"src": "511:62:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1417,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "511:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "424f4e445f495353554552",
												"id": 1419,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "559:13:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7",
													"typeString": "literal_string \"BOND_ISSUER\""
												},
												"value": "BOND_ISSUER"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_f877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7",
													"typeString": "literal_string \"BOND_ISSUER\""
												}
											],
											"id": 1418,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "549:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1420,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "549:24:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "992642e5",
									"id": 1423,
									"mutability": "immutable",
									"name": "stableCoin",
									"nameLocation": "604:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1774,
									"src": "579:35:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1422,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "579:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d59624b4",
									"id": 1425,
									"mutability": "immutable",
									"name": "maturityDate",
									"nameLocation": "645:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1774,
									"src": "620:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "620:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "764b666c",
									"id": 1427,
									"mutability": "mutable",
									"name": "interestToken",
									"nameLocation": "678:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 1774,
									"src": "663:28:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1426,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "663:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "862:224:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1445,
															"name": "ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "883:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1446,
															"name": "administrator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "890:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1444,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "872:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "872:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "872:32:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1450,
															"name": "BOND_ISSUER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "925:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1451,
															"name": "bondIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "938:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1449,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "914:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "914:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "914:35:12"
											},
											{
												"expression": {
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1454,
														"name": "stableCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "959:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1455,
														"name": "_stableCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "972:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "959:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "959:24:12"
											},
											{
												"expression": {
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1458,
														"name": "maturityDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "993:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1459,
														"name": "_maturityDate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "1008:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "993:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "993:28:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1463,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1037:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1041:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1037:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1465,
																"name": "_faceValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1435,
																"src": "1049:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1062:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1467,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "1068:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1068:10:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1062:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1049:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1462,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "1031:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:48:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "1031:48:12"
											}
										]
									},
									"id": 1474,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "426f6e44654669546f6b656e",
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "835:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3fddf2bad6afd8a45ed2476e6e2a090065b40d520ebbbdd55a12550c2481156d",
														"typeString": "literal_string \"BonDeFiToken\""
													},
													"value": "BonDeFiToken"
												},
												{
													"hexValue": "424446",
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "851:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_bf2b8008f98b96100fd77045ddd88c23563999a18b216795533257ffc9153f24",
														"typeString": "literal_string \"BDF\""
													},
													"value": "BDF"
												}
											],
											"id": 1442,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1439,
												"name": "ERC20",
												"nameLocations": [
													"829:5:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "829:5:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "829:28:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "administrator",
												"nameLocation": "718:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "710:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "bondIssuer",
												"nameLocation": "741:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "733:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "_stableCoin",
												"nameLocation": "761:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "753:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "_faceValue",
												"nameLocation": "786:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "778:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "_maturityDate",
												"nameLocation": "806:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "798:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:111:12"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:0:12"
									},
									"scope": 1774,
									"src": "698:388:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "1151:50:12",
										"statements": [
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1479,
														"name": "interestToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "1161:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1480,
														"name": "interestTokenAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1476,
														"src": "1177:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1161:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "1161:33:12"
											}
										]
									},
									"functionSelector": "94d7cc88",
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setInterestToken",
									"nameLocation": "1100:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "interestTokenAddr",
												"nameLocation": "1125:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "1117:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1116:27:12"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1151:0:12"
									},
									"scope": 1774,
									"src": "1091:110:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "1252:219:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1494,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1302:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1306:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1302:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1498,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1321:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																				"typeString": "contract BonDeFiToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																				"typeString": "contract BonDeFiToken"
																			}
																		],
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1313:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1496,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1313:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1313:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1500,
																	"name": "amountTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "1327:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1491,
																			"name": "stableCoin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1423,
																			"src": "1277:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1490,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "1270:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1270:18:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1108",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1289:12:12",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1107,
																"src": "1270:31:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1270:70:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461626c6520636f696e207472616e73666572206661696c6564",
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1341:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																"typeString": "literal_string \"Stable coin transfer failed\""
															},
															"value": "Stable coin transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																"typeString": "literal_string \"Stable coin transfer failed\""
															}
														],
														"id": 1489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1262:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1262:109:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "1262:109:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1510,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1410:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1414:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1410:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1512,
																	"name": "amountTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "1421:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1507,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1395:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																				"typeString": "contract BonDeFiToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																				"typeString": "contract BonDeFiToken"
																			}
																		],
																		"id": 1506,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "1389:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$1030_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1389:11:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1030",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1401:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 640,
																"src": "1389:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1389:45:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6e6420746f6b656e207472616e73666572206661696c6564",
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1435:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																"typeString": "literal_string \"Bond token transfer failed\""
															},
															"value": "Bond token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																"typeString": "literal_string \"Bond token transfer failed\""
															}
														],
														"id": 1505,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1381:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1381:83:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "ExpressionStatement",
												"src": "1381:83:12"
											}
										]
									},
									"functionSelector": "10002dbd",
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyBond",
									"nameLocation": "1216:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "amountTokens",
												"nameLocation": "1232:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "1224:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1223:22:12"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1252:0:12"
									},
									"scope": 1774,
									"src": "1207:264:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "1563:112:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1533,
																	"name": "interestToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "1616:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1534,
																	"name": "tokenHolder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1520,
																	"src": "1630:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1535,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "1642:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1530,
																			"name": "interestToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1427,
																			"src": "1588:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1529,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "1581:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1581:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1108",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1603:12:12",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1107,
																"src": "1581:34:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1581:68:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1650:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1573:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1573:95:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "1573:95:12"
											}
										]
									},
									"functionSelector": "f57d283e",
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1525,
													"name": "ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1416,
													"src": "1557:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1524,
												"name": "onlyRole",
												"nameLocations": [
													"1548:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1548:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1548:15:12"
										}
									],
									"name": "distributeInterest",
									"nameLocation": "1486:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "1513:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1505:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1533:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1525:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1525:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1504:36:12"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1563:0:12"
									},
									"scope": 1774,
									"src": "1477:198:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "1792:295:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1554,
																	"name": "tokenHolders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "1810:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1823:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1810:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1556,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "1833:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1841:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1833:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1810:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1849:43:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f",
																"typeString": "literal_string \"Token holders and amounts length mismatch\""
															},
															"value": "Token holders and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f",
																"typeString": "literal_string \"Token holders and amounts length mismatch\""
															}
														],
														"id": 1553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1802:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:91:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "1802:91:12"
											},
											{
												"body": {
													"id": 1590,
													"nodeType": "Block",
													"src": "1953:128:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1578,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2010:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1579,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2014:6:12",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2010:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 1580,
																					"name": "tokenHolders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1544,
																					"src": "2022:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1582,
																				"indexExpression": {
																					"id": 1581,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1563,
																					"src": "2035:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2022:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 1583,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1547,
																					"src": "2039:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1585,
																				"indexExpression": {
																					"id": 1584,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1563,
																					"src": "2047:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2039:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1575,
																						"name": "interestToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1427,
																						"src": "1982:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1574,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "1975:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 1576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1975:21:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1108",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1997:12:12",
																			"memberName": "transferFrom",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1107,
																			"src": "1975:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,address,uint256) external returns (bool)"
																			}
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1975:75:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"id": 1587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2052:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		},
																		"value": "Transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		}
																	],
																	"id": 1573,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1967:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1967:103:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1589,
															"nodeType": "ExpressionStatement",
															"src": "1967:103:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1566,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "1923:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1567,
															"name": "tokenHolders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "1927:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1940:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1927:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1923:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1591,
												"initializationExpression": {
													"assignments": [
														1563
													],
													"declarations": [
														{
															"constant": false,
															"id": 1563,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1916:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1591,
															"src": "1908:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1562,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1908:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1565,
													"initialValue": {
														"hexValue": "30",
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1920:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1908:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1948:3:12",
														"subExpression": {
															"id": 1570,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "1948:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1572,
													"nodeType": "ExpressionStatement",
													"src": "1948:3:12"
												},
												"nodeType": "ForStatement",
												"src": "1903:178:12"
											}
										]
									},
									"functionSelector": "904835c4",
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1550,
													"name": "ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1416,
													"src": "1785:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1551,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1549,
												"name": "onlyRole",
												"nameLocations": [
													"1776:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1776:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1776:15:12"
										}
									],
									"name": "distributeInterestAll",
									"nameLocation": "1690:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "tokenHolders",
												"nameLocation": "1729:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1712:29:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1542,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1712:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1543,
													"nodeType": "ArrayTypeName",
													"src": "1712:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1760:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1743:24:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1545,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1743:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1546,
													"nodeType": "ArrayTypeName",
													"src": "1743:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:57:12"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:12"
									},
									"scope": 1774,
									"src": "1681:406:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "2151:268:12",
										"statements": [
											{
												"assignments": [
													1600
												],
												"declarations": [
													{
														"constant": false,
														"id": 1600,
														"mutability": "mutable",
														"name": "amountInvestorCoins",
														"nameLocation": "2169:19:12",
														"nodeType": "VariableDeclaration",
														"scope": 1630,
														"src": "2161:27:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2161:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1610,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1607,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2228:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																		"typeString": "contract BonDeFiToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																		"typeString": "contract BonDeFiToken"
																	}
																],
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2220:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1605,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2220:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2220:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1602,
																	"name": "stableCoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "2198:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1601,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "2191:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2191:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1108",
																"typeString": "contract IERC20"
															}
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2210:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1065,
														"src": "2191:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2191:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2161:73:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1612,
																"name": "amountInvestorCoins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1600,
																"src": "2252:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2274:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2252:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20696e766573746f722066756e647320617661696c61626c652e",
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2276:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15",
																"typeString": "literal_string \"No investor funds available.\""
															},
															"value": "No investor funds available."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15",
																"typeString": "literal_string \"No investor funds available.\""
															}
														],
														"id": 1611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2244:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:63:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "2244:63:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1623,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2346:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2350:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2346:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1625,
																	"name": "amountInvestorCoins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "2357:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1620,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2331:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																				"typeString": "contract BonDeFiToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																				"typeString": "contract BonDeFiToken"
																			}
																		],
																		"id": 1619,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "2325:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$1030_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 1621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2325:11:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1030",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2337:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 640,
																"src": "2325:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2325:52:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207472616e7366657220737461626c6520636f696e73",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2378:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b",
																"typeString": "literal_string \"Failed to transfer stable coins\""
															},
															"value": "Failed to transfer stable coins"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b",
																"typeString": "literal_string \"Failed to transfer stable coins\""
															}
														],
														"id": 1618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:95:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "2317:95:12"
											}
										]
									},
									"functionSelector": "ced0550f",
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1596,
													"name": "BOND_ISSUER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1421,
													"src": "2139:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1597,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1595,
												"name": "onlyRole",
												"nameLocations": [
													"2130:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2130:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2130:21:12"
										}
									],
									"name": "claimInvestorFunds",
									"nameLocation": "2102:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2120:2:12"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:12"
									},
									"scope": 1774,
									"src": "2093:326:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "2477:472:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1637,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2520:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2526:9:12",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2520:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1639,
																"name": "maturityDate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "2539:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2520:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61747572697479206e6f74207965742072656163686564",
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2552:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55",
																"typeString": "literal_string \"Maturity not yet reached\""
															},
															"value": "Maturity not yet reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d86519c2c8ed711e323c4702bc28d5cea695d06b5d48fd3cb948b2b49e2e6f55",
																"typeString": "literal_string \"Maturity not yet reached\""
															}
														],
														"id": 1636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2512:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2512:67:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1643,
												"nodeType": "ExpressionStatement",
												"src": "2512:67:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1645,
																"name": "amountTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "2624:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2639:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2624:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e277420636c61696d207a65726f20636f696e73",
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2641:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464",
																"typeString": "literal_string \"Can't claim zero coins\""
															},
															"value": "Can't claim zero coins"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464",
																"typeString": "literal_string \"Can't claim zero coins\""
															}
														],
														"id": 1644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2616:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2616:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "2616:50:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1656,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2709:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2713:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2709:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1660,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2728:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																				"typeString": "contract BonDeFiToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																				"typeString": "contract BonDeFiToken"
																			}
																		],
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2720:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1658,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2720:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2720:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1662,
																	"name": "amountTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1633,
																	"src": "2734:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1653,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2690:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																				"typeString": "contract BonDeFiToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																				"typeString": "contract BonDeFiToken"
																			}
																		],
																		"id": 1652,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "2684:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$1030_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 1654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:11:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1030",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2696:12:12",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 713,
																"src": "2684:24:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2684:63:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6e6420746f6b656e207472616e73666572206661696c6564",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2748:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																"typeString": "literal_string \"Bond token transfer failed\""
															},
															"value": "Bond token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																"typeString": "literal_string \"Bond token transfer failed\""
															}
														],
														"id": 1651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2676:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2676:101:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "2676:101:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1672,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2823:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2827:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2823:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1674,
																	"name": "amountTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1633,
																	"src": "2834:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1669,
																			"name": "stableCoin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1423,
																			"src": "2802:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1668,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "2795:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2795:18:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1108",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2814:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1075,
																"src": "2795:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2795:52:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461626c6520636f696e207472616e73666572206661696c6564",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2848:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																"typeString": "literal_string \"Stable coin transfer failed\""
															},
															"value": "Stable coin transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																"typeString": "literal_string \"Stable coin transfer failed\""
															}
														],
														"id": 1667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2787:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2787:91:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "2787:91:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1682,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2923:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																		"typeString": "contract BonDeFiToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																		"typeString": "contract BonDeFiToken"
																	}
																],
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2915:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1680,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2915:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2915:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1684,
															"name": "amountTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "2929:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1679,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2909:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2909:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "2909:33:12"
											}
										]
									},
									"functionSelector": "ca19c11c",
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimFaceValue",
									"nameLocation": "2434:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "amountTokens",
												"nameLocation": "2457:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "2449:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:22:12"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2477:0:12"
									},
									"scope": 1774,
									"src": "2425:524:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "3039:60:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1699,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3086:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																		"typeString": "contract BonDeFiToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																		"typeString": "contract BonDeFiToken"
																	}
																],
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3078:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1697,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3078:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3078:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1694,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3062:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																		"typeString": "contract BonDeFiToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BonDeFiToken_$1774",
																		"typeString": "contract BonDeFiToken"
																	}
																],
																"id": 1693,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "3056:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$1030_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3056:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$1030",
																"typeString": "contract ERC20"
															}
														},
														"id": 1696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3068:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 616,
														"src": "3056:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3056:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1692,
												"id": 1702,
												"nodeType": "Return",
												"src": "3049:43:12"
											}
										]
									},
									"functionSelector": "86d71654",
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showBondTokens",
									"nameLocation": "2992:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3006:2:12"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "3030:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3030:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3029:9:12"
									},
									"scope": 1774,
									"src": "2983:116:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "3163:67:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1713,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3212:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3216:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3212:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1710,
																	"name": "interestToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "3187:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1709,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "3180:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3180:21:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1108",
																"typeString": "contract IERC20"
															}
														},
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3202:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1065,
														"src": "3180:31:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3180:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1708,
												"id": 1716,
												"nodeType": "Return",
												"src": "3173:50:12"
											}
										]
									},
									"functionSelector": "ce4120da",
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showInterestTokens",
									"nameLocation": "3113:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3131:2:12"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "3155:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3154:9:12"
									},
									"scope": 1774,
									"src": "3104:126:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1731,
										"nodeType": "Block",
										"src": "3291:64:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1727,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3337:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3341:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3337:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1724,
																	"name": "stableCoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "3315:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1723,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "3308:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3308:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1108",
																"typeString": "contract IERC20"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3327:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1065,
														"src": "3308:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3308:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1722,
												"id": 1730,
												"nodeType": "Return",
												"src": "3301:47:12"
											}
										]
									},
									"functionSelector": "acd17a99",
									"id": 1732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showStableCoins",
									"nameLocation": "3244:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3259:2:12"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "3283:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3283:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3282:9:12"
									},
									"scope": 1774,
									"src": "3235:120:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										837,
										1187
									],
									"body": {
										"id": 1752,
										"nodeType": "Block",
										"src": "3584:47:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1747,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "3608:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1748,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "3614:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1749,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "3618:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1744,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3594:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_BonDeFiToken_$1774_$",
																"typeString": "type(contract super BonDeFiToken)"
															}
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3600:7:12",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "3594:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3594:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "3594:30:12"
											}
										]
									},
									"id": 1753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "3475:7:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1742,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1740,
												"name": "ERC20",
												"nameLocations": [
													"3558:5:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "3558:5:12"
											},
											{
												"id": 1741,
												"name": "ERC20Pausable",
												"nameLocations": [
													"3565:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1188,
												"src": "3565:13:12"
											}
										],
										"src": "3549:30:12"
									},
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3491:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "3483:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3483:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3505:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "3497:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3517:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "3509:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:41:12"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3584:0:12"
									},
									"scope": 1774,
									"src": "3466:165:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1762,
										"nodeType": "Block",
										"src": "3680:25:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1759,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "3690:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3690:8:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "3690:8:12"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1763,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1756,
													"name": "ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1416,
													"src": "3673:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1757,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1755,
												"name": "onlyRole",
												"nameLocations": [
													"3664:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3664:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3664:15:12"
										}
									],
									"name": "pause",
									"nameLocation": "3649:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3654:2:12"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3680:0:12"
									},
									"scope": 1774,
									"src": "3640:65:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "3753:27:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1769,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "3763:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3763:10:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "3763:10:12"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1766,
													"name": "ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1416,
													"src": "3746:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1767,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1765,
												"name": "onlyRole",
												"nameLocations": [
													"3737:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "3737:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3737:15:12"
										}
									],
									"name": "unpause",
									"nameLocation": "3720:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:12"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3753:0:12"
									},
									"scope": 1774,
									"src": "3711:69:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1775,
							"src": "373:3409:12",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419,
								1266,
								1269
							],
							"usedEvents": [
								317,
								326,
								335,
								1042,
								1051,
								1258,
								1263
							]
						}
					],
					"src": "81:3702:12"
				},
				"id": 12
			}
		}
	}
}