{
	"id": "7ec97da109b3c6881afa1e8b1f90927a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract BonDeFiTokenSiemens is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {\n    bytes32 public constant ADMIN = keccak256(\"ADMIN\");\n    bytes32 public constant BOND_ISSUER = keccak256(\"BOND_ISSUER\");\n    address public immutable stableCoin;\n    address public immutable interestCoin;\n    uint256 public immutable unitSize;\n    constructor(address administrator, address bondIssuer, address _stableCoin,address _interestCoin, uint256 faceValue,\n    uint256 totalInterest,uint256 interestFrequency, uint256 maturityDate, uint256 _unitSize) \n        ERC20(\"BonDeFi Token Siemens\", \"BDSIEM\")\n    {\n        _grantRole(ADMIN, administrator);\n        _grantRole(BOND_ISSUER, bondIssuer);\n        stableCoin = _stableCoin;\n        interestCoin = _interestCoin;\n        unitSize = _unitSize;\n        _mint(msg.sender, (faceValue / _unitSize) * 10 ** decimals());\n    }\n\n    function pause() public onlyRole(ADMIN) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(ADMIN) {\n        _unpause();\n    }\n    function buyBond(uint256 amountTokens) public{\n        require(IERC20(stableCoin).transferFrom(msg.sender,address(this),amountTokens*unitSize),\"Stable coin transfer failed\");\n        require(ERC20(this).transfer(msg.sender,amountTokens),\"Bond token transfer failed\");\n    }\n\n    function distributeInterest(address tokenHolder,uint256 amount) public onlyRole(ADMIN){\n        require(IERC20(interestCoin).transferFrom(interestCoin,tokenHolder,amount),\"Transfer failed\");\n    }\n    function distributeInterestAll(address[] memory tokenHolders, uint256[] memory amounts) public onlyRole(ADMIN) {\n        require(tokenHolders.length == amounts.length, \"Token holders and amounts length mismatch\");\n        for (uint256 i = 0; i < tokenHolders.length; i++) {\n            require(IERC20(interestCoin).transferFrom(msg.sender, tokenHolders[i], amounts[i]), \"Transfer failed\");\n        }\n    }\n    function claimInvestorFunds() public onlyRole(BOND_ISSUER){\n        uint256 amountInvestorCoins = IERC20(stableCoin).balanceOf(address(this));\n        require(amountInvestorCoins > 0,\"No investor funds available.\");\n        require(ERC20(this).transfer(msg.sender,amountInvestorCoins),\"Failed to transfer stable coins\");\n    }\n\n    function claimFaceValue(uint256 amountTokens) public{\n        require(amountTokens > 0,\"Can't claim zero coins\");\n        require(ERC20(this).transferFrom(msg.sender,address(this),amountTokens),\"Bond token transfer failed\");\n        require(IERC20(stableCoin).transfer(msg.sender,amountTokens*unitSize),\"Stable coin transfer failed\");\n    }\n\n    // The following functions are overrides required by Solidity.\n    // Override required for pausable\n    function _update(address from, address to, uint256 value)\n        internal\n        override(ERC20, ERC20Pausable)\n    {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1253,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1253,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyToken.sol": {
				"BonDeFiTokenSiemens": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "administrator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "bondIssuer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stableCoin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_interestCoin",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "faceValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalInterest",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestFrequency",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maturityDate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_unitSize",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BOND_ISSUER",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountTokens",
									"type": "uint256"
								}
							],
							"name": "buyBond",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountTokens",
									"type": "uint256"
								}
							],
							"name": "claimFaceValue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimInvestorFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "distributeInterest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "tokenHolders",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "distributeInterestAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "interestCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableCoin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unitSize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken.sol\":373:3232  contract BonDeFiTokenSiemens is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/MyToken.sol\":709:1241  constructor(address administrator, address bondIssuer, address _stableCoin,address _interestCoin, uint256 faceValue,... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x15\n  dup2\n  mstore\n  0x20\n  add\n  0x426f6e4465466920546f6b656e205369656d656e730000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x42445349454d0000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":984:1016  _grantRole(ADMIN, administrator) */\n  tag_13\n    /* \"contracts/MyToken.sol\":494:512  keccak256(\"ADMIN\") */\n  0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n    /* \"contracts/MyToken.sol\":1002:1015  administrator */\n  dup11\n    /* \"contracts/MyToken.sol\":984:994  _grantRole */\n  shl(0x20, tag_14)\n    /* \"contracts/MyToken.sol\":984:1016  _grantRole(ADMIN, administrator) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/MyToken.sol\":1026:1061  _grantRole(BOND_ISSUER, bondIssuer) */\n  tag_15\n    /* \"contracts/MyToken.sol\":556:580  keccak256(\"BOND_ISSUER\") */\n  0xf877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7\n    /* \"contracts/MyToken.sol\":1050:1060  bondIssuer */\n  dup10\n    /* \"contracts/MyToken.sol\":1026:1036  _grantRole */\n  shl(0x20, tag_14)\n    /* \"contracts/MyToken.sol\":1026:1061  _grantRole(BOND_ISSUER, bondIssuer) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/MyToken.sol\":1084:1095  _stableCoin */\n  dup7\n    /* \"contracts/MyToken.sol\":1071:1095  stableCoin = _stableCoin */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/MyToken.sol\":1120:1133  _interestCoin */\n  dup6\n    /* \"contracts/MyToken.sol\":1105:1133  interestCoin = _interestCoin */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/MyToken.sol\":1154:1163  _unitSize */\n  dup1\n    /* \"contracts/MyToken.sol\":1143:1163  unitSize = _unitSize */\n  0xc0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/MyToken.sol\":1173:1234  _mint(msg.sender, (faceValue / _unitSize) * 10 ** decimals()) */\n  tag_16\n    /* \"contracts/MyToken.sol\":1179:1189  msg.sender */\n  caller\n    /* \"contracts/MyToken.sol\":1223:1233  decimals() */\n  tag_17\n    /* \"contracts/MyToken.sol\":1223:1231  decimals */\n  shl(0x20, tag_18)\n    /* \"contracts/MyToken.sol\":1223:1233  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"contracts/MyToken.sol\":1217:1219  10 */\n  0x0a\n    /* \"contracts/MyToken.sol\":1217:1233  10 ** decimals() */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/MyToken.sol\":1204:1213  _unitSize */\n  dup4\n    /* \"contracts/MyToken.sol\":1192:1201  faceValue */\n  dup9\n    /* \"contracts/MyToken.sol\":1192:1213  faceValue / _unitSize */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/MyToken.sol\":1191:1233  (faceValue / _unitSize) * 10 ** decimals() */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/MyToken.sol\":1173:1178  _mint */\n  shl(0x20, tag_25)\n    /* \"contracts/MyToken.sol\":1173:1234  _mint(msg.sender, (faceValue / _unitSize) * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"contracts/MyToken.sol\":709:1241  constructor(address administrator, address bondIssuer, address _stableCoin,address _interestCoin, uint256 faceValue,... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/MyToken.sol\":373:3232  contract BonDeFiTokenSiemens is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_28\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_29)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_31\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_32)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_27:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_39\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_40)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x06\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/MyToken.sol\":3065:3230  function _update(address from, address to, uint256 value)... */\ntag_40:\n    /* \"contracts/MyToken.sol\":3193:3223  super._update(from, to, value) */\n  tag_44\n    /* \"contracts/MyToken.sol\":3207:3211  from */\n  dup4\n    /* \"contracts/MyToken.sol\":3213:3215  to */\n  dup4\n    /* \"contracts/MyToken.sol\":3217:3222  value */\n  dup4\n    /* \"contracts/MyToken.sol\":3193:3206  super._update */\n  shl(0x20, tag_45)\n    /* \"contracts/MyToken.sol\":3193:3223  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"contracts/MyToken.sol\":3065:3230  function _update(address from, address to, uint256 value)... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\ntag_45:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n  tag_47\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n  shl(0x20, tag_48)\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n  0x20\n  shr\n  jump\t// in\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n  tag_50\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1234:1238  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1240:1242  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1244:1249  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1233  super._update */\n  shl(0x20, tag_51)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_50:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\ntag_48:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n  tag_53\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n  shl(0x20, tag_54)\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n  0x20\n  shr\n  jump\t// in\ntag_53:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n  iszero\n  tag_55\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n  mload(0x40)\n  0xd93c066500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\ntag_55:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_51:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_57\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_58\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_60)\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_61\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_62\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_63\n  jump\t// in\ntag_62:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_61:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_60:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_64\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_65)\ntag_64:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_65:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_66\n  swap2\n  swap1\n  tag_67\n  jump\t// in\ntag_66:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\ntag_54:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_70:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_72:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_73:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_112\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_72\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_74:\n    /* \"#utility.yul\":641:665   */\n  tag_114\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_73\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_115\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_115:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_75:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_117\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_74\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_76:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_77:\n    /* \"#utility.yul\":1001:1025   */\n  tag_120\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_76\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_121\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_121:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_78:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_123\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_77\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2810   */\ntag_3:\n    /* \"#utility.yul\":1347:1353   */\n  0x00\n    /* \"#utility.yul\":1355:1361   */\n  dup1\n    /* \"#utility.yul\":1363:1369   */\n  0x00\n    /* \"#utility.yul\":1371:1377   */\n  dup1\n    /* \"#utility.yul\":1379:1385   */\n  0x00\n    /* \"#utility.yul\":1387:1393   */\n  dup1\n    /* \"#utility.yul\":1395:1401   */\n  0x00\n    /* \"#utility.yul\":1403:1409   */\n  dup1\n    /* \"#utility.yul\":1411:1417   */\n  0x00\n    /* \"#utility.yul\":1460:1463   */\n  0x0120\n    /* \"#utility.yul\":1448:1457   */\n  dup11\n    /* \"#utility.yul\":1439:1446   */\n  dup13\n    /* \"#utility.yul\":1435:1458   */\n  sub\n    /* \"#utility.yul\":1431:1464   */\n  slt\n    /* \"#utility.yul\":1428:1548   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":1467:1546   */\n  tag_126\n  tag_70\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":1428:1548   */\ntag_125:\n    /* \"#utility.yul\":1587:1588   */\n  0x00\n    /* \"#utility.yul\":1612:1676   */\n  tag_127\n    /* \"#utility.yul\":1668:1675   */\n  dup13\n    /* \"#utility.yul\":1659:1665   */\n  dup3\n    /* \"#utility.yul\":1648:1657   */\n  dup14\n    /* \"#utility.yul\":1644:1666   */\n  add\n    /* \"#utility.yul\":1612:1676   */\n  tag_75\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":1602:1676   */\n  swap10\n  pop\n    /* \"#utility.yul\":1558:1686   */\n  pop\n    /* \"#utility.yul\":1725:1727   */\n  0x20\n    /* \"#utility.yul\":1751:1815   */\n  tag_128\n    /* \"#utility.yul\":1807:1814   */\n  dup13\n    /* \"#utility.yul\":1798:1804   */\n  dup3\n    /* \"#utility.yul\":1787:1796   */\n  dup14\n    /* \"#utility.yul\":1783:1805   */\n  add\n    /* \"#utility.yul\":1751:1815   */\n  tag_75\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":1741:1815   */\n  swap9\n  pop\n    /* \"#utility.yul\":1696:1825   */\n  pop\n    /* \"#utility.yul\":1864:1866   */\n  0x40\n    /* \"#utility.yul\":1890:1954   */\n  tag_129\n    /* \"#utility.yul\":1946:1953   */\n  dup13\n    /* \"#utility.yul\":1937:1943   */\n  dup3\n    /* \"#utility.yul\":1926:1935   */\n  dup14\n    /* \"#utility.yul\":1922:1944   */\n  add\n    /* \"#utility.yul\":1890:1954   */\n  tag_75\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":1880:1954   */\n  swap8\n  pop\n    /* \"#utility.yul\":1835:1964   */\n  pop\n    /* \"#utility.yul\":2003:2005   */\n  0x60\n    /* \"#utility.yul\":2029:2093   */\n  tag_130\n    /* \"#utility.yul\":2085:2092   */\n  dup13\n    /* \"#utility.yul\":2076:2082   */\n  dup3\n    /* \"#utility.yul\":2065:2074   */\n  dup14\n    /* \"#utility.yul\":2061:2083   */\n  add\n    /* \"#utility.yul\":2029:2093   */\n  tag_75\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2019:2093   */\n  swap7\n  pop\n    /* \"#utility.yul\":1974:2103   */\n  pop\n    /* \"#utility.yul\":2142:2145   */\n  0x80\n    /* \"#utility.yul\":2169:2233   */\n  tag_131\n    /* \"#utility.yul\":2225:2232   */\n  dup13\n    /* \"#utility.yul\":2216:2222   */\n  dup3\n    /* \"#utility.yul\":2205:2214   */\n  dup14\n    /* \"#utility.yul\":2201:2223   */\n  add\n    /* \"#utility.yul\":2169:2233   */\n  tag_78\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":2159:2233   */\n  swap6\n  pop\n    /* \"#utility.yul\":2113:2243   */\n  pop\n    /* \"#utility.yul\":2282:2285   */\n  0xa0\n    /* \"#utility.yul\":2309:2373   */\n  tag_132\n    /* \"#utility.yul\":2365:2372   */\n  dup13\n    /* \"#utility.yul\":2356:2362   */\n  dup3\n    /* \"#utility.yul\":2345:2354   */\n  dup14\n    /* \"#utility.yul\":2341:2363   */\n  add\n    /* \"#utility.yul\":2309:2373   */\n  tag_78\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":2299:2373   */\n  swap5\n  pop\n    /* \"#utility.yul\":2253:2383   */\n  pop\n    /* \"#utility.yul\":2422:2425   */\n  0xc0\n    /* \"#utility.yul\":2449:2513   */\n  tag_133\n    /* \"#utility.yul\":2505:2512   */\n  dup13\n    /* \"#utility.yul\":2496:2502   */\n  dup3\n    /* \"#utility.yul\":2485:2494   */\n  dup14\n    /* \"#utility.yul\":2481:2503   */\n  add\n    /* \"#utility.yul\":2449:2513   */\n  tag_78\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":2439:2513   */\n  swap4\n  pop\n    /* \"#utility.yul\":2393:2523   */\n  pop\n    /* \"#utility.yul\":2562:2565   */\n  0xe0\n    /* \"#utility.yul\":2589:2653   */\n  tag_134\n    /* \"#utility.yul\":2645:2652   */\n  dup13\n    /* \"#utility.yul\":2636:2642   */\n  dup3\n    /* \"#utility.yul\":2625:2634   */\n  dup14\n    /* \"#utility.yul\":2621:2643   */\n  add\n    /* \"#utility.yul\":2589:2653   */\n  tag_78\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":2579:2653   */\n  swap3\n  pop\n    /* \"#utility.yul\":2533:2663   */\n  pop\n    /* \"#utility.yul\":2702:2705   */\n  0x0100\n    /* \"#utility.yul\":2729:2793   */\n  tag_135\n    /* \"#utility.yul\":2785:2792   */\n  dup13\n    /* \"#utility.yul\":2776:2782   */\n  dup3\n    /* \"#utility.yul\":2765:2774   */\n  dup14\n    /* \"#utility.yul\":2761:2783   */\n  add\n    /* \"#utility.yul\":2729:2793   */\n  tag_78\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2719:2793   */\n  swap2\n  pop\n    /* \"#utility.yul\":2673:2803   */\n  pop\n    /* \"#utility.yul\":1205:2810   */\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  jump\t// out\n    /* \"#utility.yul\":2816:2915   */\ntag_79:\n    /* \"#utility.yul\":2868:2874   */\n  0x00\n    /* \"#utility.yul\":2902:2907   */\n  dup2\n    /* \"#utility.yul\":2896:2908   */\n  mload\n    /* \"#utility.yul\":2886:2908   */\n  swap1\n  pop\n    /* \"#utility.yul\":2816:2915   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2921:3101   */\ntag_80:\n    /* \"#utility.yul\":2969:3046   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2966:2967   */\n  0x00\n    /* \"#utility.yul\":2959:3047   */\n  mstore\n    /* \"#utility.yul\":3066:3070   */\n  0x41\n    /* \"#utility.yul\":3063:3064   */\n  0x04\n    /* \"#utility.yul\":3056:3071   */\n  mstore\n    /* \"#utility.yul\":3090:3094   */\n  0x24\n    /* \"#utility.yul\":3087:3088   */\n  0x00\n    /* \"#utility.yul\":3080:3095   */\n  revert\n    /* \"#utility.yul\":3107:3287   */\ntag_81:\n    /* \"#utility.yul\":3155:3232   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3152:3153   */\n  0x00\n    /* \"#utility.yul\":3145:3233   */\n  mstore\n    /* \"#utility.yul\":3252:3256   */\n  0x22\n    /* \"#utility.yul\":3249:3250   */\n  0x04\n    /* \"#utility.yul\":3242:3257   */\n  mstore\n    /* \"#utility.yul\":3276:3280   */\n  0x24\n    /* \"#utility.yul\":3273:3274   */\n  0x00\n    /* \"#utility.yul\":3266:3281   */\n  revert\n    /* \"#utility.yul\":3293:3613   */\ntag_82:\n    /* \"#utility.yul\":3337:3343   */\n  0x00\n    /* \"#utility.yul\":3374:3375   */\n  0x02\n    /* \"#utility.yul\":3368:3372   */\n  dup3\n    /* \"#utility.yul\":3364:3376   */\n  div\n    /* \"#utility.yul\":3354:3376   */\n  swap1\n  pop\n    /* \"#utility.yul\":3421:3422   */\n  0x01\n    /* \"#utility.yul\":3415:3419   */\n  dup3\n    /* \"#utility.yul\":3411:3423   */\n  and\n    /* \"#utility.yul\":3442:3460   */\n  dup1\n    /* \"#utility.yul\":3432:3513   */\n  tag_140\n  jumpi\n    /* \"#utility.yul\":3498:3502   */\n  0x7f\n    /* \"#utility.yul\":3490:3496   */\n  dup3\n    /* \"#utility.yul\":3486:3503   */\n  and\n    /* \"#utility.yul\":3476:3503   */\n  swap2\n  pop\n    /* \"#utility.yul\":3432:3513   */\ntag_140:\n    /* \"#utility.yul\":3560:3562   */\n  0x20\n    /* \"#utility.yul\":3552:3558   */\n  dup3\n    /* \"#utility.yul\":3549:3563   */\n  lt\n    /* \"#utility.yul\":3529:3547   */\n  dup2\n    /* \"#utility.yul\":3526:3564   */\n  sub\n    /* \"#utility.yul\":3523:3607   */\n  tag_141\n  jumpi\n    /* \"#utility.yul\":3579:3597   */\n  tag_142\n  tag_81\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":3523:3607   */\ntag_141:\n    /* \"#utility.yul\":3344:3613   */\n  pop\n    /* \"#utility.yul\":3293:3613   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3619:3760   */\ntag_83:\n    /* \"#utility.yul\":3668:3672   */\n  0x00\n    /* \"#utility.yul\":3691:3694   */\n  dup2\n    /* \"#utility.yul\":3683:3694   */\n  swap1\n  pop\n    /* \"#utility.yul\":3714:3717   */\n  dup2\n    /* \"#utility.yul\":3711:3712   */\n  0x00\n    /* \"#utility.yul\":3704:3718   */\n  mstore\n    /* \"#utility.yul\":3748:3752   */\n  0x20\n    /* \"#utility.yul\":3745:3746   */\n  0x00\n    /* \"#utility.yul\":3735:3753   */\n  keccak256\n    /* \"#utility.yul\":3727:3753   */\n  swap1\n  pop\n    /* \"#utility.yul\":3619:3760   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3766:3859   */\ntag_84:\n    /* \"#utility.yul\":3803:3809   */\n  0x00\n    /* \"#utility.yul\":3850:3852   */\n  0x20\n    /* \"#utility.yul\":3845:3847   */\n  0x1f\n    /* \"#utility.yul\":3838:3843   */\n  dup4\n    /* \"#utility.yul\":3834:3848   */\n  add\n    /* \"#utility.yul\":3830:3853   */\n  div\n    /* \"#utility.yul\":3820:3853   */\n  swap1\n  pop\n    /* \"#utility.yul\":3766:3859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3865:3972   */\ntag_85:\n    /* \"#utility.yul\":3909:3917   */\n  0x00\n    /* \"#utility.yul\":3959:3964   */\n  dup3\n    /* \"#utility.yul\":3953:3957   */\n  dup3\n    /* \"#utility.yul\":3949:3965   */\n  shl\n    /* \"#utility.yul\":3928:3965   */\n  swap1\n  pop\n    /* \"#utility.yul\":3865:3972   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3978:4371   */\ntag_86:\n    /* \"#utility.yul\":4047:4053   */\n  0x00\n    /* \"#utility.yul\":4097:4098   */\n  0x08\n    /* \"#utility.yul\":4085:4095   */\n  dup4\n    /* \"#utility.yul\":4081:4099   */\n  mul\n    /* \"#utility.yul\":4120:4217   */\n  tag_147\n    /* \"#utility.yul\":4150:4216   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4139:4148   */\n  dup3\n    /* \"#utility.yul\":4120:4217   */\n  tag_85\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":4238:4277   */\n  tag_148\n    /* \"#utility.yul\":4268:4276   */\n  dup7\n    /* \"#utility.yul\":4257:4266   */\n  dup4\n    /* \"#utility.yul\":4238:4277   */\n  tag_85\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":4226:4277   */\n  swap6\n  pop\n    /* \"#utility.yul\":4310:4314   */\n  dup1\n    /* \"#utility.yul\":4306:4315   */\n  not\n    /* \"#utility.yul\":4299:4304   */\n  dup5\n    /* \"#utility.yul\":4295:4316   */\n  and\n    /* \"#utility.yul\":4286:4316   */\n  swap4\n  pop\n    /* \"#utility.yul\":4359:4363   */\n  dup1\n    /* \"#utility.yul\":4349:4357   */\n  dup7\n    /* \"#utility.yul\":4345:4364   */\n  and\n    /* \"#utility.yul\":4338:4343   */\n  dup5\n    /* \"#utility.yul\":4335:4365   */\n  or\n    /* \"#utility.yul\":4325:4365   */\n  swap3\n  pop\n    /* \"#utility.yul\":4054:4371   */\n  pop\n  pop\n    /* \"#utility.yul\":3978:4371   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4377:4437   */\ntag_87:\n    /* \"#utility.yul\":4405:4408   */\n  0x00\n    /* \"#utility.yul\":4426:4431   */\n  dup2\n    /* \"#utility.yul\":4419:4431   */\n  swap1\n  pop\n    /* \"#utility.yul\":4377:4437   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4443:4585   */\ntag_88:\n    /* \"#utility.yul\":4493:4502   */\n  0x00\n    /* \"#utility.yul\":4526:4579   */\n  tag_151\n    /* \"#utility.yul\":4544:4578   */\n  tag_152\n    /* \"#utility.yul\":4553:4577   */\n  tag_153\n    /* \"#utility.yul\":4571:4576   */\n  dup5\n    /* \"#utility.yul\":4553:4577   */\n  tag_76\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":4544:4578   */\n  tag_87\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":4526:4579   */\n  tag_76\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":4513:4579   */\n  swap1\n  pop\n    /* \"#utility.yul\":4443:4585   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4591:4666   */\ntag_89:\n    /* \"#utility.yul\":4634:4637   */\n  0x00\n    /* \"#utility.yul\":4655:4660   */\n  dup2\n    /* \"#utility.yul\":4648:4660   */\n  swap1\n  pop\n    /* \"#utility.yul\":4591:4666   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4672:4941   */\ntag_90:\n    /* \"#utility.yul\":4782:4821   */\n  tag_156\n    /* \"#utility.yul\":4813:4820   */\n  dup4\n    /* \"#utility.yul\":4782:4821   */\n  tag_88\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":4843:4934   */\n  tag_157\n    /* \"#utility.yul\":4892:4933   */\n  tag_158\n    /* \"#utility.yul\":4916:4932   */\n  dup3\n    /* \"#utility.yul\":4892:4933   */\n  tag_89\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":4884:4890   */\n  dup5\n    /* \"#utility.yul\":4877:4881   */\n  dup5\n    /* \"#utility.yul\":4871:4882   */\n  sload\n    /* \"#utility.yul\":4843:4934   */\n  tag_86\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":4837:4841   */\n  dup3\n    /* \"#utility.yul\":4830:4935   */\n  sstore\n    /* \"#utility.yul\":4748:4941   */\n  pop\n    /* \"#utility.yul\":4672:4941   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4947:5020   */\ntag_91:\n    /* \"#utility.yul\":4992:4995   */\n  0x00\n    /* \"#utility.yul\":4947:5020   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5026:5215   */\ntag_92:\n    /* \"#utility.yul\":5103:5135   */\n  tag_161\n  tag_91\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":5144:5209   */\n  tag_162\n    /* \"#utility.yul\":5202:5208   */\n  dup2\n    /* \"#utility.yul\":5194:5200   */\n  dup5\n    /* \"#utility.yul\":5188:5192   */\n  dup5\n    /* \"#utility.yul\":5144:5209   */\n  tag_90\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5079:5215   */\n  pop\n    /* \"#utility.yul\":5026:5215   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5221:5407   */\ntag_93:\n    /* \"#utility.yul\":5281:5401   */\ntag_164:\n    /* \"#utility.yul\":5298:5301   */\n  dup2\n    /* \"#utility.yul\":5291:5296   */\n  dup2\n    /* \"#utility.yul\":5288:5302   */\n  lt\n    /* \"#utility.yul\":5281:5401   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":5352:5391   */\n  tag_167\n    /* \"#utility.yul\":5389:5390   */\n  0x00\n    /* \"#utility.yul\":5382:5387   */\n  dup3\n    /* \"#utility.yul\":5352:5391   */\n  tag_92\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":5325:5326   */\n  0x01\n    /* \"#utility.yul\":5318:5323   */\n  dup2\n    /* \"#utility.yul\":5314:5327   */\n  add\n    /* \"#utility.yul\":5305:5327   */\n  swap1\n  pop\n    /* \"#utility.yul\":5281:5401   */\n  jump(tag_164)\ntag_166:\n    /* \"#utility.yul\":5221:5407   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5413:5956   */\ntag_94:\n    /* \"#utility.yul\":5514:5516   */\n  0x1f\n    /* \"#utility.yul\":5509:5512   */\n  dup3\n    /* \"#utility.yul\":5506:5517   */\n  gt\n    /* \"#utility.yul\":5503:5949   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":5548:5586   */\n  tag_170\n    /* \"#utility.yul\":5580:5585   */\n  dup2\n    /* \"#utility.yul\":5548:5586   */\n  tag_83\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":5632:5661   */\n  tag_171\n    /* \"#utility.yul\":5650:5660   */\n  dup5\n    /* \"#utility.yul\":5632:5661   */\n  tag_84\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":5622:5630   */\n  dup2\n    /* \"#utility.yul\":5618:5662   */\n  add\n    /* \"#utility.yul\":5815:5817   */\n  0x20\n    /* \"#utility.yul\":5803:5813   */\n  dup6\n    /* \"#utility.yul\":5800:5818   */\n  lt\n    /* \"#utility.yul\":5797:5846   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":5836:5844   */\n  dup2\n    /* \"#utility.yul\":5821:5844   */\n  swap1\n  pop\n    /* \"#utility.yul\":5797:5846   */\ntag_172:\n    /* \"#utility.yul\":5859:5939   */\n  tag_173\n    /* \"#utility.yul\":5915:5937   */\n  tag_174\n    /* \"#utility.yul\":5933:5936   */\n  dup6\n    /* \"#utility.yul\":5915:5937   */\n  tag_84\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":5905:5913   */\n  dup4\n    /* \"#utility.yul\":5901:5938   */\n  add\n    /* \"#utility.yul\":5888:5899   */\n  dup3\n    /* \"#utility.yul\":5859:5939   */\n  tag_93\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":5518:5949   */\n  pop\n  pop\n    /* \"#utility.yul\":5503:5949   */\ntag_169:\n    /* \"#utility.yul\":5413:5956   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5962:6079   */\ntag_95:\n    /* \"#utility.yul\":6016:6024   */\n  0x00\n    /* \"#utility.yul\":6066:6071   */\n  dup3\n    /* \"#utility.yul\":6060:6064   */\n  dup3\n    /* \"#utility.yul\":6056:6072   */\n  shr\n    /* \"#utility.yul\":6035:6072   */\n  swap1\n  pop\n    /* \"#utility.yul\":5962:6079   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6085:6254   */\ntag_96:\n    /* \"#utility.yul\":6129:6135   */\n  0x00\n    /* \"#utility.yul\":6162:6213   */\n  tag_177\n    /* \"#utility.yul\":6210:6211   */\n  0x00\n    /* \"#utility.yul\":6206:6212   */\n  not\n    /* \"#utility.yul\":6198:6203   */\n  dup5\n    /* \"#utility.yul\":6195:6196   */\n  0x08\n    /* \"#utility.yul\":6191:6204   */\n  mul\n    /* \"#utility.yul\":6162:6213   */\n  tag_95\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6158:6214   */\n  not\n    /* \"#utility.yul\":6243:6247   */\n  dup1\n    /* \"#utility.yul\":6237:6241   */\n  dup4\n    /* \"#utility.yul\":6233:6248   */\n  and\n    /* \"#utility.yul\":6223:6248   */\n  swap2\n  pop\n    /* \"#utility.yul\":6136:6254   */\n  pop\n    /* \"#utility.yul\":6085:6254   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6259:6554   */\ntag_97:\n    /* \"#utility.yul\":6335:6339   */\n  0x00\n    /* \"#utility.yul\":6481:6510   */\n  tag_179\n    /* \"#utility.yul\":6506:6509   */\n  dup4\n    /* \"#utility.yul\":6500:6504   */\n  dup4\n    /* \"#utility.yul\":6481:6510   */\n  tag_96\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":6473:6510   */\n  swap2\n  pop\n    /* \"#utility.yul\":6543:6546   */\n  dup3\n    /* \"#utility.yul\":6540:6541   */\n  0x02\n    /* \"#utility.yul\":6536:6547   */\n  mul\n    /* \"#utility.yul\":6530:6534   */\n  dup3\n    /* \"#utility.yul\":6527:6548   */\n  or\n    /* \"#utility.yul\":6519:6548   */\n  swap1\n  pop\n    /* \"#utility.yul\":6259:6554   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6559:7954   */\ntag_9:\n    /* \"#utility.yul\":6676:6713   */\n  tag_181\n    /* \"#utility.yul\":6709:6712   */\n  dup3\n    /* \"#utility.yul\":6676:6713   */\n  tag_79\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":6778:6796   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6770:6776   */\n  dup2\n    /* \"#utility.yul\":6767:6797   */\n  gt\n    /* \"#utility.yul\":6764:6820   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":6800:6818   */\n  tag_183\n  tag_80\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":6764:6820   */\ntag_182:\n    /* \"#utility.yul\":6844:6882   */\n  tag_184\n    /* \"#utility.yul\":6876:6880   */\n  dup3\n    /* \"#utility.yul\":6870:6881   */\n  sload\n    /* \"#utility.yul\":6844:6882   */\n  tag_82\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":6929:6996   */\n  tag_185\n    /* \"#utility.yul\":6989:6995   */\n  dup3\n    /* \"#utility.yul\":6981:6987   */\n  dup3\n    /* \"#utility.yul\":6975:6979   */\n  dup6\n    /* \"#utility.yul\":6929:6996   */\n  tag_94\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":7023:7024   */\n  0x00\n    /* \"#utility.yul\":7047:7051   */\n  0x20\n    /* \"#utility.yul\":7034:7051   */\n  swap1\n  pop\n    /* \"#utility.yul\":7079:7081   */\n  0x1f\n    /* \"#utility.yul\":7071:7077   */\n  dup4\n    /* \"#utility.yul\":7068:7082   */\n  gt\n    /* \"#utility.yul\":7096:7097   */\n  0x01\n    /* \"#utility.yul\":7091:7709   */\n  dup2\n  eq\n  tag_187\n  jumpi\n    /* \"#utility.yul\":7753:7754   */\n  0x00\n    /* \"#utility.yul\":7770:7776   */\n  dup5\n    /* \"#utility.yul\":7767:7844   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":7819:7828   */\n  dup3\n    /* \"#utility.yul\":7814:7817   */\n  dup8\n    /* \"#utility.yul\":7810:7829   */\n  add\n    /* \"#utility.yul\":7804:7830   */\n  mload\n    /* \"#utility.yul\":7795:7830   */\n  swap1\n  pop\n    /* \"#utility.yul\":7767:7844   */\ntag_188:\n    /* \"#utility.yul\":7870:7937   */\n  tag_189\n    /* \"#utility.yul\":7930:7936   */\n  dup6\n    /* \"#utility.yul\":7923:7928   */\n  dup3\n    /* \"#utility.yul\":7870:7937   */\n  tag_97\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":7864:7868   */\n  dup7\n    /* \"#utility.yul\":7857:7938   */\n  sstore\n    /* \"#utility.yul\":7726:7948   */\n  pop\n    /* \"#utility.yul\":7061:7948   */\n  jump(tag_186)\n    /* \"#utility.yul\":7091:7709   */\ntag_187:\n    /* \"#utility.yul\":7143:7147   */\n  0x1f\n    /* \"#utility.yul\":7139:7148   */\n  not\n    /* \"#utility.yul\":7131:7137   */\n  dup5\n    /* \"#utility.yul\":7127:7149   */\n  and\n    /* \"#utility.yul\":7177:7214   */\n  tag_190\n    /* \"#utility.yul\":7209:7213   */\n  dup7\n    /* \"#utility.yul\":7177:7214   */\n  tag_83\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7236:7237   */\n  0x00\n    /* \"#utility.yul\":7250:7458   */\ntag_191:\n    /* \"#utility.yul\":7264:7271   */\n  dup3\n    /* \"#utility.yul\":7261:7262   */\n  dup2\n    /* \"#utility.yul\":7258:7272   */\n  lt\n    /* \"#utility.yul\":7250:7458   */\n  iszero\n  tag_193\n  jumpi\n    /* \"#utility.yul\":7343:7352   */\n  dup5\n    /* \"#utility.yul\":7338:7341   */\n  dup10\n    /* \"#utility.yul\":7334:7353   */\n  add\n    /* \"#utility.yul\":7328:7354   */\n  mload\n    /* \"#utility.yul\":7320:7326   */\n  dup3\n    /* \"#utility.yul\":7313:7355   */\n  sstore\n    /* \"#utility.yul\":7394:7395   */\n  0x01\n    /* \"#utility.yul\":7386:7392   */\n  dup3\n    /* \"#utility.yul\":7382:7396   */\n  add\n    /* \"#utility.yul\":7372:7396   */\n  swap2\n  pop\n    /* \"#utility.yul\":7441:7443   */\n  0x20\n    /* \"#utility.yul\":7430:7439   */\n  dup6\n    /* \"#utility.yul\":7426:7444   */\n  add\n    /* \"#utility.yul\":7413:7444   */\n  swap5\n  pop\n    /* \"#utility.yul\":7287:7291   */\n  0x20\n    /* \"#utility.yul\":7284:7285   */\n  dup2\n    /* \"#utility.yul\":7280:7292   */\n  add\n    /* \"#utility.yul\":7275:7292   */\n  swap1\n  pop\n    /* \"#utility.yul\":7250:7458   */\n  jump(tag_191)\ntag_193:\n    /* \"#utility.yul\":7486:7492   */\n  dup7\n    /* \"#utility.yul\":7477:7484   */\n  dup4\n    /* \"#utility.yul\":7474:7493   */\n  lt\n    /* \"#utility.yul\":7471:7650   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":7544:7553   */\n  dup5\n    /* \"#utility.yul\":7539:7542   */\n  dup10\n    /* \"#utility.yul\":7535:7554   */\n  add\n    /* \"#utility.yul\":7529:7555   */\n  mload\n    /* \"#utility.yul\":7587:7635   */\n  tag_195\n    /* \"#utility.yul\":7629:7633   */\n  0x1f\n    /* \"#utility.yul\":7621:7627   */\n  dup10\n    /* \"#utility.yul\":7617:7634   */\n  and\n    /* \"#utility.yul\":7606:7615   */\n  dup3\n    /* \"#utility.yul\":7587:7635   */\n  tag_96\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":7579:7585   */\n  dup4\n    /* \"#utility.yul\":7572:7636   */\n  sstore\n    /* \"#utility.yul\":7494:7650   */\n  pop\n    /* \"#utility.yul\":7471:7650   */\ntag_194:\n    /* \"#utility.yul\":7696:7697   */\n  0x01\n    /* \"#utility.yul\":7692:7693   */\n  0x02\n    /* \"#utility.yul\":7684:7690   */\n  dup9\n    /* \"#utility.yul\":7680:7694   */\n  mul\n    /* \"#utility.yul\":7676:7698   */\n  add\n    /* \"#utility.yul\":7670:7674   */\n  dup9\n    /* \"#utility.yul\":7663:7699   */\n  sstore\n    /* \"#utility.yul\":7098:7709   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7061:7948   */\ntag_186:\n  pop\n    /* \"#utility.yul\":6651:7954   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6559:7954   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7960:8140   */\ntag_98:\n    /* \"#utility.yul\":8008:8085   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8005:8006   */\n  0x00\n    /* \"#utility.yul\":7998:8086   */\n  mstore\n    /* \"#utility.yul\":8105:8109   */\n  0x11\n    /* \"#utility.yul\":8102:8103   */\n  0x04\n    /* \"#utility.yul\":8095:8110   */\n  mstore\n    /* \"#utility.yul\":8129:8133   */\n  0x24\n    /* \"#utility.yul\":8126:8127   */\n  0x00\n    /* \"#utility.yul\":8119:8134   */\n  revert\n    /* \"#utility.yul\":8146:8248   */\ntag_99:\n    /* \"#utility.yul\":8188:8196   */\n  0x00\n    /* \"#utility.yul\":8235:8240   */\n  dup2\n    /* \"#utility.yul\":8232:8233   */\n  0x01\n    /* \"#utility.yul\":8228:8241   */\n  shr\n    /* \"#utility.yul\":8207:8241   */\n  swap1\n  pop\n    /* \"#utility.yul\":8146:8248   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8254:9102   */\ntag_100:\n    /* \"#utility.yul\":8315:8320   */\n  0x00\n    /* \"#utility.yul\":8322:8326   */\n  dup1\n    /* \"#utility.yul\":8346:8352   */\n  dup3\n    /* \"#utility.yul\":8337:8352   */\n  swap2\n  pop\n    /* \"#utility.yul\":8370:8375   */\n  dup4\n    /* \"#utility.yul\":8361:8375   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:9096   */\ntag_199:\n    /* \"#utility.yul\":8405:8406   */\n  0x01\n    /* \"#utility.yul\":8395:8403   */\n  dup6\n    /* \"#utility.yul\":8392:8407   */\n  gt\n    /* \"#utility.yul\":8384:9096   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":8500:8504   */\n  dup1\n    /* \"#utility.yul\":8495:8498   */\n  dup7\n    /* \"#utility.yul\":8491:8505   */\n  div\n    /* \"#utility.yul\":8485:8489   */\n  dup2\n    /* \"#utility.yul\":8482:8506   */\n  gt\n    /* \"#utility.yul\":8479:8529   */\n  iszero\n  tag_202\n  jumpi\n    /* \"#utility.yul\":8509:8527   */\n  tag_203\n  tag_98\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":8479:8529   */\ntag_202:\n    /* \"#utility.yul\":8559:8560   */\n  0x01\n    /* \"#utility.yul\":8549:8557   */\n  dup6\n    /* \"#utility.yul\":8545:8561   */\n  and\n    /* \"#utility.yul\":8542:8993   */\n  iszero\n  tag_204\n  jumpi\n    /* \"#utility.yul\":8974:8978   */\n  dup1\n    /* \"#utility.yul\":8967:8972   */\n  dup3\n    /* \"#utility.yul\":8963:8979   */\n  mul\n    /* \"#utility.yul\":8954:8979   */\n  swap2\n  pop\n    /* \"#utility.yul\":8542:8993   */\ntag_204:\n    /* \"#utility.yul\":9024:9028   */\n  dup1\n    /* \"#utility.yul\":9018:9022   */\n  dup2\n    /* \"#utility.yul\":9014:9029   */\n  mul\n    /* \"#utility.yul\":9006:9029   */\n  swap1\n  pop\n    /* \"#utility.yul\":9054:9086   */\n  tag_205\n    /* \"#utility.yul\":9077:9085   */\n  dup6\n    /* \"#utility.yul\":9054:9086   */\n  tag_99\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":9042:9086   */\n  swap5\n  pop\n    /* \"#utility.yul\":8384:9096   */\n  jump(tag_199)\ntag_201:\n    /* \"#utility.yul\":8254:9102   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9108:10181   */\ntag_101:\n    /* \"#utility.yul\":9162:9167   */\n  0x00\n    /* \"#utility.yul\":9353:9361   */\n  dup3\n    /* \"#utility.yul\":9343:9383   */\n  tag_207\n  jumpi\n    /* \"#utility.yul\":9374:9375   */\n  0x01\n    /* \"#utility.yul\":9365:9375   */\n  swap1\n  pop\n    /* \"#utility.yul\":9376:9381   */\n  jump(tag_206)\n    /* \"#utility.yul\":9343:9383   */\ntag_207:\n    /* \"#utility.yul\":9402:9406   */\n  dup2\n    /* \"#utility.yul\":9392:9428   */\n  tag_208\n  jumpi\n    /* \"#utility.yul\":9419:9420   */\n  0x00\n    /* \"#utility.yul\":9410:9420   */\n  swap1\n  pop\n    /* \"#utility.yul\":9421:9426   */\n  jump(tag_206)\n    /* \"#utility.yul\":9392:9428   */\ntag_208:\n    /* \"#utility.yul\":9488:9492   */\n  dup2\n    /* \"#utility.yul\":9536:9537   */\n  0x01\n    /* \"#utility.yul\":9531:9558   */\n  dup2\n  eq\n  tag_210\n  jumpi\n    /* \"#utility.yul\":9572:9573   */\n  0x02\n    /* \"#utility.yul\":9567:9758   */\n  dup2\n  eq\n  tag_211\n  jumpi\n    /* \"#utility.yul\":9481:9758   */\n  jump(tag_209)\n    /* \"#utility.yul\":9531:9558   */\ntag_210:\n    /* \"#utility.yul\":9549:9550   */\n  0x01\n    /* \"#utility.yul\":9540:9550   */\n  swap2\n  pop\n    /* \"#utility.yul\":9551:9556   */\n  pop\n  jump(tag_206)\n    /* \"#utility.yul\":9567:9758   */\ntag_211:\n    /* \"#utility.yul\":9612:9615   */\n  0xff\n    /* \"#utility.yul\":9602:9610   */\n  dup5\n    /* \"#utility.yul\":9599:9616   */\n  gt\n    /* \"#utility.yul\":9596:9639   */\n  iszero\n  tag_212\n  jumpi\n    /* \"#utility.yul\":9619:9637   */\n  tag_213\n  tag_98\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":9596:9639   */\ntag_212:\n    /* \"#utility.yul\":9668:9676   */\n  dup4\n    /* \"#utility.yul\":9665:9666   */\n  0x02\n    /* \"#utility.yul\":9661:9677   */\n  exp\n    /* \"#utility.yul\":9652:9677   */\n  swap2\n  pop\n    /* \"#utility.yul\":9703:9706   */\n  dup5\n    /* \"#utility.yul\":9696:9701   */\n  dup3\n    /* \"#utility.yul\":9693:9707   */\n  gt\n    /* \"#utility.yul\":9690:9730   */\n  iszero\n  tag_214\n  jumpi\n    /* \"#utility.yul\":9710:9728   */\n  tag_215\n  tag_98\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":9690:9730   */\ntag_214:\n    /* \"#utility.yul\":9743:9748   */\n  pop\n  jump(tag_206)\n    /* \"#utility.yul\":9481:9758   */\ntag_209:\n  pop\n    /* \"#utility.yul\":9867:9869   */\n  0x20\n    /* \"#utility.yul\":9857:9865   */\n  dup4\n    /* \"#utility.yul\":9854:9870   */\n  lt\n    /* \"#utility.yul\":9848:9851   */\n  0x0133\n    /* \"#utility.yul\":9842:9846   */\n  dup4\n    /* \"#utility.yul\":9839:9852   */\n  lt\n    /* \"#utility.yul\":9835:9871   */\n  and\n    /* \"#utility.yul\":9817:9819   */\n  0x4e\n    /* \"#utility.yul\":9807:9815   */\n  dup5\n    /* \"#utility.yul\":9804:9820   */\n  lt\n    /* \"#utility.yul\":9799:9801   */\n  0x0b\n    /* \"#utility.yul\":9793:9797   */\n  dup5\n    /* \"#utility.yul\":9790:9802   */\n  lt\n    /* \"#utility.yul\":9786:9821   */\n  and\n    /* \"#utility.yul\":9770:9881   */\n  or\n    /* \"#utility.yul\":9767:10013   */\n  iszero\n  tag_216\n  jumpi\n    /* \"#utility.yul\":9923:9931   */\n  dup3\n    /* \"#utility.yul\":9917:9921   */\n  dup3\n    /* \"#utility.yul\":9913:9932   */\n  exp\n    /* \"#utility.yul\":9904:9932   */\n  swap1\n  pop\n    /* \"#utility.yul\":9958:9961   */\n  dup4\n    /* \"#utility.yul\":9951:9956   */\n  dup2\n    /* \"#utility.yul\":9948:9962   */\n  gt\n    /* \"#utility.yul\":9945:9985   */\n  iszero\n  tag_217\n  jumpi\n    /* \"#utility.yul\":9965:9983   */\n  tag_218\n  tag_98\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":9945:9985   */\ntag_217:\n    /* \"#utility.yul\":9998:10003   */\n  jump(tag_206)\n    /* \"#utility.yul\":9767:10013   */\ntag_216:\n    /* \"#utility.yul\":10038:10080   */\n  tag_219\n    /* \"#utility.yul\":10076:10079   */\n  dup5\n    /* \"#utility.yul\":10066:10074   */\n  dup5\n    /* \"#utility.yul\":10060:10064   */\n  dup5\n    /* \"#utility.yul\":10057:10058   */\n  0x01\n    /* \"#utility.yul\":10038:10080   */\n  tag_100\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":10023:10080   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":10112:10116   */\n  dup2\n    /* \"#utility.yul\":10107:10110   */\n  dup5\n    /* \"#utility.yul\":10103:10117   */\n  div\n    /* \"#utility.yul\":10096:10101   */\n  dup2\n    /* \"#utility.yul\":10093:10118   */\n  gt\n    /* \"#utility.yul\":10090:10141   */\n  iszero\n  tag_220\n  jumpi\n    /* \"#utility.yul\":10121:10139   */\n  tag_221\n  tag_98\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":10090:10141   */\ntag_220:\n    /* \"#utility.yul\":10170:10174   */\n  dup2\n    /* \"#utility.yul\":10163:10168   */\n  dup2\n    /* \"#utility.yul\":10159:10175   */\n  mul\n    /* \"#utility.yul\":10150:10175   */\n  swap1\n  pop\n    /* \"#utility.yul\":9108:10181   */\ntag_206:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10187:10273   */\ntag_102:\n    /* \"#utility.yul\":10222:10229   */\n  0x00\n    /* \"#utility.yul\":10262:10266   */\n  0xff\n    /* \"#utility.yul\":10255:10260   */\n  dup3\n    /* \"#utility.yul\":10251:10267   */\n  and\n    /* \"#utility.yul\":10240:10267   */\n  swap1\n  pop\n    /* \"#utility.yul\":10187:10273   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10279:10560   */\ntag_20:\n    /* \"#utility.yul\":10337:10342   */\n  0x00\n    /* \"#utility.yul\":10361:10384   */\n  tag_224\n    /* \"#utility.yul\":10379:10383   */\n  dup3\n    /* \"#utility.yul\":10361:10384   */\n  tag_76\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":10353:10384   */\n  swap2\n  pop\n    /* \"#utility.yul\":10405:10430   */\n  tag_225\n    /* \"#utility.yul\":10421:10429   */\n  dup4\n    /* \"#utility.yul\":10405:10430   */\n  tag_102\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":10393:10430   */\n  swap3\n  pop\n    /* \"#utility.yul\":10449:10553   */\n  tag_226\n    /* \"#utility.yul\":10486:10552   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":10476:10484   */\n  dup5\n    /* \"#utility.yul\":10470:10474   */\n  dup5\n    /* \"#utility.yul\":10449:10553   */\n  tag_101\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":10440:10553   */\n  swap1\n  pop\n    /* \"#utility.yul\":10279:10560   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10566:10746   */\ntag_103:\n    /* \"#utility.yul\":10614:10691   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10611:10612   */\n  0x00\n    /* \"#utility.yul\":10604:10692   */\n  mstore\n    /* \"#utility.yul\":10711:10715   */\n  0x12\n    /* \"#utility.yul\":10708:10709   */\n  0x04\n    /* \"#utility.yul\":10701:10716   */\n  mstore\n    /* \"#utility.yul\":10735:10739   */\n  0x24\n    /* \"#utility.yul\":10732:10733   */\n  0x00\n    /* \"#utility.yul\":10725:10740   */\n  revert\n    /* \"#utility.yul\":10752:10937   */\ntag_22:\n    /* \"#utility.yul\":10792:10793   */\n  0x00\n    /* \"#utility.yul\":10809:10829   */\n  tag_229\n    /* \"#utility.yul\":10827:10828   */\n  dup3\n    /* \"#utility.yul\":10809:10829   */\n  tag_76\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":10804:10829   */\n  swap2\n  pop\n    /* \"#utility.yul\":10843:10863   */\n  tag_230\n    /* \"#utility.yul\":10861:10862   */\n  dup4\n    /* \"#utility.yul\":10843:10863   */\n  tag_76\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":10838:10863   */\n  swap3\n  pop\n    /* \"#utility.yul\":10882:10883   */\n  dup3\n    /* \"#utility.yul\":10872:10907   */\n  tag_231\n  jumpi\n    /* \"#utility.yul\":10887:10905   */\n  tag_232\n  tag_103\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":10872:10907   */\ntag_231:\n    /* \"#utility.yul\":10929:10930   */\n  dup3\n    /* \"#utility.yul\":10926:10927   */\n  dup3\n    /* \"#utility.yul\":10922:10931   */\n  div\n    /* \"#utility.yul\":10917:10931   */\n  swap1\n  pop\n    /* \"#utility.yul\":10752:10937   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10943:11353   */\ntag_24:\n    /* \"#utility.yul\":10983:10990   */\n  0x00\n    /* \"#utility.yul\":11006:11026   */\n  tag_234\n    /* \"#utility.yul\":11024:11025   */\n  dup3\n    /* \"#utility.yul\":11006:11026   */\n  tag_76\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":11001:11026   */\n  swap2\n  pop\n    /* \"#utility.yul\":11040:11060   */\n  tag_235\n    /* \"#utility.yul\":11058:11059   */\n  dup4\n    /* \"#utility.yul\":11040:11060   */\n  tag_76\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":11035:11060   */\n  swap3\n  pop\n    /* \"#utility.yul\":11095:11096   */\n  dup3\n    /* \"#utility.yul\":11092:11093   */\n  dup3\n    /* \"#utility.yul\":11088:11097   */\n  mul\n    /* \"#utility.yul\":11117:11147   */\n  tag_236\n    /* \"#utility.yul\":11135:11146   */\n  dup2\n    /* \"#utility.yul\":11117:11147   */\n  tag_76\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":11106:11147   */\n  swap2\n  pop\n    /* \"#utility.yul\":11296:11297   */\n  dup3\n    /* \"#utility.yul\":11287:11294   */\n  dup3\n    /* \"#utility.yul\":11283:11298   */\n  div\n    /* \"#utility.yul\":11280:11281   */\n  dup5\n    /* \"#utility.yul\":11277:11299   */\n  eq\n    /* \"#utility.yul\":11257:11258   */\n  dup4\n    /* \"#utility.yul\":11250:11259   */\n  iszero\n    /* \"#utility.yul\":11230:11313   */\n  or\n    /* \"#utility.yul\":11207:11346   */\n  tag_237\n  jumpi\n    /* \"#utility.yul\":11326:11344   */\n  tag_238\n  tag_98\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":11207:11346   */\ntag_237:\n    /* \"#utility.yul\":10991:11353   */\n  pop\n    /* \"#utility.yul\":10943:11353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11359:11477   */\ntag_104:\n    /* \"#utility.yul\":11446:11470   */\n  tag_240\n    /* \"#utility.yul\":11464:11469   */\n  dup2\n    /* \"#utility.yul\":11446:11470   */\n  tag_73\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":11441:11444   */\n  dup3\n    /* \"#utility.yul\":11434:11471   */\n  mstore\n    /* \"#utility.yul\":11359:11477   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11483:11705   */\ntag_38:\n    /* \"#utility.yul\":11576:11580   */\n  0x00\n    /* \"#utility.yul\":11614:11616   */\n  0x20\n    /* \"#utility.yul\":11603:11612   */\n  dup3\n    /* \"#utility.yul\":11599:11617   */\n  add\n    /* \"#utility.yul\":11591:11617   */\n  swap1\n  pop\n    /* \"#utility.yul\":11627:11698   */\n  tag_242\n    /* \"#utility.yul\":11695:11696   */\n  0x00\n    /* \"#utility.yul\":11684:11693   */\n  dup4\n    /* \"#utility.yul\":11680:11697   */\n  add\n    /* \"#utility.yul\":11671:11677   */\n  dup5\n    /* \"#utility.yul\":11627:11698   */\n  tag_104\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":11483:11705   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11711:11902   */\ntag_59:\n    /* \"#utility.yul\":11751:11754   */\n  0x00\n    /* \"#utility.yul\":11770:11790   */\n  tag_244\n    /* \"#utility.yul\":11788:11789   */\n  dup3\n    /* \"#utility.yul\":11770:11790   */\n  tag_76\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":11765:11790   */\n  swap2\n  pop\n    /* \"#utility.yul\":11804:11824   */\n  tag_245\n    /* \"#utility.yul\":11822:11823   */\n  dup4\n    /* \"#utility.yul\":11804:11824   */\n  tag_76\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":11799:11824   */\n  swap3\n  pop\n    /* \"#utility.yul\":11847:11848   */\n  dup3\n    /* \"#utility.yul\":11844:11845   */\n  dup3\n    /* \"#utility.yul\":11840:11849   */\n  add\n    /* \"#utility.yul\":11833:11849   */\n  swap1\n  pop\n    /* \"#utility.yul\":11868:11871   */\n  dup1\n    /* \"#utility.yul\":11865:11866   */\n  dup3\n    /* \"#utility.yul\":11862:11872   */\n  gt\n    /* \"#utility.yul\":11859:11895   */\n  iszero\n  tag_246\n  jumpi\n    /* \"#utility.yul\":11875:11893   */\n  tag_247\n  tag_98\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":11859:11895   */\ntag_246:\n    /* \"#utility.yul\":11711:11902   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11908:12026   */\ntag_105:\n    /* \"#utility.yul\":11995:12019   */\n  tag_249\n    /* \"#utility.yul\":12013:12018   */\n  dup2\n    /* \"#utility.yul\":11995:12019   */\n  tag_76\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":11990:11993   */\n  dup3\n    /* \"#utility.yul\":11983:12020   */\n  mstore\n    /* \"#utility.yul\":11908:12026   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12032:12474   */\ntag_63:\n    /* \"#utility.yul\":12181:12185   */\n  0x00\n    /* \"#utility.yul\":12219:12221   */\n  0x60\n    /* \"#utility.yul\":12208:12217   */\n  dup3\n    /* \"#utility.yul\":12204:12222   */\n  add\n    /* \"#utility.yul\":12196:12222   */\n  swap1\n  pop\n    /* \"#utility.yul\":12232:12303   */\n  tag_251\n    /* \"#utility.yul\":12300:12301   */\n  0x00\n    /* \"#utility.yul\":12289:12298   */\n  dup4\n    /* \"#utility.yul\":12285:12302   */\n  add\n    /* \"#utility.yul\":12276:12282   */\n  dup7\n    /* \"#utility.yul\":12232:12303   */\n  tag_104\n  jump\t// in\ntag_251:\n    /* \"#utility.yul\":12313:12385   */\n  tag_252\n    /* \"#utility.yul\":12381:12383   */\n  0x20\n    /* \"#utility.yul\":12370:12379   */\n  dup4\n    /* \"#utility.yul\":12366:12384   */\n  add\n    /* \"#utility.yul\":12357:12363   */\n  dup6\n    /* \"#utility.yul\":12313:12385   */\n  tag_105\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":12395:12467   */\n  tag_253\n    /* \"#utility.yul\":12463:12465   */\n  0x40\n    /* \"#utility.yul\":12452:12461   */\n  dup4\n    /* \"#utility.yul\":12448:12466   */\n  add\n    /* \"#utility.yul\":12439:12445   */\n  dup5\n    /* \"#utility.yul\":12395:12467   */\n  tag_105\n  jump\t// in\ntag_253:\n    /* \"#utility.yul\":12032:12474   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12480:12702   */\ntag_67:\n    /* \"#utility.yul\":12573:12577   */\n  0x00\n    /* \"#utility.yul\":12611:12613   */\n  0x20\n    /* \"#utility.yul\":12600:12609   */\n  dup3\n    /* \"#utility.yul\":12596:12614   */\n  add\n    /* \"#utility.yul\":12588:12614   */\n  swap1\n  pop\n    /* \"#utility.yul\":12624:12695   */\n  tag_255\n    /* \"#utility.yul\":12692:12693   */\n  0x00\n    /* \"#utility.yul\":12681:12690   */\n  dup4\n    /* \"#utility.yul\":12677:12694   */\n  add\n    /* \"#utility.yul\":12668:12674   */\n  dup5\n    /* \"#utility.yul\":12624:12695   */\n  tag_105\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":12480:12702   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyToken.sol\":373:3232  contract BonDeFiTokenSiemens is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {... */\ntag_26:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xa92a119aeb5e5432887b46772e423cfac2594bfdf681094c34bd022e8c31d0\")\n  0x00\n  assignImmutable(\"0xc6fa869c00cca07fff5e26638bf9bc331de0994499fcf1ee63eb1a2437869a1b\")\n  0x00\n  assignImmutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyToken.sol\":373:3232  contract BonDeFiTokenSiemens is ERC20, ERC20Burnable, ERC20Pausable, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79cc6790\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xa920260b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe091a39b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xec8eba14\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf57d283e\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xa920260b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xca19c11c\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xced0550f\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x95d89b41\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x992642e5\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x79cc6790\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x904835c4\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x2a0acc6a\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x3f4ba83a\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x2a0acc6a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x10002dbd\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x10002dbd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1392:1665  function buyBond(uint256 amountTokens) public{... */\n    tag_6:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":462:512  bytes32 public constant ADMIN = keccak256(\"ADMIN\") */\n    tag_10:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_11:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_12:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_13:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      stop\n        /* \"contracts/MyToken.sol\":1318:1387  function unpause() public onlyRole(ADMIN) {... */\n    tag_14:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_15:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_16:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_18:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/MyToken.sol\":1247:1312  function pause() public onlyRole(ADMIN) {... */\n    tag_19:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      stop\n        /* \"contracts/MyToken.sol\":1872:2277  function distributeInterestAll(address[] memory tokenHolders, uint256[] memory amounts) public onlyRole(ADMIN) {... */\n    tag_20:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n    tag_107:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_21:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_22:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":586:621  address public immutable stableCoin */\n    tag_23:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_24:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":670:703  uint256 public immutable unitSize */\n    tag_26:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":2614:2954  function claimFaceValue(uint256 amountTokens) public{... */\n    tag_27:\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      stop\n        /* \"contracts/MyToken.sol\":2282:2608  function claimInvestorFunds() public onlyRole(BOND_ISSUER){... */\n    tag_28:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_29:\n      tag_137\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n    tag_137:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_30:\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      tag_143\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":518:580  bytes32 public constant BOND_ISSUER = keccak256(\"BOND_ISSUER\") */\n    tag_31:\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":627:664  address public immutable interestCoin */\n    tag_32:\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1671:1867  function distributeInterest(address tokenHolder,uint256 amount) public onlyRole(ADMIN){... */\n    tag_33:\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n    tag_151:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_155\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_156\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_157\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_160\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1392:1665  function buyBond(uint256 amountTokens) public{... */\n    tag_59:\n        /* \"contracts/MyToken.sol\":1462:1472  stableCoin */\n      immutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n        /* \"contracts/MyToken.sol\":1455:1486  IERC20(stableCoin).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/MyToken.sol\":1487:1497  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1506:1510  this */\n      address\n        /* \"contracts/MyToken.sol\":1525:1533  unitSize */\n      immutable(\"0xa92a119aeb5e5432887b46772e423cfac2594bfdf681094c34bd022e8c31d0\")\n        /* \"contracts/MyToken.sol\":1512:1524  amountTokens */\n      dup6\n        /* \"contracts/MyToken.sol\":1512:1533  amountTokens*unitSize */\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"contracts/MyToken.sol\":1455:1534  IERC20(stableCoin).transferFrom(msg.sender,address(this),amountTokens*unitSize) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"contracts/MyToken.sol\":1447:1565  require(IERC20(stableCoin).transferFrom(msg.sender,address(this),amountTokens*unitSize),\"Stable coin transfer failed\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/MyToken.sol\":1589:1593  this */\n      address\n        /* \"contracts/MyToken.sol\":1583:1603  ERC20(this).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/MyToken.sol\":1604:1614  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1615:1627  amountTokens */\n      dup4\n        /* \"contracts/MyToken.sol\":1583:1628  ERC20(this).transfer(msg.sender,amountTokens) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_186:\n        /* \"contracts/MyToken.sol\":1575:1658  require(ERC20(this).transfer(msg.sender,amountTokens),\"Bond token transfer failed\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/MyToken.sol\":1392:1665  function buyBond(uint256 amountTokens) public{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":462:512  bytes32 public constant ADMIN = keccak256(\"ADMIN\") */\n    tag_76:\n        /* \"contracts/MyToken.sol\":494:512  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"contracts/MyToken.sol\":462:512  bytes32 public constant ADMIN = keccak256(\"ADMIN\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_198\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_200\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_203\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_204\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_203:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_209\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_210\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_209:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1318:1387  function unpause() public onlyRole(ADMIN) {... */\n    tag_90:\n        /* \"contracts/MyToken.sol\":494:512  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_212\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/MyToken.sol\":1370:1380  _unpause() */\n      tag_214\n        /* \"contracts/MyToken.sol\":1370:1378  _unpause */\n      tag_215\n        /* \"contracts/MyToken.sol\":1370:1380  _unpause() */\n      jump\t// in\n    tag_214:\n        /* \"contracts/MyToken.sol\":1318:1387  function unpause() public onlyRole(ADMIN) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1247:1312  function pause() public onlyRole(ADMIN) {... */\n    tag_106:\n        /* \"contracts/MyToken.sol\":494:512  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_227\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/MyToken.sol\":1297:1305  _pause() */\n      tag_229\n        /* \"contracts/MyToken.sol\":1297:1303  _pause */\n      tag_230\n        /* \"contracts/MyToken.sol\":1297:1305  _pause() */\n      jump\t// in\n    tag_229:\n        /* \"contracts/MyToken.sol\":1247:1312  function pause() public onlyRole(ADMIN) {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1872:2277  function distributeInterestAll(address[] memory tokenHolders, uint256[] memory amounts) public onlyRole(ADMIN) {... */\n    tag_110:\n        /* \"contracts/MyToken.sol\":494:512  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/MyToken.sol\":2024:2031  amounts */\n      dup2\n        /* \"contracts/MyToken.sol\":2024:2038  amounts.length */\n      mload\n        /* \"contracts/MyToken.sol\":2001:2013  tokenHolders */\n      dup4\n        /* \"contracts/MyToken.sol\":2001:2020  tokenHolders.length */\n      mload\n        /* \"contracts/MyToken.sol\":2001:2038  tokenHolders.length == amounts.length */\n      eq\n        /* \"contracts/MyToken.sol\":1993:2084  require(tokenHolders.length == amounts.length, \"Token holders and amounts length mismatch\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"contracts/MyToken.sol\":2099:2108  uint256 i */\n      0x00\n        /* \"contracts/MyToken.sol\":2094:2271  for (uint256 i = 0; i < tokenHolders.length; i++) {... */\n    tag_237:\n        /* \"contracts/MyToken.sol\":2118:2130  tokenHolders */\n      dup4\n        /* \"contracts/MyToken.sol\":2118:2137  tokenHolders.length */\n      mload\n        /* \"contracts/MyToken.sol\":2114:2115  i */\n      dup2\n        /* \"contracts/MyToken.sol\":2114:2137  i < tokenHolders.length */\n      lt\n        /* \"contracts/MyToken.sol\":2094:2271  for (uint256 i = 0; i < tokenHolders.length; i++) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"contracts/MyToken.sol\":2173:2185  interestCoin */\n      immutable(\"0xc6fa869c00cca07fff5e26638bf9bc331de0994499fcf1ee63eb1a2437869a1b\")\n        /* \"contracts/MyToken.sol\":2166:2199  IERC20(interestCoin).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/MyToken.sol\":2200:2210  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2212:2224  tokenHolders */\n      dup7\n        /* \"contracts/MyToken.sol\":2225:2226  i */\n      dup5\n        /* \"contracts/MyToken.sol\":2212:2227  tokenHolders[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_240\n      jumpi\n      tag_241\n      tag_242\n      jump\t// in\n    tag_241:\n    tag_240:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/MyToken.sol\":2229:2236  amounts */\n      dup7\n        /* \"contracts/MyToken.sol\":2237:2238  i */\n      dup6\n        /* \"contracts/MyToken.sol\":2229:2239  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_243\n      jumpi\n      tag_244\n      tag_242\n      jump\t// in\n    tag_244:\n    tag_243:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/MyToken.sol\":2166:2240  IERC20(interestCoin).transferFrom(msg.sender, tokenHolders[i], amounts[i]) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_245:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_248:\n        /* \"contracts/MyToken.sol\":2158:2260  require(IERC20(interestCoin).transferFrom(msg.sender, tokenHolders[i], amounts[i]), \"Transfer failed\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_249:\n        /* \"contracts/MyToken.sol\":2139:2142  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/MyToken.sol\":2094:2271  for (uint256 i = 0; i < tokenHolders.length; i++) {... */\n      jump(tag_237)\n    tag_238:\n      pop\n        /* \"contracts/MyToken.sol\":1872:2277  function distributeInterestAll(address[] memory tokenHolders, uint256[] memory amounts) public onlyRole(ADMIN) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_254\n      swap1\n      tag_160\n      jump\t// in\n    tag_254:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_255\n      swap1\n      tag_160\n      jump\t// in\n    tag_255:\n      dup1\n      iszero\n      tag_256\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_257\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_256)\n    tag_257:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_258:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_258\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_256:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":586:621  address public immutable stableCoin */\n    tag_119:\n      immutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_260\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":670:703  uint256 public immutable unitSize */\n    tag_130:\n      immutable(\"0xa92a119aeb5e5432887b46772e423cfac2594bfdf681094c34bd022e8c31d0\")\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2614:2954  function claimFaceValue(uint256 amountTokens) public{... */\n    tag_134:\n        /* \"contracts/MyToken.sol\":2699:2700  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":2684:2696  amountTokens */\n      dup2\n        /* \"contracts/MyToken.sol\":2684:2700  amountTokens > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":2676:2726  require(amountTokens > 0,\"Can't claim zero coins\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_263:\n        /* \"contracts/MyToken.sol\":2750:2754  this */\n      address\n        /* \"contracts/MyToken.sol\":2744:2768  ERC20(this).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/MyToken.sol\":2769:2779  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2788:2792  this */\n      address\n        /* \"contracts/MyToken.sol\":2794:2806  amountTokens */\n      dup5\n        /* \"contracts/MyToken.sol\":2744:2807  ERC20(this).transferFrom(msg.sender,address(this),amountTokens) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_266:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_268:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_269\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_269:\n        /* \"contracts/MyToken.sol\":2736:2837  require(ERC20(this).transferFrom(msg.sender,address(this),amountTokens),\"Bond token transfer failed\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap1\n      tag_189\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_270:\n        /* \"contracts/MyToken.sol\":2862:2872  stableCoin */\n      immutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n        /* \"contracts/MyToken.sol\":2855:2882  IERC20(stableCoin).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/MyToken.sol\":2883:2893  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2907:2915  unitSize */\n      immutable(\"0xa92a119aeb5e5432887b46772e423cfac2594bfdf681094c34bd022e8c31d0\")\n        /* \"contracts/MyToken.sol\":2894:2906  amountTokens */\n      dup5\n        /* \"contracts/MyToken.sol\":2894:2915  amountTokens*unitSize */\n      tag_272\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_272:\n        /* \"contracts/MyToken.sol\":2855:2916  IERC20(stableCoin).transfer(msg.sender,amountTokens*unitSize) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_273:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_275:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_276\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_276:\n        /* \"contracts/MyToken.sol\":2847:2947  require(IERC20(stableCoin).transfer(msg.sender,amountTokens*unitSize),\"Stable coin transfer failed\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_181\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"contracts/MyToken.sol\":2614:2954  function claimFaceValue(uint256 amountTokens) public{... */\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2282:2608  function claimInvestorFunds() public onlyRole(BOND_ISSUER){... */\n    tag_136:\n        /* \"contracts/MyToken.sol\":556:580  keccak256(\"BOND_ISSUER\") */\n      0xf877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_280\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/MyToken.sol\":2350:2377  uint256 amountInvestorCoins */\n      0x00\n        /* \"contracts/MyToken.sol\":2387:2397  stableCoin */\n      immutable(\"0x560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6\")\n        /* \"contracts/MyToken.sol\":2380:2408  IERC20(stableCoin).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/MyToken.sol\":2417:2421  this */\n      address\n        /* \"contracts/MyToken.sol\":2380:2423  IERC20(stableCoin).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_282:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_284:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_285\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n        /* \"contracts/MyToken.sol\":2350:2423  uint256 amountInvestorCoins = IERC20(stableCoin).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":2463:2464  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":2441:2460  amountInvestorCoins */\n      dup2\n        /* \"contracts/MyToken.sol\":2441:2464  amountInvestorCoins > 0 */\n      gt\n        /* \"contracts/MyToken.sol\":2433:2496  require(amountInvestorCoins > 0,\"No investor funds available.\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_287:\n        /* \"contracts/MyToken.sol\":2520:2524  this */\n      address\n        /* \"contracts/MyToken.sol\":2514:2534  ERC20(this).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/MyToken.sol\":2535:2545  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2546:2565  amountInvestorCoins */\n      dup4\n        /* \"contracts/MyToken.sol\":2514:2566  ERC20(this).transfer(msg.sender,amountInvestorCoins) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_290:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_292\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_292:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_293\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_293:\n        /* \"contracts/MyToken.sol\":2506:2601  require(ERC20(this).transfer(msg.sender,amountInvestorCoins),\"Failed to transfer stable coins\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"contracts/MyToken.sol\":2340:2608  {... */\n      pop\n        /* \"contracts/MyToken.sol\":2282:2608  function claimInvestorFunds() public onlyRole(BOND_ISSUER){... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_297\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_299\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_301\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_210\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_301:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":518:580  bytes32 public constant BOND_ISSUER = keccak256(\"BOND_ISSUER\") */\n    tag_146:\n        /* \"contracts/MyToken.sol\":556:580  keccak256(\"BOND_ISSUER\") */\n      0xf877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7\n        /* \"contracts/MyToken.sol\":518:580  bytes32 public constant BOND_ISSUER = keccak256(\"BOND_ISSUER\") */\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":627:664  address public immutable interestCoin */\n    tag_149:\n      immutable(\"0xc6fa869c00cca07fff5e26638bf9bc331de0994499fcf1ee63eb1a2437869a1b\")\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1671:1867  function distributeInterest(address tokenHolder,uint256 amount) public onlyRole(ADMIN){... */\n    tag_153:\n        /* \"contracts/MyToken.sol\":494:512  keccak256(\"ADMIN\") */\n      0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_304\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_304:\n        /* \"contracts/MyToken.sol\":1782:1794  interestCoin */\n      immutable(\"0xc6fa869c00cca07fff5e26638bf9bc331de0994499fcf1ee63eb1a2437869a1b\")\n        /* \"contracts/MyToken.sol\":1775:1808  IERC20(interestCoin).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/MyToken.sol\":1809:1821  interestCoin */\n      immutable(\"0xc6fa869c00cca07fff5e26638bf9bc331de0994499fcf1ee63eb1a2437869a1b\")\n        /* \"contracts/MyToken.sol\":1822:1833  tokenHolder */\n      dup6\n        /* \"contracts/MyToken.sol\":1834:1840  amount */\n      dup6\n        /* \"contracts/MyToken.sol\":1775:1841  IERC20(interestCoin).transferFrom(interestCoin,tokenHolder,amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_306:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_308\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_308:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_309\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_309:\n        /* \"contracts/MyToken.sol\":1767:1860  require(IERC20(interestCoin).transferFrom(interestCoin,tokenHolder,amount),\"Transfer failed\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap1\n      tag_251\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_310:\n        /* \"contracts/MyToken.sol\":1671:1867  function distributeInterest(address tokenHolder,uint256 amount) public onlyRole(ADMIN){... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_318\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_323\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_327\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_329\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_330\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_332\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_333\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_334\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_336\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_338\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_335)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_335:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_341\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x06\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_343\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_340)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_340:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_346\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_347\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2778:2783  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      tag_349\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2817  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_350\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_353\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_353:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_354\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_330\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_356\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_357\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_359\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2568  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      mload(0x40)\n      tag_360\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_360:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_363\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_363:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_364\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_365\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_365:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_364:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_366\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_367\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_367:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":3065:3230  function _update(address from, address to, uint256 value)... */\n    tag_330:\n        /* \"contracts/MyToken.sol\":3193:3223  super._update(from, to, value) */\n      tag_369\n        /* \"contracts/MyToken.sol\":3207:3211  from */\n      dup4\n        /* \"contracts/MyToken.sol\":3213:3215  to */\n      dup4\n        /* \"contracts/MyToken.sol\":3217:3222  value */\n      dup4\n        /* \"contracts/MyToken.sol\":3193:3206  super._update */\n      tag_370\n        /* \"contracts/MyToken.sol\":3193:3223  super._update(from, to, value) */\n      jump\t// in\n    tag_369:\n        /* \"contracts/MyToken.sol\":3065:3230  function _update(address from, address to, uint256 value)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_372\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_373\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_374\n      swap3\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_374:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_373:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_347:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      tag_377\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2271  paused */\n      tag_95\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_378\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n    tag_378:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_357:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      tag_380\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n      tag_95\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_381\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_383\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_357\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n      tag_385\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1234:1238  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1240:1242  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1244:1249  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1233  super._update */\n      tag_386\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_386:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_388\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_389\n      swap2\n      swap1\n      tag_390\n      jump\t// in\n    tag_389:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_391)\n    tag_388:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_392\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_393\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_322\n      jump\t// in\n    tag_393:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_392:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_391:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_395)\n    tag_394:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_396\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_397:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_398:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_399:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_400:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_401:\n        /* \"#utility.yul\":561:584   */\n      tag_461\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_400\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_462:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_402:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_464\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_401\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_43:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_467\n      tag_398\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":833:952   */\n    tag_466:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_468\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_402\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_403:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_404:\n        /* \"#utility.yul\":1268:1289   */\n      tag_471\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_403\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_46:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_473\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_404\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_405:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_406:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_407:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_408:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_409:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_479\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_405\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":2222:2293   */\n      tag_480\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_406\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_481\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_407\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":2392:2421   */\n      tag_482\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_408\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_50:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_484\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_409\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_410:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_411:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_487\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_410\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_412:\n        /* \"#utility.yul\":3060:3084   */\n      tag_489\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_411\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_490\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      dup1\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_490:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_413:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_492\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_412\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_414:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_415:\n        /* \"#utility.yul\":3416:3440   */\n      tag_495\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_414\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_496\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      dup1\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_496:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_416:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_498\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_415\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_53:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      dup1\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_501\n      tag_398\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":3709:3828   */\n    tag_500:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_502\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_413\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_503\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_416\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4425   */\n    tag_58:\n        /* \"#utility.yul\":4155:4161   */\n      0x00\n        /* \"#utility.yul\":4204:4206   */\n      0x20\n        /* \"#utility.yul\":4192:4201   */\n      dup3\n        /* \"#utility.yul\":4183:4190   */\n      dup5\n        /* \"#utility.yul\":4179:4202   */\n      sub\n        /* \"#utility.yul\":4175:4207   */\n      slt\n        /* \"#utility.yul\":4172:4291   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":4210:4289   */\n      tag_506\n      tag_398\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":4172:4291   */\n    tag_505:\n        /* \"#utility.yul\":4330:4331   */\n      0x00\n        /* \"#utility.yul\":4355:4408   */\n      tag_507\n        /* \"#utility.yul\":4400:4407   */\n      dup5\n        /* \"#utility.yul\":4391:4397   */\n      dup3\n        /* \"#utility.yul\":4380:4389   */\n      dup6\n        /* \"#utility.yul\":4376:4398   */\n      add\n        /* \"#utility.yul\":4355:4408   */\n      tag_416\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":4345:4408   */\n      swap2\n      pop\n        /* \"#utility.yul\":4301:4418   */\n      pop\n        /* \"#utility.yul\":4096:4425   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4431:4549   */\n    tag_417:\n        /* \"#utility.yul\":4518:4542   */\n      tag_509\n        /* \"#utility.yul\":4536:4541   */\n      dup2\n        /* \"#utility.yul\":4518:4542   */\n      tag_414\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":4513:4516   */\n      dup3\n        /* \"#utility.yul\":4506:4543   */\n      mstore\n        /* \"#utility.yul\":4431:4549   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:4777   */\n    tag_63:\n        /* \"#utility.yul\":4648:4652   */\n      0x00\n        /* \"#utility.yul\":4686:4688   */\n      0x20\n        /* \"#utility.yul\":4675:4684   */\n      dup3\n        /* \"#utility.yul\":4671:4689   */\n      add\n        /* \"#utility.yul\":4663:4689   */\n      swap1\n      pop\n        /* \"#utility.yul\":4699:4770   */\n      tag_511\n        /* \"#utility.yul\":4767:4768   */\n      0x00\n        /* \"#utility.yul\":4756:4765   */\n      dup4\n        /* \"#utility.yul\":4752:4769   */\n      add\n        /* \"#utility.yul\":4743:4749   */\n      dup5\n        /* \"#utility.yul\":4699:4770   */\n      tag_417\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":4555:4777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_66:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_514\n      tag_398\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":4893:5012   */\n    tag_513:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_515\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_413\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_516\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_413\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_517\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_416\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5485   */\n    tag_418:\n        /* \"#utility.yul\":5445:5452   */\n      0x00\n        /* \"#utility.yul\":5474:5479   */\n      dup2\n        /* \"#utility.yul\":5463:5479   */\n      swap1\n      pop\n        /* \"#utility.yul\":5408:5485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5491:5613   */\n    tag_419:\n        /* \"#utility.yul\":5564:5588   */\n      tag_520\n        /* \"#utility.yul\":5582:5587   */\n      dup2\n        /* \"#utility.yul\":5564:5588   */\n      tag_418\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":5557:5562   */\n      dup2\n        /* \"#utility.yul\":5554:5589   */\n      eq\n        /* \"#utility.yul\":5544:5607   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":5603:5604   */\n      0x00\n        /* \"#utility.yul\":5600:5601   */\n      dup1\n        /* \"#utility.yul\":5593:5605   */\n      revert\n        /* \"#utility.yul\":5544:5607   */\n    tag_521:\n        /* \"#utility.yul\":5491:5613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5619:5758   */\n    tag_420:\n        /* \"#utility.yul\":5665:5670   */\n      0x00\n        /* \"#utility.yul\":5703:5709   */\n      dup2\n        /* \"#utility.yul\":5690:5710   */\n      calldataload\n        /* \"#utility.yul\":5681:5710   */\n      swap1\n      pop\n        /* \"#utility.yul\":5719:5752   */\n      tag_523\n        /* \"#utility.yul\":5746:5751   */\n      dup2\n        /* \"#utility.yul\":5719:5752   */\n      tag_419\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":5619:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:6093   */\n    tag_71:\n        /* \"#utility.yul\":5823:5829   */\n      0x00\n        /* \"#utility.yul\":5872:5874   */\n      0x20\n        /* \"#utility.yul\":5860:5869   */\n      dup3\n        /* \"#utility.yul\":5851:5858   */\n      dup5\n        /* \"#utility.yul\":5847:5870   */\n      sub\n        /* \"#utility.yul\":5843:5875   */\n      slt\n        /* \"#utility.yul\":5840:5959   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":5878:5957   */\n      tag_526\n      tag_398\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":5840:5959   */\n    tag_525:\n        /* \"#utility.yul\":5998:5999   */\n      0x00\n        /* \"#utility.yul\":6023:6076   */\n      tag_527\n        /* \"#utility.yul\":6068:6075   */\n      dup5\n        /* \"#utility.yul\":6059:6065   */\n      dup3\n        /* \"#utility.yul\":6048:6057   */\n      dup6\n        /* \"#utility.yul\":6044:6066   */\n      add\n        /* \"#utility.yul\":6023:6076   */\n      tag_420\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":6013:6076   */\n      swap2\n      pop\n        /* \"#utility.yul\":5969:6086   */\n      pop\n        /* \"#utility.yul\":5764:6093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6099:6217   */\n    tag_421:\n        /* \"#utility.yul\":6186:6210   */\n      tag_529\n        /* \"#utility.yul\":6204:6209   */\n      dup2\n        /* \"#utility.yul\":6186:6210   */\n      tag_418\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":6181:6184   */\n      dup3\n        /* \"#utility.yul\":6174:6211   */\n      mstore\n        /* \"#utility.yul\":6099:6217   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6223:6445   */\n    tag_74:\n        /* \"#utility.yul\":6316:6320   */\n      0x00\n        /* \"#utility.yul\":6354:6356   */\n      0x20\n        /* \"#utility.yul\":6343:6352   */\n      dup3\n        /* \"#utility.yul\":6339:6357   */\n      add\n        /* \"#utility.yul\":6331:6357   */\n      swap1\n      pop\n        /* \"#utility.yul\":6367:6438   */\n      tag_531\n        /* \"#utility.yul\":6435:6436   */\n      0x00\n        /* \"#utility.yul\":6424:6433   */\n      dup4\n        /* \"#utility.yul\":6420:6437   */\n      add\n        /* \"#utility.yul\":6411:6417   */\n      dup5\n        /* \"#utility.yul\":6367:6438   */\n      tag_421\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":6223:6445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6451:6925   */\n    tag_80:\n        /* \"#utility.yul\":6519:6525   */\n      0x00\n        /* \"#utility.yul\":6527:6533   */\n      dup1\n        /* \"#utility.yul\":6576:6578   */\n      0x40\n        /* \"#utility.yul\":6564:6573   */\n      dup4\n        /* \"#utility.yul\":6555:6562   */\n      dup6\n        /* \"#utility.yul\":6551:6574   */\n      sub\n        /* \"#utility.yul\":6547:6579   */\n      slt\n        /* \"#utility.yul\":6544:6663   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":6582:6661   */\n      tag_534\n      tag_398\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":6544:6663   */\n    tag_533:\n        /* \"#utility.yul\":6702:6703   */\n      0x00\n        /* \"#utility.yul\":6727:6780   */\n      tag_535\n        /* \"#utility.yul\":6772:6779   */\n      dup6\n        /* \"#utility.yul\":6763:6769   */\n      dup3\n        /* \"#utility.yul\":6752:6761   */\n      dup7\n        /* \"#utility.yul\":6748:6770   */\n      add\n        /* \"#utility.yul\":6727:6780   */\n      tag_420\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":6717:6780   */\n      swap3\n      pop\n        /* \"#utility.yul\":6673:6790   */\n      pop\n        /* \"#utility.yul\":6829:6831   */\n      0x20\n        /* \"#utility.yul\":6855:6908   */\n      tag_536\n        /* \"#utility.yul\":6900:6907   */\n      dup6\n        /* \"#utility.yul\":6891:6897   */\n      dup3\n        /* \"#utility.yul\":6880:6889   */\n      dup7\n        /* \"#utility.yul\":6876:6898   */\n      add\n        /* \"#utility.yul\":6855:6908   */\n      tag_413\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":6845:6908   */\n      swap2\n      pop\n        /* \"#utility.yul\":6800:6918   */\n      pop\n        /* \"#utility.yul\":6451:6925   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6931:7017   */\n    tag_422:\n        /* \"#utility.yul\":6966:6973   */\n      0x00\n        /* \"#utility.yul\":7006:7010   */\n      0xff\n        /* \"#utility.yul\":6999:7004   */\n      dup3\n        /* \"#utility.yul\":6995:7011   */\n      and\n        /* \"#utility.yul\":6984:7011   */\n      swap1\n      pop\n        /* \"#utility.yul\":6931:7017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7023:7135   */\n    tag_423:\n        /* \"#utility.yul\":7106:7128   */\n      tag_539\n        /* \"#utility.yul\":7122:7127   */\n      dup2\n        /* \"#utility.yul\":7106:7128   */\n      tag_422\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":7101:7104   */\n      dup3\n        /* \"#utility.yul\":7094:7129   */\n      mstore\n        /* \"#utility.yul\":7023:7135   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7141:7355   */\n    tag_85:\n        /* \"#utility.yul\":7230:7234   */\n      0x00\n        /* \"#utility.yul\":7268:7270   */\n      0x20\n        /* \"#utility.yul\":7257:7266   */\n      dup3\n        /* \"#utility.yul\":7253:7271   */\n      add\n        /* \"#utility.yul\":7245:7271   */\n      swap1\n      pop\n        /* \"#utility.yul\":7281:7348   */\n      tag_541\n        /* \"#utility.yul\":7345:7346   */\n      0x00\n        /* \"#utility.yul\":7334:7343   */\n      dup4\n        /* \"#utility.yul\":7330:7347   */\n      add\n        /* \"#utility.yul\":7321:7327   */\n      dup5\n        /* \"#utility.yul\":7281:7348   */\n      tag_423\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":7141:7355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7690   */\n    tag_99:\n        /* \"#utility.yul\":7420:7426   */\n      0x00\n        /* \"#utility.yul\":7469:7471   */\n      0x20\n        /* \"#utility.yul\":7457:7466   */\n      dup3\n        /* \"#utility.yul\":7448:7455   */\n      dup5\n        /* \"#utility.yul\":7444:7467   */\n      sub\n        /* \"#utility.yul\":7440:7472   */\n      slt\n        /* \"#utility.yul\":7437:7556   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":7475:7554   */\n      tag_544\n      tag_398\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":7437:7556   */\n    tag_543:\n        /* \"#utility.yul\":7595:7596   */\n      0x00\n        /* \"#utility.yul\":7620:7673   */\n      tag_545\n        /* \"#utility.yul\":7665:7672   */\n      dup5\n        /* \"#utility.yul\":7656:7662   */\n      dup3\n        /* \"#utility.yul\":7645:7654   */\n      dup6\n        /* \"#utility.yul\":7641:7663   */\n      add\n        /* \"#utility.yul\":7620:7673   */\n      tag_413\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":7610:7673   */\n      swap2\n      pop\n        /* \"#utility.yul\":7566:7683   */\n      pop\n        /* \"#utility.yul\":7361:7690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7696:7813   */\n    tag_424:\n        /* \"#utility.yul\":7805:7806   */\n      0x00\n        /* \"#utility.yul\":7802:7803   */\n      dup1\n        /* \"#utility.yul\":7795:7807   */\n      revert\n        /* \"#utility.yul\":7819:7999   */\n    tag_425:\n        /* \"#utility.yul\":7867:7944   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7864:7865   */\n      0x00\n        /* \"#utility.yul\":7857:7945   */\n      mstore\n        /* \"#utility.yul\":7964:7968   */\n      0x41\n        /* \"#utility.yul\":7961:7962   */\n      0x04\n        /* \"#utility.yul\":7954:7969   */\n      mstore\n        /* \"#utility.yul\":7988:7992   */\n      0x24\n        /* \"#utility.yul\":7985:7986   */\n      0x00\n        /* \"#utility.yul\":7978:7993   */\n      revert\n        /* \"#utility.yul\":8005:8286   */\n    tag_426:\n        /* \"#utility.yul\":8088:8115   */\n      tag_549\n        /* \"#utility.yul\":8110:8114   */\n      dup3\n        /* \"#utility.yul\":8088:8115   */\n      tag_408\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":8080:8086   */\n      dup2\n        /* \"#utility.yul\":8076:8116   */\n      add\n        /* \"#utility.yul\":8218:8224   */\n      dup2\n        /* \"#utility.yul\":8206:8216   */\n      dup2\n        /* \"#utility.yul\":8203:8225   */\n      lt\n        /* \"#utility.yul\":8182:8200   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8170:8180   */\n      dup3\n        /* \"#utility.yul\":8167:8201   */\n      gt\n        /* \"#utility.yul\":8164:8226   */\n      or\n        /* \"#utility.yul\":8161:8249   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":8229:8247   */\n      tag_551\n      tag_425\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":8161:8249   */\n    tag_550:\n        /* \"#utility.yul\":8269:8279   */\n      dup1\n        /* \"#utility.yul\":8265:8267   */\n      0x40\n        /* \"#utility.yul\":8258:8280   */\n      mstore\n        /* \"#utility.yul\":8048:8286   */\n      pop\n        /* \"#utility.yul\":8005:8286   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8292:8421   */\n    tag_427:\n        /* \"#utility.yul\":8326:8332   */\n      0x00\n        /* \"#utility.yul\":8353:8373   */\n      tag_553\n      tag_397\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":8343:8373   */\n      swap1\n      pop\n        /* \"#utility.yul\":8382:8415   */\n      tag_554\n        /* \"#utility.yul\":8410:8414   */\n      dup3\n        /* \"#utility.yul\":8402:8408   */\n      dup3\n        /* \"#utility.yul\":8382:8415   */\n      tag_426\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":8292:8421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8427:8738   */\n    tag_428:\n        /* \"#utility.yul\":8504:8508   */\n      0x00\n        /* \"#utility.yul\":8594:8612   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8586:8592   */\n      dup3\n        /* \"#utility.yul\":8583:8613   */\n      gt\n        /* \"#utility.yul\":8580:8636   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":8616:8634   */\n      tag_557\n      tag_425\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":8580:8636   */\n    tag_556:\n        /* \"#utility.yul\":8666:8670   */\n      0x20\n        /* \"#utility.yul\":8658:8664   */\n      dup3\n        /* \"#utility.yul\":8654:8671   */\n      mul\n        /* \"#utility.yul\":8646:8671   */\n      swap1\n      pop\n        /* \"#utility.yul\":8726:8730   */\n      0x20\n        /* \"#utility.yul\":8720:8724   */\n      dup2\n        /* \"#utility.yul\":8716:8731   */\n      add\n        /* \"#utility.yul\":8708:8731   */\n      swap1\n      pop\n        /* \"#utility.yul\":8427:8738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8744:8861   */\n    tag_429:\n        /* \"#utility.yul\":8853:8854   */\n      0x00\n        /* \"#utility.yul\":8850:8851   */\n      dup1\n        /* \"#utility.yul\":8843:8855   */\n      revert\n        /* \"#utility.yul\":8884:9594   */\n    tag_430:\n        /* \"#utility.yul\":8980:8985   */\n      0x00\n        /* \"#utility.yul\":9005:9086   */\n      tag_560\n        /* \"#utility.yul\":9021:9085   */\n      tag_561\n        /* \"#utility.yul\":9078:9084   */\n      dup5\n        /* \"#utility.yul\":9021:9085   */\n      tag_428\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":9005:9086   */\n      tag_427\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":8996:9086   */\n      swap1\n      pop\n        /* \"#utility.yul\":9106:9111   */\n      dup1\n        /* \"#utility.yul\":9135:9141   */\n      dup4\n        /* \"#utility.yul\":9128:9133   */\n      dup3\n        /* \"#utility.yul\":9121:9142   */\n      mstore\n        /* \"#utility.yul\":9169:9173   */\n      0x20\n        /* \"#utility.yul\":9162:9167   */\n      dup3\n        /* \"#utility.yul\":9158:9174   */\n      add\n        /* \"#utility.yul\":9151:9174   */\n      swap1\n      pop\n        /* \"#utility.yul\":9222:9226   */\n      0x20\n        /* \"#utility.yul\":9214:9220   */\n      dup5\n        /* \"#utility.yul\":9210:9227   */\n      mul\n        /* \"#utility.yul\":9202:9208   */\n      dup4\n        /* \"#utility.yul\":9198:9228   */\n      add\n        /* \"#utility.yul\":9251:9254   */\n      dup6\n        /* \"#utility.yul\":9243:9249   */\n      dup2\n        /* \"#utility.yul\":9240:9255   */\n      gt\n        /* \"#utility.yul\":9237:9359   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":9270:9349   */\n      tag_563\n      tag_429\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":9237:9359   */\n    tag_562:\n        /* \"#utility.yul\":9385:9391   */\n      dup4\n        /* \"#utility.yul\":9368:9588   */\n    tag_564:\n        /* \"#utility.yul\":9402:9408   */\n      dup2\n        /* \"#utility.yul\":9397:9400   */\n      dup2\n        /* \"#utility.yul\":9394:9409   */\n      lt\n        /* \"#utility.yul\":9368:9588   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":9477:9480   */\n      dup1\n        /* \"#utility.yul\":9506:9543   */\n      tag_567\n        /* \"#utility.yul\":9539:9542   */\n      dup9\n        /* \"#utility.yul\":9527:9537   */\n      dup3\n        /* \"#utility.yul\":9506:9543   */\n      tag_413\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":9501:9504   */\n      dup5\n        /* \"#utility.yul\":9494:9544   */\n      mstore\n        /* \"#utility.yul\":9573:9577   */\n      0x20\n        /* \"#utility.yul\":9568:9571   */\n      dup5\n        /* \"#utility.yul\":9564:9578   */\n      add\n        /* \"#utility.yul\":9557:9578   */\n      swap4\n      pop\n        /* \"#utility.yul\":9444:9588   */\n      pop\n        /* \"#utility.yul\":9428:9432   */\n      0x20\n        /* \"#utility.yul\":9423:9426   */\n      dup2\n        /* \"#utility.yul\":9419:9433   */\n      add\n        /* \"#utility.yul\":9412:9433   */\n      swap1\n      pop\n        /* \"#utility.yul\":9368:9588   */\n      jump(tag_564)\n    tag_566:\n        /* \"#utility.yul\":9372:9393   */\n      pop\n        /* \"#utility.yul\":8986:9594   */\n      pop\n      pop\n        /* \"#utility.yul\":8884:9594   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9617:9987   */\n    tag_431:\n        /* \"#utility.yul\":9688:9693   */\n      0x00\n        /* \"#utility.yul\":9737:9740   */\n      dup3\n        /* \"#utility.yul\":9730:9734   */\n      0x1f\n        /* \"#utility.yul\":9722:9728   */\n      dup4\n        /* \"#utility.yul\":9718:9735   */\n      add\n        /* \"#utility.yul\":9714:9741   */\n      slt\n        /* \"#utility.yul\":9704:9826   */\n      tag_569\n      jumpi\n        /* \"#utility.yul\":9745:9824   */\n      tag_570\n      tag_424\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":9704:9826   */\n    tag_569:\n        /* \"#utility.yul\":9862:9868   */\n      dup2\n        /* \"#utility.yul\":9849:9869   */\n      calldataload\n        /* \"#utility.yul\":9887:9981   */\n      tag_571\n        /* \"#utility.yul\":9977:9980   */\n      dup5\n        /* \"#utility.yul\":9969:9975   */\n      dup3\n        /* \"#utility.yul\":9962:9966   */\n      0x20\n        /* \"#utility.yul\":9954:9960   */\n      dup7\n        /* \"#utility.yul\":9950:9967   */\n      add\n        /* \"#utility.yul\":9887:9981   */\n      tag_430\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":9878:9981   */\n      swap2\n      pop\n        /* \"#utility.yul\":9694:9987   */\n      pop\n        /* \"#utility.yul\":9617:9987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9993:10304   */\n    tag_432:\n        /* \"#utility.yul\":10070:10074   */\n      0x00\n        /* \"#utility.yul\":10160:10178   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10152:10158   */\n      dup3\n        /* \"#utility.yul\":10149:10179   */\n      gt\n        /* \"#utility.yul\":10146:10202   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":10182:10200   */\n      tag_574\n      tag_425\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":10146:10202   */\n    tag_573:\n        /* \"#utility.yul\":10232:10236   */\n      0x20\n        /* \"#utility.yul\":10224:10230   */\n      dup3\n        /* \"#utility.yul\":10220:10237   */\n      mul\n        /* \"#utility.yul\":10212:10237   */\n      swap1\n      pop\n        /* \"#utility.yul\":10292:10296   */\n      0x20\n        /* \"#utility.yul\":10286:10290   */\n      dup2\n        /* \"#utility.yul\":10282:10297   */\n      add\n        /* \"#utility.yul\":10274:10297   */\n      swap1\n      pop\n        /* \"#utility.yul\":9993:10304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10327:11037   */\n    tag_433:\n        /* \"#utility.yul\":10423:10428   */\n      0x00\n        /* \"#utility.yul\":10448:10529   */\n      tag_576\n        /* \"#utility.yul\":10464:10528   */\n      tag_577\n        /* \"#utility.yul\":10521:10527   */\n      dup5\n        /* \"#utility.yul\":10464:10528   */\n      tag_432\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":10448:10529   */\n      tag_427\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":10439:10529   */\n      swap1\n      pop\n        /* \"#utility.yul\":10549:10554   */\n      dup1\n        /* \"#utility.yul\":10578:10584   */\n      dup4\n        /* \"#utility.yul\":10571:10576   */\n      dup3\n        /* \"#utility.yul\":10564:10585   */\n      mstore\n        /* \"#utility.yul\":10612:10616   */\n      0x20\n        /* \"#utility.yul\":10605:10610   */\n      dup3\n        /* \"#utility.yul\":10601:10617   */\n      add\n        /* \"#utility.yul\":10594:10617   */\n      swap1\n      pop\n        /* \"#utility.yul\":10665:10669   */\n      0x20\n        /* \"#utility.yul\":10657:10663   */\n      dup5\n        /* \"#utility.yul\":10653:10670   */\n      mul\n        /* \"#utility.yul\":10645:10651   */\n      dup4\n        /* \"#utility.yul\":10641:10671   */\n      add\n        /* \"#utility.yul\":10694:10697   */\n      dup6\n        /* \"#utility.yul\":10686:10692   */\n      dup2\n        /* \"#utility.yul\":10683:10698   */\n      gt\n        /* \"#utility.yul\":10680:10802   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":10713:10792   */\n      tag_579\n      tag_429\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":10680:10802   */\n    tag_578:\n        /* \"#utility.yul\":10828:10834   */\n      dup4\n        /* \"#utility.yul\":10811:11031   */\n    tag_580:\n        /* \"#utility.yul\":10845:10851   */\n      dup2\n        /* \"#utility.yul\":10840:10843   */\n      dup2\n        /* \"#utility.yul\":10837:10852   */\n      lt\n        /* \"#utility.yul\":10811:11031   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":10920:10923   */\n      dup1\n        /* \"#utility.yul\":10949:10986   */\n      tag_583\n        /* \"#utility.yul\":10982:10985   */\n      dup9\n        /* \"#utility.yul\":10970:10980   */\n      dup3\n        /* \"#utility.yul\":10949:10986   */\n      tag_416\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":10944:10947   */\n      dup5\n        /* \"#utility.yul\":10937:10987   */\n      mstore\n        /* \"#utility.yul\":11016:11020   */\n      0x20\n        /* \"#utility.yul\":11011:11014   */\n      dup5\n        /* \"#utility.yul\":11007:11021   */\n      add\n        /* \"#utility.yul\":11000:11021   */\n      swap4\n      pop\n        /* \"#utility.yul\":10887:11031   */\n      pop\n        /* \"#utility.yul\":10871:10875   */\n      0x20\n        /* \"#utility.yul\":10866:10869   */\n      dup2\n        /* \"#utility.yul\":10862:10876   */\n      add\n        /* \"#utility.yul\":10855:10876   */\n      swap1\n      pop\n        /* \"#utility.yul\":10811:11031   */\n      jump(tag_580)\n    tag_582:\n        /* \"#utility.yul\":10815:10836   */\n      pop\n        /* \"#utility.yul\":10429:11037   */\n      pop\n      pop\n        /* \"#utility.yul\":10327:11037   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11060:11430   */\n    tag_434:\n        /* \"#utility.yul\":11131:11136   */\n      0x00\n        /* \"#utility.yul\":11180:11183   */\n      dup3\n        /* \"#utility.yul\":11173:11177   */\n      0x1f\n        /* \"#utility.yul\":11165:11171   */\n      dup4\n        /* \"#utility.yul\":11161:11178   */\n      add\n        /* \"#utility.yul\":11157:11184   */\n      slt\n        /* \"#utility.yul\":11147:11269   */\n      tag_585\n      jumpi\n        /* \"#utility.yul\":11188:11267   */\n      tag_586\n      tag_424\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":11147:11269   */\n    tag_585:\n        /* \"#utility.yul\":11305:11311   */\n      dup2\n        /* \"#utility.yul\":11292:11312   */\n      calldataload\n        /* \"#utility.yul\":11330:11424   */\n      tag_587\n        /* \"#utility.yul\":11420:11423   */\n      dup5\n        /* \"#utility.yul\":11412:11418   */\n      dup3\n        /* \"#utility.yul\":11405:11409   */\n      0x20\n        /* \"#utility.yul\":11397:11403   */\n      dup7\n        /* \"#utility.yul\":11393:11410   */\n      add\n        /* \"#utility.yul\":11330:11424   */\n      tag_433\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":11321:11424   */\n      swap2\n      pop\n        /* \"#utility.yul\":11137:11430   */\n      pop\n        /* \"#utility.yul\":11060:11430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11436:12330   */\n    tag_109:\n        /* \"#utility.yul\":11554:11560   */\n      0x00\n        /* \"#utility.yul\":11562:11568   */\n      dup1\n        /* \"#utility.yul\":11611:11613   */\n      0x40\n        /* \"#utility.yul\":11599:11608   */\n      dup4\n        /* \"#utility.yul\":11590:11597   */\n      dup6\n        /* \"#utility.yul\":11586:11609   */\n      sub\n        /* \"#utility.yul\":11582:11614   */\n      slt\n        /* \"#utility.yul\":11579:11698   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":11617:11696   */\n      tag_590\n      tag_398\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":11579:11698   */\n    tag_589:\n        /* \"#utility.yul\":11765:11766   */\n      0x00\n        /* \"#utility.yul\":11754:11763   */\n      dup4\n        /* \"#utility.yul\":11750:11767   */\n      add\n        /* \"#utility.yul\":11737:11768   */\n      calldataload\n        /* \"#utility.yul\":11795:11813   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11787:11793   */\n      dup2\n        /* \"#utility.yul\":11784:11814   */\n      gt\n        /* \"#utility.yul\":11781:11898   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":11817:11896   */\n      tag_592\n      tag_399\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":11781:11898   */\n    tag_591:\n        /* \"#utility.yul\":11922:12000   */\n      tag_593\n        /* \"#utility.yul\":11992:11999   */\n      dup6\n        /* \"#utility.yul\":11983:11989   */\n      dup3\n        /* \"#utility.yul\":11972:11981   */\n      dup7\n        /* \"#utility.yul\":11968:11990   */\n      add\n        /* \"#utility.yul\":11922:12000   */\n      tag_431\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":11912:12000   */\n      swap3\n      pop\n        /* \"#utility.yul\":11708:12010   */\n      pop\n        /* \"#utility.yul\":12077:12079   */\n      0x20\n        /* \"#utility.yul\":12066:12075   */\n      dup4\n        /* \"#utility.yul\":12062:12080   */\n      add\n        /* \"#utility.yul\":12049:12081   */\n      calldataload\n        /* \"#utility.yul\":12108:12126   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12100:12106   */\n      dup2\n        /* \"#utility.yul\":12097:12127   */\n      gt\n        /* \"#utility.yul\":12094:12211   */\n      iszero\n      tag_594\n      jumpi\n        /* \"#utility.yul\":12130:12209   */\n      tag_595\n      tag_399\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":12094:12211   */\n    tag_594:\n        /* \"#utility.yul\":12235:12313   */\n      tag_596\n        /* \"#utility.yul\":12305:12312   */\n      dup6\n        /* \"#utility.yul\":12296:12302   */\n      dup3\n        /* \"#utility.yul\":12285:12294   */\n      dup7\n        /* \"#utility.yul\":12281:12303   */\n      add\n        /* \"#utility.yul\":12235:12313   */\n      tag_434\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":12225:12313   */\n      swap2\n      pop\n        /* \"#utility.yul\":12020:12323   */\n      pop\n        /* \"#utility.yul\":11436:12330   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12336:12454   */\n    tag_435:\n        /* \"#utility.yul\":12423:12447   */\n      tag_598\n        /* \"#utility.yul\":12441:12446   */\n      dup2\n        /* \"#utility.yul\":12423:12447   */\n      tag_411\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":12418:12421   */\n      dup3\n        /* \"#utility.yul\":12411:12448   */\n      mstore\n        /* \"#utility.yul\":12336:12454   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12460:12682   */\n    tag_121:\n        /* \"#utility.yul\":12553:12557   */\n      0x00\n        /* \"#utility.yul\":12591:12593   */\n      0x20\n        /* \"#utility.yul\":12580:12589   */\n      dup3\n        /* \"#utility.yul\":12576:12594   */\n      add\n        /* \"#utility.yul\":12568:12594   */\n      swap1\n      pop\n        /* \"#utility.yul\":12604:12675   */\n      tag_600\n        /* \"#utility.yul\":12672:12673   */\n      0x00\n        /* \"#utility.yul\":12661:12670   */\n      dup4\n        /* \"#utility.yul\":12657:12674   */\n      add\n        /* \"#utility.yul\":12648:12654   */\n      dup5\n        /* \"#utility.yul\":12604:12675   */\n      tag_435\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":12460:12682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12688:13162   */\n    tag_142:\n        /* \"#utility.yul\":12756:12762   */\n      0x00\n        /* \"#utility.yul\":12764:12770   */\n      dup1\n        /* \"#utility.yul\":12813:12815   */\n      0x40\n        /* \"#utility.yul\":12801:12810   */\n      dup4\n        /* \"#utility.yul\":12792:12799   */\n      dup6\n        /* \"#utility.yul\":12788:12811   */\n      sub\n        /* \"#utility.yul\":12784:12816   */\n      slt\n        /* \"#utility.yul\":12781:12900   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":12819:12898   */\n      tag_603\n      tag_398\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":12781:12900   */\n    tag_602:\n        /* \"#utility.yul\":12939:12940   */\n      0x00\n        /* \"#utility.yul\":12964:13017   */\n      tag_604\n        /* \"#utility.yul\":13009:13016   */\n      dup6\n        /* \"#utility.yul\":13000:13006   */\n      dup3\n        /* \"#utility.yul\":12989:12998   */\n      dup7\n        /* \"#utility.yul\":12985:13007   */\n      add\n        /* \"#utility.yul\":12964:13017   */\n      tag_413\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":12954:13017   */\n      swap3\n      pop\n        /* \"#utility.yul\":12910:13027   */\n      pop\n        /* \"#utility.yul\":13066:13068   */\n      0x20\n        /* \"#utility.yul\":13092:13145   */\n      tag_605\n        /* \"#utility.yul\":13137:13144   */\n      dup6\n        /* \"#utility.yul\":13128:13134   */\n      dup3\n        /* \"#utility.yul\":13117:13126   */\n      dup7\n        /* \"#utility.yul\":13113:13135   */\n      add\n        /* \"#utility.yul\":13092:13145   */\n      tag_413\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":13082:13145   */\n      swap2\n      pop\n        /* \"#utility.yul\":13037:13155   */\n      pop\n        /* \"#utility.yul\":12688:13162   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13168:13348   */\n    tag_436:\n        /* \"#utility.yul\":13216:13293   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13213:13214   */\n      0x00\n        /* \"#utility.yul\":13206:13294   */\n      mstore\n        /* \"#utility.yul\":13313:13317   */\n      0x22\n        /* \"#utility.yul\":13310:13311   */\n      0x04\n        /* \"#utility.yul\":13303:13318   */\n      mstore\n        /* \"#utility.yul\":13337:13341   */\n      0x24\n        /* \"#utility.yul\":13334:13335   */\n      0x00\n        /* \"#utility.yul\":13327:13342   */\n      revert\n        /* \"#utility.yul\":13354:13674   */\n    tag_160:\n        /* \"#utility.yul\":13398:13404   */\n      0x00\n        /* \"#utility.yul\":13435:13436   */\n      0x02\n        /* \"#utility.yul\":13429:13433   */\n      dup3\n        /* \"#utility.yul\":13425:13437   */\n      div\n        /* \"#utility.yul\":13415:13437   */\n      swap1\n      pop\n        /* \"#utility.yul\":13482:13483   */\n      0x01\n        /* \"#utility.yul\":13476:13480   */\n      dup3\n        /* \"#utility.yul\":13472:13484   */\n      and\n        /* \"#utility.yul\":13503:13521   */\n      dup1\n        /* \"#utility.yul\":13493:13574   */\n      tag_608\n      jumpi\n        /* \"#utility.yul\":13559:13563   */\n      0x7f\n        /* \"#utility.yul\":13551:13557   */\n      dup3\n        /* \"#utility.yul\":13547:13564   */\n      and\n        /* \"#utility.yul\":13537:13564   */\n      swap2\n      pop\n        /* \"#utility.yul\":13493:13574   */\n    tag_608:\n        /* \"#utility.yul\":13621:13623   */\n      0x20\n        /* \"#utility.yul\":13613:13619   */\n      dup3\n        /* \"#utility.yul\":13610:13624   */\n      lt\n        /* \"#utility.yul\":13590:13608   */\n      dup2\n        /* \"#utility.yul\":13587:13625   */\n      sub\n        /* \"#utility.yul\":13584:13668   */\n      tag_609\n      jumpi\n        /* \"#utility.yul\":13640:13658   */\n      tag_610\n      tag_436\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":13584:13668   */\n    tag_609:\n        /* \"#utility.yul\":13405:13674   */\n      pop\n        /* \"#utility.yul\":13354:13674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13680:13860   */\n    tag_437:\n        /* \"#utility.yul\":13728:13805   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13725:13726   */\n      0x00\n        /* \"#utility.yul\":13718:13806   */\n      mstore\n        /* \"#utility.yul\":13825:13829   */\n      0x11\n        /* \"#utility.yul\":13822:13823   */\n      0x04\n        /* \"#utility.yul\":13815:13830   */\n      mstore\n        /* \"#utility.yul\":13849:13853   */\n      0x24\n        /* \"#utility.yul\":13846:13847   */\n      0x00\n        /* \"#utility.yul\":13839:13854   */\n      revert\n        /* \"#utility.yul\":13866:14276   */\n    tag_172:\n        /* \"#utility.yul\":13906:13913   */\n      0x00\n        /* \"#utility.yul\":13929:13949   */\n      tag_613\n        /* \"#utility.yul\":13947:13948   */\n      dup3\n        /* \"#utility.yul\":13929:13949   */\n      tag_414\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":13924:13949   */\n      swap2\n      pop\n        /* \"#utility.yul\":13963:13983   */\n      tag_614\n        /* \"#utility.yul\":13981:13982   */\n      dup4\n        /* \"#utility.yul\":13963:13983   */\n      tag_414\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":13958:13983   */\n      swap3\n      pop\n        /* \"#utility.yul\":14018:14019   */\n      dup3\n        /* \"#utility.yul\":14015:14016   */\n      dup3\n        /* \"#utility.yul\":14011:14020   */\n      mul\n        /* \"#utility.yul\":14040:14070   */\n      tag_615\n        /* \"#utility.yul\":14058:14069   */\n      dup2\n        /* \"#utility.yul\":14040:14070   */\n      tag_414\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":14029:14070   */\n      swap2\n      pop\n        /* \"#utility.yul\":14219:14220   */\n      dup3\n        /* \"#utility.yul\":14210:14217   */\n      dup3\n        /* \"#utility.yul\":14206:14221   */\n      div\n        /* \"#utility.yul\":14203:14204   */\n      dup5\n        /* \"#utility.yul\":14200:14222   */\n      eq\n        /* \"#utility.yul\":14180:14181   */\n      dup4\n        /* \"#utility.yul\":14173:14182   */\n      iszero\n        /* \"#utility.yul\":14153:14236   */\n      or\n        /* \"#utility.yul\":14130:14269   */\n      tag_616\n      jumpi\n        /* \"#utility.yul\":14249:14267   */\n      tag_617\n      tag_437\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":14130:14269   */\n    tag_616:\n        /* \"#utility.yul\":13914:14276   */\n      pop\n        /* \"#utility.yul\":13866:14276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14282:14724   */\n    tag_174:\n        /* \"#utility.yul\":14431:14435   */\n      0x00\n        /* \"#utility.yul\":14469:14471   */\n      0x60\n        /* \"#utility.yul\":14458:14467   */\n      dup3\n        /* \"#utility.yul\":14454:14472   */\n      add\n        /* \"#utility.yul\":14446:14472   */\n      swap1\n      pop\n        /* \"#utility.yul\":14482:14553   */\n      tag_619\n        /* \"#utility.yul\":14550:14551   */\n      0x00\n        /* \"#utility.yul\":14539:14548   */\n      dup4\n        /* \"#utility.yul\":14535:14552   */\n      add\n        /* \"#utility.yul\":14526:14532   */\n      dup7\n        /* \"#utility.yul\":14482:14553   */\n      tag_435\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":14563:14635   */\n      tag_620\n        /* \"#utility.yul\":14631:14633   */\n      0x20\n        /* \"#utility.yul\":14620:14629   */\n      dup4\n        /* \"#utility.yul\":14616:14634   */\n      add\n        /* \"#utility.yul\":14607:14613   */\n      dup6\n        /* \"#utility.yul\":14563:14635   */\n      tag_435\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":14645:14717   */\n      tag_621\n        /* \"#utility.yul\":14713:14715   */\n      0x40\n        /* \"#utility.yul\":14702:14711   */\n      dup4\n        /* \"#utility.yul\":14698:14716   */\n      add\n        /* \"#utility.yul\":14689:14695   */\n      dup5\n        /* \"#utility.yul\":14645:14717   */\n      tag_417\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":14282:14724   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14730:14846   */\n    tag_438:\n        /* \"#utility.yul\":14800:14821   */\n      tag_623\n        /* \"#utility.yul\":14815:14820   */\n      dup2\n        /* \"#utility.yul\":14800:14821   */\n      tag_403\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":14793:14798   */\n      dup2\n        /* \"#utility.yul\":14790:14822   */\n      eq\n        /* \"#utility.yul\":14780:14840   */\n      tag_624\n      jumpi\n        /* \"#utility.yul\":14836:14837   */\n      0x00\n        /* \"#utility.yul\":14833:14834   */\n      dup1\n        /* \"#utility.yul\":14826:14838   */\n      revert\n        /* \"#utility.yul\":14780:14840   */\n    tag_624:\n        /* \"#utility.yul\":14730:14846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14852:14989   */\n    tag_439:\n        /* \"#utility.yul\":14906:14911   */\n      0x00\n        /* \"#utility.yul\":14937:14943   */\n      dup2\n        /* \"#utility.yul\":14931:14944   */\n      mload\n        /* \"#utility.yul\":14922:14944   */\n      swap1\n      pop\n        /* \"#utility.yul\":14953:14983   */\n      tag_626\n        /* \"#utility.yul\":14977:14982   */\n      dup2\n        /* \"#utility.yul\":14953:14983   */\n      tag_438\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":14852:14989   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14995:15340   */\n    tag_178:\n        /* \"#utility.yul\":15062:15068   */\n      0x00\n        /* \"#utility.yul\":15111:15113   */\n      0x20\n        /* \"#utility.yul\":15099:15108   */\n      dup3\n        /* \"#utility.yul\":15090:15097   */\n      dup5\n        /* \"#utility.yul\":15086:15109   */\n      sub\n        /* \"#utility.yul\":15082:15114   */\n      slt\n        /* \"#utility.yul\":15079:15198   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":15117:15196   */\n      tag_629\n      tag_398\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":15079:15198   */\n    tag_628:\n        /* \"#utility.yul\":15237:15238   */\n      0x00\n        /* \"#utility.yul\":15262:15323   */\n      tag_630\n        /* \"#utility.yul\":15315:15322   */\n      dup5\n        /* \"#utility.yul\":15306:15312   */\n      dup3\n        /* \"#utility.yul\":15295:15304   */\n      dup6\n        /* \"#utility.yul\":15291:15313   */\n      add\n        /* \"#utility.yul\":15262:15323   */\n      tag_439\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":15252:15323   */\n      swap2\n      pop\n        /* \"#utility.yul\":15208:15333   */\n      pop\n        /* \"#utility.yul\":14995:15340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15346:15523   */\n    tag_440:\n        /* \"#utility.yul\":15486:15515   */\n      0x537461626c6520636f696e207472616e73666572206661696c65640000000000\n        /* \"#utility.yul\":15482:15483   */\n      0x00\n        /* \"#utility.yul\":15474:15480   */\n      dup3\n        /* \"#utility.yul\":15470:15484   */\n      add\n        /* \"#utility.yul\":15463:15516   */\n      mstore\n        /* \"#utility.yul\":15346:15523   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15529:15895   */\n    tag_441:\n        /* \"#utility.yul\":15671:15674   */\n      0x00\n        /* \"#utility.yul\":15692:15759   */\n      tag_633\n        /* \"#utility.yul\":15756:15758   */\n      0x1b\n        /* \"#utility.yul\":15751:15754   */\n      dup4\n        /* \"#utility.yul\":15692:15759   */\n      tag_406\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":15685:15759   */\n      swap2\n      pop\n        /* \"#utility.yul\":15768:15861   */\n      tag_634\n        /* \"#utility.yul\":15857:15860   */\n      dup3\n        /* \"#utility.yul\":15768:15861   */\n      tag_440\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":15886:15888   */\n      0x20\n        /* \"#utility.yul\":15881:15884   */\n      dup3\n        /* \"#utility.yul\":15877:15889   */\n      add\n        /* \"#utility.yul\":15870:15889   */\n      swap1\n      pop\n        /* \"#utility.yul\":15529:15895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15901:16320   */\n    tag_181:\n        /* \"#utility.yul\":16067:16071   */\n      0x00\n        /* \"#utility.yul\":16105:16107   */\n      0x20\n        /* \"#utility.yul\":16094:16103   */\n      dup3\n        /* \"#utility.yul\":16090:16108   */\n      add\n        /* \"#utility.yul\":16082:16108   */\n      swap1\n      pop\n        /* \"#utility.yul\":16154:16163   */\n      dup2\n        /* \"#utility.yul\":16148:16152   */\n      dup2\n        /* \"#utility.yul\":16144:16164   */\n      sub\n        /* \"#utility.yul\":16140:16141   */\n      0x00\n        /* \"#utility.yul\":16129:16138   */\n      dup4\n        /* \"#utility.yul\":16125:16142   */\n      add\n        /* \"#utility.yul\":16118:16165   */\n      mstore\n        /* \"#utility.yul\":16182:16313   */\n      tag_636\n        /* \"#utility.yul\":16308:16312   */\n      dup2\n        /* \"#utility.yul\":16182:16313   */\n      tag_441\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":16174:16313   */\n      swap1\n      pop\n        /* \"#utility.yul\":15901:16320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16326:16658   */\n    tag_183:\n        /* \"#utility.yul\":16447:16451   */\n      0x00\n        /* \"#utility.yul\":16485:16487   */\n      0x40\n        /* \"#utility.yul\":16474:16483   */\n      dup3\n        /* \"#utility.yul\":16470:16488   */\n      add\n        /* \"#utility.yul\":16462:16488   */\n      swap1\n      pop\n        /* \"#utility.yul\":16498:16569   */\n      tag_638\n        /* \"#utility.yul\":16566:16567   */\n      0x00\n        /* \"#utility.yul\":16555:16564   */\n      dup4\n        /* \"#utility.yul\":16551:16568   */\n      add\n        /* \"#utility.yul\":16542:16548   */\n      dup6\n        /* \"#utility.yul\":16498:16569   */\n      tag_435\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":16579:16651   */\n      tag_639\n        /* \"#utility.yul\":16647:16649   */\n      0x20\n        /* \"#utility.yul\":16636:16645   */\n      dup4\n        /* \"#utility.yul\":16632:16650   */\n      add\n        /* \"#utility.yul\":16623:16629   */\n      dup5\n        /* \"#utility.yul\":16579:16651   */\n      tag_417\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":16326:16658   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16664:16840   */\n    tag_442:\n        /* \"#utility.yul\":16804:16832   */\n      0x426f6e6420746f6b656e207472616e73666572206661696c6564000000000000\n        /* \"#utility.yul\":16800:16801   */\n      0x00\n        /* \"#utility.yul\":16792:16798   */\n      dup3\n        /* \"#utility.yul\":16788:16802   */\n      add\n        /* \"#utility.yul\":16781:16833   */\n      mstore\n        /* \"#utility.yul\":16664:16840   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16846:17212   */\n    tag_443:\n        /* \"#utility.yul\":16988:16991   */\n      0x00\n        /* \"#utility.yul\":17009:17076   */\n      tag_642\n        /* \"#utility.yul\":17073:17075   */\n      0x1a\n        /* \"#utility.yul\":17068:17071   */\n      dup4\n        /* \"#utility.yul\":17009:17076   */\n      tag_406\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":17002:17076   */\n      swap2\n      pop\n        /* \"#utility.yul\":17085:17178   */\n      tag_643\n        /* \"#utility.yul\":17174:17177   */\n      dup3\n        /* \"#utility.yul\":17085:17178   */\n      tag_442\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":17203:17205   */\n      0x20\n        /* \"#utility.yul\":17198:17201   */\n      dup3\n        /* \"#utility.yul\":17194:17206   */\n      add\n        /* \"#utility.yul\":17187:17206   */\n      swap1\n      pop\n        /* \"#utility.yul\":16846:17212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17218:17637   */\n    tag_189:\n        /* \"#utility.yul\":17384:17388   */\n      0x00\n        /* \"#utility.yul\":17422:17424   */\n      0x20\n        /* \"#utility.yul\":17411:17420   */\n      dup3\n        /* \"#utility.yul\":17407:17425   */\n      add\n        /* \"#utility.yul\":17399:17425   */\n      swap1\n      pop\n        /* \"#utility.yul\":17471:17480   */\n      dup2\n        /* \"#utility.yul\":17465:17469   */\n      dup2\n        /* \"#utility.yul\":17461:17481   */\n      sub\n        /* \"#utility.yul\":17457:17458   */\n      0x00\n        /* \"#utility.yul\":17446:17455   */\n      dup4\n        /* \"#utility.yul\":17442:17459   */\n      add\n        /* \"#utility.yul\":17435:17482   */\n      mstore\n        /* \"#utility.yul\":17499:17630   */\n      tag_645\n        /* \"#utility.yul\":17625:17629   */\n      dup2\n        /* \"#utility.yul\":17499:17630   */\n      tag_443\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":17491:17630   */\n      swap1\n      pop\n        /* \"#utility.yul\":17218:17637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17643:17871   */\n    tag_444:\n        /* \"#utility.yul\":17783:17817   */\n      0x546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e677468\n        /* \"#utility.yul\":17779:17780   */\n      0x00\n        /* \"#utility.yul\":17771:17777   */\n      dup3\n        /* \"#utility.yul\":17767:17781   */\n      add\n        /* \"#utility.yul\":17760:17818   */\n      mstore\n        /* \"#utility.yul\":17852:17863   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17847:17849   */\n      0x20\n        /* \"#utility.yul\":17839:17845   */\n      dup3\n        /* \"#utility.yul\":17835:17850   */\n      add\n        /* \"#utility.yul\":17828:17864   */\n      mstore\n        /* \"#utility.yul\":17643:17871   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17877:18243   */\n    tag_445:\n        /* \"#utility.yul\":18019:18022   */\n      0x00\n        /* \"#utility.yul\":18040:18107   */\n      tag_648\n        /* \"#utility.yul\":18104:18106   */\n      0x29\n        /* \"#utility.yul\":18099:18102   */\n      dup4\n        /* \"#utility.yul\":18040:18107   */\n      tag_406\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":18033:18107   */\n      swap2\n      pop\n        /* \"#utility.yul\":18116:18209   */\n      tag_649\n        /* \"#utility.yul\":18205:18208   */\n      dup3\n        /* \"#utility.yul\":18116:18209   */\n      tag_444\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":18234:18236   */\n      0x40\n        /* \"#utility.yul\":18229:18232   */\n      dup3\n        /* \"#utility.yul\":18225:18237   */\n      add\n        /* \"#utility.yul\":18218:18237   */\n      swap1\n      pop\n        /* \"#utility.yul\":17877:18243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18249:18668   */\n    tag_236:\n        /* \"#utility.yul\":18415:18419   */\n      0x00\n        /* \"#utility.yul\":18453:18455   */\n      0x20\n        /* \"#utility.yul\":18442:18451   */\n      dup3\n        /* \"#utility.yul\":18438:18456   */\n      add\n        /* \"#utility.yul\":18430:18456   */\n      swap1\n      pop\n        /* \"#utility.yul\":18502:18511   */\n      dup2\n        /* \"#utility.yul\":18496:18500   */\n      dup2\n        /* \"#utility.yul\":18492:18512   */\n      sub\n        /* \"#utility.yul\":18488:18489   */\n      0x00\n        /* \"#utility.yul\":18477:18486   */\n      dup4\n        /* \"#utility.yul\":18473:18490   */\n      add\n        /* \"#utility.yul\":18466:18513   */\n      mstore\n        /* \"#utility.yul\":18530:18661   */\n      tag_651\n        /* \"#utility.yul\":18656:18660   */\n      dup2\n        /* \"#utility.yul\":18530:18661   */\n      tag_445\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":18522:18661   */\n      swap1\n      pop\n        /* \"#utility.yul\":18249:18668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18674:18854   */\n    tag_242:\n        /* \"#utility.yul\":18722:18799   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18719:18720   */\n      0x00\n        /* \"#utility.yul\":18712:18800   */\n      mstore\n        /* \"#utility.yul\":18819:18823   */\n      0x32\n        /* \"#utility.yul\":18816:18817   */\n      0x04\n        /* \"#utility.yul\":18809:18824   */\n      mstore\n        /* \"#utility.yul\":18843:18847   */\n      0x24\n        /* \"#utility.yul\":18840:18841   */\n      0x00\n        /* \"#utility.yul\":18833:18848   */\n      revert\n        /* \"#utility.yul\":18860:19025   */\n    tag_446:\n        /* \"#utility.yul\":19000:19017   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":18996:18997   */\n      0x00\n        /* \"#utility.yul\":18988:18994   */\n      dup3\n        /* \"#utility.yul\":18984:18998   */\n      add\n        /* \"#utility.yul\":18977:19018   */\n      mstore\n        /* \"#utility.yul\":18860:19025   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19031:19397   */\n    tag_447:\n        /* \"#utility.yul\":19173:19176   */\n      0x00\n        /* \"#utility.yul\":19194:19261   */\n      tag_655\n        /* \"#utility.yul\":19258:19260   */\n      0x0f\n        /* \"#utility.yul\":19253:19256   */\n      dup4\n        /* \"#utility.yul\":19194:19261   */\n      tag_406\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":19187:19261   */\n      swap2\n      pop\n        /* \"#utility.yul\":19270:19363   */\n      tag_656\n        /* \"#utility.yul\":19359:19362   */\n      dup3\n        /* \"#utility.yul\":19270:19363   */\n      tag_446\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":19388:19390   */\n      0x20\n        /* \"#utility.yul\":19383:19386   */\n      dup3\n        /* \"#utility.yul\":19379:19391   */\n      add\n        /* \"#utility.yul\":19372:19391   */\n      swap1\n      pop\n        /* \"#utility.yul\":19031:19397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19403:19822   */\n    tag_251:\n        /* \"#utility.yul\":19569:19573   */\n      0x00\n        /* \"#utility.yul\":19607:19609   */\n      0x20\n        /* \"#utility.yul\":19596:19605   */\n      dup3\n        /* \"#utility.yul\":19592:19610   */\n      add\n        /* \"#utility.yul\":19584:19610   */\n      swap1\n      pop\n        /* \"#utility.yul\":19656:19665   */\n      dup2\n        /* \"#utility.yul\":19650:19654   */\n      dup2\n        /* \"#utility.yul\":19646:19666   */\n      sub\n        /* \"#utility.yul\":19642:19643   */\n      0x00\n        /* \"#utility.yul\":19631:19640   */\n      dup4\n        /* \"#utility.yul\":19627:19644   */\n      add\n        /* \"#utility.yul\":19620:19667   */\n      mstore\n        /* \"#utility.yul\":19684:19815   */\n      tag_658\n        /* \"#utility.yul\":19810:19814   */\n      dup2\n        /* \"#utility.yul\":19684:19815   */\n      tag_447\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":19676:19815   */\n      swap1\n      pop\n        /* \"#utility.yul\":19403:19822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19828:20000   */\n    tag_448:\n        /* \"#utility.yul\":19968:19992   */\n      0x43616e277420636c61696d207a65726f20636f696e7300000000000000000000\n        /* \"#utility.yul\":19964:19965   */\n      0x00\n        /* \"#utility.yul\":19956:19962   */\n      dup3\n        /* \"#utility.yul\":19952:19966   */\n      add\n        /* \"#utility.yul\":19945:19993   */\n      mstore\n        /* \"#utility.yul\":19828:20000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20006:20372   */\n    tag_449:\n        /* \"#utility.yul\":20148:20151   */\n      0x00\n        /* \"#utility.yul\":20169:20236   */\n      tag_661\n        /* \"#utility.yul\":20233:20235   */\n      0x16\n        /* \"#utility.yul\":20228:20231   */\n      dup4\n        /* \"#utility.yul\":20169:20236   */\n      tag_406\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":20162:20236   */\n      swap2\n      pop\n        /* \"#utility.yul\":20245:20338   */\n      tag_662\n        /* \"#utility.yul\":20334:20337   */\n      dup3\n        /* \"#utility.yul\":20245:20338   */\n      tag_448\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":20363:20365   */\n      0x20\n        /* \"#utility.yul\":20358:20361   */\n      dup3\n        /* \"#utility.yul\":20354:20366   */\n      add\n        /* \"#utility.yul\":20347:20366   */\n      swap1\n      pop\n        /* \"#utility.yul\":20006:20372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20378:20797   */\n    tag_265:\n        /* \"#utility.yul\":20544:20548   */\n      0x00\n        /* \"#utility.yul\":20582:20584   */\n      0x20\n        /* \"#utility.yul\":20571:20580   */\n      dup3\n        /* \"#utility.yul\":20567:20585   */\n      add\n        /* \"#utility.yul\":20559:20585   */\n      swap1\n      pop\n        /* \"#utility.yul\":20631:20640   */\n      dup2\n        /* \"#utility.yul\":20625:20629   */\n      dup2\n        /* \"#utility.yul\":20621:20641   */\n      sub\n        /* \"#utility.yul\":20617:20618   */\n      0x00\n        /* \"#utility.yul\":20606:20615   */\n      dup4\n        /* \"#utility.yul\":20602:20619   */\n      add\n        /* \"#utility.yul\":20595:20642   */\n      mstore\n        /* \"#utility.yul\":20659:20790   */\n      tag_664\n        /* \"#utility.yul\":20785:20789   */\n      dup2\n        /* \"#utility.yul\":20659:20790   */\n      tag_449\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":20651:20790   */\n      swap1\n      pop\n        /* \"#utility.yul\":20378:20797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20803:20946   */\n    tag_450:\n        /* \"#utility.yul\":20860:20865   */\n      0x00\n        /* \"#utility.yul\":20891:20897   */\n      dup2\n        /* \"#utility.yul\":20885:20898   */\n      mload\n        /* \"#utility.yul\":20876:20898   */\n      swap1\n      pop\n        /* \"#utility.yul\":20907:20940   */\n      tag_666\n        /* \"#utility.yul\":20934:20939   */\n      dup2\n        /* \"#utility.yul\":20907:20940   */\n      tag_415\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":20803:20946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20952:21303   */\n    tag_286:\n        /* \"#utility.yul\":21022:21028   */\n      0x00\n        /* \"#utility.yul\":21071:21073   */\n      0x20\n        /* \"#utility.yul\":21059:21068   */\n      dup3\n        /* \"#utility.yul\":21050:21057   */\n      dup5\n        /* \"#utility.yul\":21046:21069   */\n      sub\n        /* \"#utility.yul\":21042:21074   */\n      slt\n        /* \"#utility.yul\":21039:21158   */\n      iszero\n      tag_668\n      jumpi\n        /* \"#utility.yul\":21077:21156   */\n      tag_669\n      tag_398\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":21039:21158   */\n    tag_668:\n        /* \"#utility.yul\":21197:21198   */\n      0x00\n        /* \"#utility.yul\":21222:21286   */\n      tag_670\n        /* \"#utility.yul\":21278:21285   */\n      dup5\n        /* \"#utility.yul\":21269:21275   */\n      dup3\n        /* \"#utility.yul\":21258:21267   */\n      dup6\n        /* \"#utility.yul\":21254:21276   */\n      add\n        /* \"#utility.yul\":21222:21286   */\n      tag_450\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":21212:21286   */\n      swap2\n      pop\n        /* \"#utility.yul\":21168:21296   */\n      pop\n        /* \"#utility.yul\":20952:21303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21309:21487   */\n    tag_451:\n        /* \"#utility.yul\":21449:21479   */\n      0x4e6f20696e766573746f722066756e647320617661696c61626c652e00000000\n        /* \"#utility.yul\":21445:21446   */\n      0x00\n        /* \"#utility.yul\":21437:21443   */\n      dup3\n        /* \"#utility.yul\":21433:21447   */\n      add\n        /* \"#utility.yul\":21426:21480   */\n      mstore\n        /* \"#utility.yul\":21309:21487   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21493:21859   */\n    tag_452:\n        /* \"#utility.yul\":21635:21638   */\n      0x00\n        /* \"#utility.yul\":21656:21723   */\n      tag_673\n        /* \"#utility.yul\":21720:21722   */\n      0x1c\n        /* \"#utility.yul\":21715:21718   */\n      dup4\n        /* \"#utility.yul\":21656:21723   */\n      tag_406\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":21649:21723   */\n      swap2\n      pop\n        /* \"#utility.yul\":21732:21825   */\n      tag_674\n        /* \"#utility.yul\":21821:21824   */\n      dup3\n        /* \"#utility.yul\":21732:21825   */\n      tag_451\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":21850:21852   */\n      0x20\n        /* \"#utility.yul\":21845:21848   */\n      dup3\n        /* \"#utility.yul\":21841:21853   */\n      add\n        /* \"#utility.yul\":21834:21853   */\n      swap1\n      pop\n        /* \"#utility.yul\":21493:21859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21865:22284   */\n    tag_289:\n        /* \"#utility.yul\":22031:22035   */\n      0x00\n        /* \"#utility.yul\":22069:22071   */\n      0x20\n        /* \"#utility.yul\":22058:22067   */\n      dup3\n        /* \"#utility.yul\":22054:22072   */\n      add\n        /* \"#utility.yul\":22046:22072   */\n      swap1\n      pop\n        /* \"#utility.yul\":22118:22127   */\n      dup2\n        /* \"#utility.yul\":22112:22116   */\n      dup2\n        /* \"#utility.yul\":22108:22128   */\n      sub\n        /* \"#utility.yul\":22104:22105   */\n      0x00\n        /* \"#utility.yul\":22093:22102   */\n      dup4\n        /* \"#utility.yul\":22089:22106   */\n      add\n        /* \"#utility.yul\":22082:22129   */\n      mstore\n        /* \"#utility.yul\":22146:22277   */\n      tag_676\n        /* \"#utility.yul\":22272:22276   */\n      dup2\n        /* \"#utility.yul\":22146:22277   */\n      tag_452\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":22138:22277   */\n      swap1\n      pop\n        /* \"#utility.yul\":21865:22284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22290:22471   */\n    tag_453:\n        /* \"#utility.yul\":22430:22463   */\n      0x4661696c656420746f207472616e7366657220737461626c6520636f696e7300\n        /* \"#utility.yul\":22426:22427   */\n      0x00\n        /* \"#utility.yul\":22418:22424   */\n      dup3\n        /* \"#utility.yul\":22414:22428   */\n      add\n        /* \"#utility.yul\":22407:22464   */\n      mstore\n        /* \"#utility.yul\":22290:22471   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22477:22843   */\n    tag_454:\n        /* \"#utility.yul\":22619:22622   */\n      0x00\n        /* \"#utility.yul\":22640:22707   */\n      tag_679\n        /* \"#utility.yul\":22704:22706   */\n      0x1f\n        /* \"#utility.yul\":22699:22702   */\n      dup4\n        /* \"#utility.yul\":22640:22707   */\n      tag_406\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":22633:22707   */\n      swap2\n      pop\n        /* \"#utility.yul\":22716:22809   */\n      tag_680\n        /* \"#utility.yul\":22805:22808   */\n      dup3\n        /* \"#utility.yul\":22716:22809   */\n      tag_453\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":22834:22836   */\n      0x20\n        /* \"#utility.yul\":22829:22832   */\n      dup3\n        /* \"#utility.yul\":22825:22837   */\n      add\n        /* \"#utility.yul\":22818:22837   */\n      swap1\n      pop\n        /* \"#utility.yul\":22477:22843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22849:23268   */\n    tag_296:\n        /* \"#utility.yul\":23015:23019   */\n      0x00\n        /* \"#utility.yul\":23053:23055   */\n      0x20\n        /* \"#utility.yul\":23042:23051   */\n      dup3\n        /* \"#utility.yul\":23038:23056   */\n      add\n        /* \"#utility.yul\":23030:23056   */\n      swap1\n      pop\n        /* \"#utility.yul\":23102:23111   */\n      dup2\n        /* \"#utility.yul\":23096:23100   */\n      dup2\n        /* \"#utility.yul\":23092:23112   */\n      sub\n        /* \"#utility.yul\":23088:23089   */\n      0x00\n        /* \"#utility.yul\":23077:23086   */\n      dup4\n        /* \"#utility.yul\":23073:23090   */\n      add\n        /* \"#utility.yul\":23066:23113   */\n      mstore\n        /* \"#utility.yul\":23130:23261   */\n      tag_682\n        /* \"#utility.yul\":23256:23260   */\n      dup2\n        /* \"#utility.yul\":23130:23261   */\n      tag_454\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":23122:23261   */\n      swap1\n      pop\n        /* \"#utility.yul\":22849:23268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23274:23716   */\n    tag_322:\n        /* \"#utility.yul\":23423:23427   */\n      0x00\n        /* \"#utility.yul\":23461:23463   */\n      0x60\n        /* \"#utility.yul\":23450:23459   */\n      dup3\n        /* \"#utility.yul\":23446:23464   */\n      add\n        /* \"#utility.yul\":23438:23464   */\n      swap1\n      pop\n        /* \"#utility.yul\":23474:23545   */\n      tag_684\n        /* \"#utility.yul\":23542:23543   */\n      0x00\n        /* \"#utility.yul\":23531:23540   */\n      dup4\n        /* \"#utility.yul\":23527:23544   */\n      add\n        /* \"#utility.yul\":23518:23524   */\n      dup7\n        /* \"#utility.yul\":23474:23545   */\n      tag_435\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":23555:23627   */\n      tag_685\n        /* \"#utility.yul\":23623:23625   */\n      0x20\n        /* \"#utility.yul\":23612:23621   */\n      dup4\n        /* \"#utility.yul\":23608:23626   */\n      add\n        /* \"#utility.yul\":23599:23605   */\n      dup6\n        /* \"#utility.yul\":23555:23627   */\n      tag_417\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":23637:23709   */\n      tag_686\n        /* \"#utility.yul\":23705:23707   */\n      0x40\n        /* \"#utility.yul\":23694:23703   */\n      dup4\n        /* \"#utility.yul\":23690:23708   */\n      add\n        /* \"#utility.yul\":23681:23687   */\n      dup5\n        /* \"#utility.yul\":23637:23709   */\n      tag_417\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":23274:23716   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23722:24054   */\n    tag_375:\n        /* \"#utility.yul\":23843:23847   */\n      0x00\n        /* \"#utility.yul\":23881:23883   */\n      0x40\n        /* \"#utility.yul\":23870:23879   */\n      dup3\n        /* \"#utility.yul\":23866:23884   */\n      add\n        /* \"#utility.yul\":23858:23884   */\n      swap1\n      pop\n        /* \"#utility.yul\":23894:23965   */\n      tag_688\n        /* \"#utility.yul\":23962:23963   */\n      0x00\n        /* \"#utility.yul\":23951:23960   */\n      dup4\n        /* \"#utility.yul\":23947:23964   */\n      add\n        /* \"#utility.yul\":23938:23944   */\n      dup6\n        /* \"#utility.yul\":23894:23965   */\n      tag_435\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":23975:24047   */\n      tag_689\n        /* \"#utility.yul\":24043:24045   */\n      0x20\n        /* \"#utility.yul\":24032:24041   */\n      dup4\n        /* \"#utility.yul\":24028:24046   */\n      add\n        /* \"#utility.yul\":24019:24025   */\n      dup5\n        /* \"#utility.yul\":23975:24047   */\n      tag_421\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":23722:24054   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24060:24251   */\n    tag_390:\n        /* \"#utility.yul\":24100:24103   */\n      0x00\n        /* \"#utility.yul\":24119:24139   */\n      tag_691\n        /* \"#utility.yul\":24137:24138   */\n      dup3\n        /* \"#utility.yul\":24119:24139   */\n      tag_414\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":24114:24139   */\n      swap2\n      pop\n        /* \"#utility.yul\":24153:24173   */\n      tag_692\n        /* \"#utility.yul\":24171:24172   */\n      dup4\n        /* \"#utility.yul\":24153:24173   */\n      tag_414\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":24148:24173   */\n      swap3\n      pop\n        /* \"#utility.yul\":24196:24197   */\n      dup3\n        /* \"#utility.yul\":24193:24194   */\n      dup3\n        /* \"#utility.yul\":24189:24198   */\n      add\n        /* \"#utility.yul\":24182:24198   */\n      swap1\n      pop\n        /* \"#utility.yul\":24217:24220   */\n      dup1\n        /* \"#utility.yul\":24214:24215   */\n      dup3\n        /* \"#utility.yul\":24211:24221   */\n      gt\n        /* \"#utility.yul\":24208:24244   */\n      iszero\n      tag_693\n      jumpi\n        /* \"#utility.yul\":24224:24242   */\n      tag_694\n      tag_437\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":24208:24244   */\n    tag_693:\n        /* \"#utility.yul\":24060:24251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e1d951ad24e5b242d59fbe09145cfe04ae4ea37f3a54f755a9e941cd3b583f7464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1278": {
									"entryPoint": null,
									"id": 1278,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1489": {
									"entryPoint": null,
									"id": 1489,
									"parameterSlots": 9,
									"returnSlots": 0
								},
								"@_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 503,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_870": {
									"entryPoint": 757,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1226": {
									"entryPoint": 990,
									"id": 1226,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_requireNotPaused_1315": {
									"entryPoint": 1055,
									"id": 1315,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1187": {
									"entryPoint": 1019,
									"id": 1187,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1722": {
									"entryPoint": 997,
									"id": 1722,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 1126,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_594": {
									"entryPoint": 749,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 890,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@paused_1303": {
									"entryPoint": 1663,
									"id": 1303,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 9
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3491,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2850,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2932,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2449,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2793,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3227,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1684,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2218,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2350,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2387,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12705:13",
										"nodeType": "YulBlock",
										"src": "0:12705:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "890:32:13",
													"nodeType": "YulBlock",
													"src": "890:32:13",
													"statements": [
														{
															"nativeSrc": "900:16:13",
															"nodeType": "YulAssignment",
															"src": "900:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:13",
																"nodeType": "YulIdentifier",
																"src": "911:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:13",
														"nodeType": "YulTypedName",
														"src": "872:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:13",
														"nodeType": "YulTypedName",
														"src": "882:7:13",
														"type": ""
													}
												],
												"src": "845:77:13"
											},
											{
												"body": {
													"nativeSrc": "971:79:13",
													"nodeType": "YulBlock",
													"src": "971:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:13",
																"nodeType": "YulBlock",
																"src": "1028:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:13"
																			},
																			"nativeSrc": "1030:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:13"
																		},
																		"nativeSrc": "1030:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:13"
																				},
																				"nativeSrc": "1001:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:13"
																		},
																		"nativeSrc": "991:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:13"
																},
																"nativeSrc": "984:43:13",
																"nodeType": "YulFunctionCall",
																"src": "984:43:13"
															},
															"nativeSrc": "981:63:13",
															"nodeType": "YulIf",
															"src": "981:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:13",
														"nodeType": "YulTypedName",
														"src": "964:5:13",
														"type": ""
													}
												],
												"src": "928:122:13"
											},
											{
												"body": {
													"nativeSrc": "1119:80:13",
													"nodeType": "YulBlock",
													"src": "1119:80:13",
													"statements": [
														{
															"nativeSrc": "1129:22:13",
															"nodeType": "YulAssignment",
															"src": "1129:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:13"
																},
																"nativeSrc": "1138:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:13"
																},
																"nativeSrc": "1160:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:13"
															},
															"nativeSrc": "1160:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:13",
														"nodeType": "YulTypedName",
														"src": "1097:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:13",
														"nodeType": "YulTypedName",
														"src": "1105:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:13",
														"nodeType": "YulTypedName",
														"src": "1113:5:13",
														"type": ""
													}
												],
												"src": "1056:143:13"
											},
											{
												"body": {
													"nativeSrc": "1418:1392:13",
													"nodeType": "YulBlock",
													"src": "1418:1392:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1465:83:13",
																"nodeType": "YulBlock",
																"src": "1465:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1467:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1467:77:13"
																			},
																			"nativeSrc": "1467:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1467:79:13"
																		},
																		"nativeSrc": "1467:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1467:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1439:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1448:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1435:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:13"
																		},
																		"nativeSrc": "1435:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1460:3:13",
																		"nodeType": "YulLiteral",
																		"src": "1460:3:13",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1431:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:13"
																},
																"nativeSrc": "1431:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1431:33:13"
															},
															"nativeSrc": "1428:120:13",
															"nodeType": "YulIf",
															"src": "1428:120:13"
														},
														{
															"nativeSrc": "1558:128:13",
															"nodeType": "YulBlock",
															"src": "1558:128:13",
															"statements": [
																{
																	"nativeSrc": "1573:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1573:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1587:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1587:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1577:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1577:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1602:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1602:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1648:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1648:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1659:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1659:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1644:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1644:3:13"
																				},
																				"nativeSrc": "1644:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1644:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1668:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1668:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1612:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1612:31:13"
																		},
																		"nativeSrc": "1612:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1612:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1602:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1602:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1696:129:13",
															"nodeType": "YulBlock",
															"src": "1696:129:13",
															"statements": [
																{
																	"nativeSrc": "1711:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1711:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1725:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1725:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1715:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1715:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1741:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1741:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1787:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1787:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1798:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1798:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1783:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1783:3:13"
																				},
																				"nativeSrc": "1783:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1783:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1807:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1807:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1751:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1751:31:13"
																		},
																		"nativeSrc": "1751:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1751:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1741:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1741:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1835:129:13",
															"nodeType": "YulBlock",
															"src": "1835:129:13",
															"statements": [
																{
																	"nativeSrc": "1850:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1850:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1864:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1864:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1854:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1854:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1880:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1880:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1926:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1926:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1937:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1937:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1922:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1922:3:13"
																				},
																				"nativeSrc": "1922:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1922:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1946:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1946:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1890:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1890:31:13"
																		},
																		"nativeSrc": "1890:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1890:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1880:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1880:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1974:129:13",
															"nodeType": "YulBlock",
															"src": "1974:129:13",
															"statements": [
																{
																	"nativeSrc": "1989:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1989:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2003:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2003:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1993:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1993:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2019:74:13",
																	"nodeType": "YulAssignment",
																	"src": "2019:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2065:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2065:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2076:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2076:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2061:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2061:3:13"
																				},
																				"nativeSrc": "2061:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2061:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2085:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2085:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2029:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "2029:31:13"
																		},
																		"nativeSrc": "2029:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2029:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2019:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2019:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2113:130:13",
															"nodeType": "YulBlock",
															"src": "2113:130:13",
															"statements": [
																{
																	"nativeSrc": "2128:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2128:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2142:3:13",
																		"nodeType": "YulLiteral",
																		"src": "2142:3:13",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2132:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2132:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2159:74:13",
																	"nodeType": "YulAssignment",
																	"src": "2159:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2205:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2205:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2216:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2216:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2201:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2201:3:13"
																				},
																				"nativeSrc": "2201:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2201:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2225:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2225:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2169:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "2169:31:13"
																		},
																		"nativeSrc": "2169:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2169:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2159:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2159:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2253:130:13",
															"nodeType": "YulBlock",
															"src": "2253:130:13",
															"statements": [
																{
																	"nativeSrc": "2268:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2268:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2282:3:13",
																		"nodeType": "YulLiteral",
																		"src": "2282:3:13",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2272:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2272:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2299:74:13",
																	"nodeType": "YulAssignment",
																	"src": "2299:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2345:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2345:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2356:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2356:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2341:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2341:3:13"
																				},
																				"nativeSrc": "2341:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2341:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2365:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2365:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2309:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "2309:31:13"
																		},
																		"nativeSrc": "2309:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2309:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "2299:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2299:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2393:130:13",
															"nodeType": "YulBlock",
															"src": "2393:130:13",
															"statements": [
																{
																	"nativeSrc": "2408:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2408:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2422:3:13",
																		"nodeType": "YulLiteral",
																		"src": "2422:3:13",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2412:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2412:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2439:74:13",
																	"nodeType": "YulAssignment",
																	"src": "2439:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2485:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2485:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2496:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2496:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2481:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2481:3:13"
																				},
																				"nativeSrc": "2481:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2481:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2505:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2505:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2449:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "2449:31:13"
																		},
																		"nativeSrc": "2449:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2449:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "2439:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2439:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2533:130:13",
															"nodeType": "YulBlock",
															"src": "2533:130:13",
															"statements": [
																{
																	"nativeSrc": "2548:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2548:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2562:3:13",
																		"nodeType": "YulLiteral",
																		"src": "2562:3:13",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2552:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2552:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2579:74:13",
																	"nodeType": "YulAssignment",
																	"src": "2579:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2625:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2625:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2636:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2636:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2621:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2621:3:13"
																				},
																				"nativeSrc": "2621:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2621:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2645:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2589:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "2589:31:13"
																		},
																		"nativeSrc": "2589:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2589:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "2579:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2579:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2673:130:13",
															"nodeType": "YulBlock",
															"src": "2673:130:13",
															"statements": [
																{
																	"nativeSrc": "2688:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2688:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2702:3:13",
																		"nodeType": "YulLiteral",
																		"src": "2702:3:13",
																		"type": "",
																		"value": "256"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2692:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2692:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2719:74:13",
																	"nodeType": "YulAssignment",
																	"src": "2719:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2765:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2765:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2776:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2776:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2761:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2761:3:13"
																				},
																				"nativeSrc": "2761:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2761:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2785:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2785:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2729:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "2729:31:13"
																		},
																		"nativeSrc": "2729:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2729:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value8",
																			"nativeSrc": "2719:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2719:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "1205:1605:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1324:9:13",
														"nodeType": "YulTypedName",
														"src": "1324:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1335:7:13",
														"nodeType": "YulTypedName",
														"src": "1335:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1347:6:13",
														"nodeType": "YulTypedName",
														"src": "1347:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1355:6:13",
														"nodeType": "YulTypedName",
														"src": "1355:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1363:6:13",
														"nodeType": "YulTypedName",
														"src": "1363:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1371:6:13",
														"nodeType": "YulTypedName",
														"src": "1371:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1379:6:13",
														"nodeType": "YulTypedName",
														"src": "1379:6:13",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1387:6:13",
														"nodeType": "YulTypedName",
														"src": "1387:6:13",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "1395:6:13",
														"nodeType": "YulTypedName",
														"src": "1395:6:13",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "1403:6:13",
														"nodeType": "YulTypedName",
														"src": "1403:6:13",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "1411:6:13",
														"nodeType": "YulTypedName",
														"src": "1411:6:13",
														"type": ""
													}
												],
												"src": "1205:1605:13"
											},
											{
												"body": {
													"nativeSrc": "2875:40:13",
													"nodeType": "YulBlock",
													"src": "2875:40:13",
													"statements": [
														{
															"nativeSrc": "2886:22:13",
															"nodeType": "YulAssignment",
															"src": "2886:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2902:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2902:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2896:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2896:5:13"
																},
																"nativeSrc": "2896:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2896:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2886:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2886:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2816:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2858:5:13",
														"nodeType": "YulTypedName",
														"src": "2858:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2868:6:13",
														"nodeType": "YulTypedName",
														"src": "2868:6:13",
														"type": ""
													}
												],
												"src": "2816:99:13"
											},
											{
												"body": {
													"nativeSrc": "2949:152:13",
													"nodeType": "YulBlock",
													"src": "2949:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2966:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2966:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2969:77:13",
																		"nodeType": "YulLiteral",
																		"src": "2969:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2959:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2959:6:13"
																},
																"nativeSrc": "2959:88:13",
																"nodeType": "YulFunctionCall",
																"src": "2959:88:13"
															},
															"nativeSrc": "2959:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "2959:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3063:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3063:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3066:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3066:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3056:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3056:6:13"
																},
																"nativeSrc": "3056:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3056:15:13"
															},
															"nativeSrc": "3056:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3056:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3087:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3087:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3090:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3090:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3080:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3080:6:13"
																},
																"nativeSrc": "3080:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3080:15:13"
															},
															"nativeSrc": "3080:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3080:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2921:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "2921:180:13"
											},
											{
												"body": {
													"nativeSrc": "3135:152:13",
													"nodeType": "YulBlock",
													"src": "3135:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3152:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3152:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3155:77:13",
																		"nodeType": "YulLiteral",
																		"src": "3155:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3145:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3145:6:13"
																},
																"nativeSrc": "3145:88:13",
																"nodeType": "YulFunctionCall",
																"src": "3145:88:13"
															},
															"nativeSrc": "3145:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "3145:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3249:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3249:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3252:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3252:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3242:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3242:6:13"
																},
																"nativeSrc": "3242:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3242:15:13"
															},
															"nativeSrc": "3242:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3242:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3273:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3273:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3276:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3276:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3266:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3266:6:13"
																},
																"nativeSrc": "3266:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3266:15:13"
															},
															"nativeSrc": "3266:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3266:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3107:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "3107:180:13"
											},
											{
												"body": {
													"nativeSrc": "3344:269:13",
													"nodeType": "YulBlock",
													"src": "3344:269:13",
													"statements": [
														{
															"nativeSrc": "3354:22:13",
															"nodeType": "YulAssignment",
															"src": "3354:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3368:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3368:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3374:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3374:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3364:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3364:3:13"
																},
																"nativeSrc": "3364:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3364:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3354:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3354:6:13"
																}
															]
														},
														{
															"nativeSrc": "3385:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3385:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3415:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3415:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3421:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3421:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3411:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3411:3:13"
																},
																"nativeSrc": "3411:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3411:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3389:18:13",
																	"nodeType": "YulTypedName",
																	"src": "3389:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3462:51:13",
																"nodeType": "YulBlock",
																"src": "3462:51:13",
																"statements": [
																	{
																		"nativeSrc": "3476:27:13",
																		"nodeType": "YulAssignment",
																		"src": "3476:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3490:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "3490:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3498:4:13",
																					"nodeType": "YulLiteral",
																					"src": "3498:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3486:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3486:3:13"
																			},
																			"nativeSrc": "3486:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3486:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3476:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3476:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3442:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "3442:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3435:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3435:6:13"
																},
																"nativeSrc": "3435:26:13",
																"nodeType": "YulFunctionCall",
																"src": "3435:26:13"
															},
															"nativeSrc": "3432:81:13",
															"nodeType": "YulIf",
															"src": "3432:81:13"
														},
														{
															"body": {
																"nativeSrc": "3565:42:13",
																"nodeType": "YulBlock",
																"src": "3565:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "3579:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "3579:16:13"
																			},
																			"nativeSrc": "3579:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3579:18:13"
																		},
																		"nativeSrc": "3579:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3579:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3529:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "3529:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3552:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3552:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3560:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3560:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3549:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3549:2:13"
																		},
																		"nativeSrc": "3549:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3549:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3526:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3526:2:13"
																},
																"nativeSrc": "3526:38:13",
																"nodeType": "YulFunctionCall",
																"src": "3526:38:13"
															},
															"nativeSrc": "3523:84:13",
															"nodeType": "YulIf",
															"src": "3523:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3293:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3328:4:13",
														"nodeType": "YulTypedName",
														"src": "3328:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3337:6:13",
														"nodeType": "YulTypedName",
														"src": "3337:6:13",
														"type": ""
													}
												],
												"src": "3293:320:13"
											},
											{
												"body": {
													"nativeSrc": "3673:87:13",
													"nodeType": "YulBlock",
													"src": "3673:87:13",
													"statements": [
														{
															"nativeSrc": "3683:11:13",
															"nodeType": "YulAssignment",
															"src": "3683:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "3691:3:13",
																"nodeType": "YulIdentifier",
																"src": "3691:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3683:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3683:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3711:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3711:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "3714:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3714:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3704:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3704:6:13"
																},
																"nativeSrc": "3704:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3704:14:13"
															},
															"nativeSrc": "3704:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "3704:14:13"
														},
														{
															"nativeSrc": "3727:26:13",
															"nodeType": "YulAssignment",
															"src": "3727:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3745:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3745:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3748:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3748:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3735:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3735:9:13"
																},
																"nativeSrc": "3735:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3735:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3727:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3727:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "3619:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3660:3:13",
														"nodeType": "YulTypedName",
														"src": "3660:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3668:4:13",
														"nodeType": "YulTypedName",
														"src": "3668:4:13",
														"type": ""
													}
												],
												"src": "3619:141:13"
											},
											{
												"body": {
													"nativeSrc": "3810:49:13",
													"nodeType": "YulBlock",
													"src": "3810:49:13",
													"statements": [
														{
															"nativeSrc": "3820:33:13",
															"nodeType": "YulAssignment",
															"src": "3820:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3838:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3838:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3845:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3845:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3834:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3834:3:13"
																		},
																		"nativeSrc": "3834:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3834:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3850:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3850:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3830:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3830:3:13"
																},
																"nativeSrc": "3830:23:13",
																"nodeType": "YulFunctionCall",
																"src": "3830:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3820:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "3766:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3793:5:13",
														"nodeType": "YulTypedName",
														"src": "3793:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3803:6:13",
														"nodeType": "YulTypedName",
														"src": "3803:6:13",
														"type": ""
													}
												],
												"src": "3766:93:13"
											},
											{
												"body": {
													"nativeSrc": "3918:54:13",
													"nodeType": "YulBlock",
													"src": "3918:54:13",
													"statements": [
														{
															"nativeSrc": "3928:37:13",
															"nodeType": "YulAssignment",
															"src": "3928:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3953:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3953:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3959:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3959:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3949:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3949:3:13"
																},
																"nativeSrc": "3949:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3949:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3928:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "3928:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "3865:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3893:4:13",
														"nodeType": "YulTypedName",
														"src": "3893:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3899:5:13",
														"nodeType": "YulTypedName",
														"src": "3899:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3909:8:13",
														"nodeType": "YulTypedName",
														"src": "3909:8:13",
														"type": ""
													}
												],
												"src": "3865:107:13"
											},
											{
												"body": {
													"nativeSrc": "4054:317:13",
													"nodeType": "YulBlock",
													"src": "4054:317:13",
													"statements": [
														{
															"nativeSrc": "4064:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4064:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4085:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "4085:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4097:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4097:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4081:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4081:3:13"
																},
																"nativeSrc": "4081:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4081:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4068:9:13",
																	"nodeType": "YulTypedName",
																	"src": "4068:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4108:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4108:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4139:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4139:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4150:66:13",
																		"nodeType": "YulLiteral",
																		"src": "4150:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4120:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4120:18:13"
																},
																"nativeSrc": "4120:97:13",
																"nodeType": "YulFunctionCall",
																"src": "4120:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4112:4:13",
																	"nodeType": "YulTypedName",
																	"src": "4112:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4226:51:13",
															"nodeType": "YulAssignment",
															"src": "4226:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4257:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4257:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4268:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "4268:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4238:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4238:18:13"
																},
																"nativeSrc": "4238:39:13",
																"nodeType": "YulFunctionCall",
																"src": "4238:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4226:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4226:8:13"
																}
															]
														},
														{
															"nativeSrc": "4286:30:13",
															"nodeType": "YulAssignment",
															"src": "4286:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4299:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4299:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4310:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4310:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4306:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4306:3:13"
																		},
																		"nativeSrc": "4306:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4306:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4295:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4295:3:13"
																},
																"nativeSrc": "4295:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4295:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4286:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4286:5:13"
																}
															]
														},
														{
															"nativeSrc": "4325:40:13",
															"nodeType": "YulAssignment",
															"src": "4325:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4338:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4338:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4349:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "4349:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4359:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4359:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4345:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4345:3:13"
																		},
																		"nativeSrc": "4345:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4345:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4335:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4335:2:13"
																},
																"nativeSrc": "4335:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4335:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4325:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4325:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "3978:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4015:5:13",
														"nodeType": "YulTypedName",
														"src": "4015:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4022:10:13",
														"nodeType": "YulTypedName",
														"src": "4022:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4034:8:13",
														"nodeType": "YulTypedName",
														"src": "4034:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4047:6:13",
														"nodeType": "YulTypedName",
														"src": "4047:6:13",
														"type": ""
													}
												],
												"src": "3978:393:13"
											},
											{
												"body": {
													"nativeSrc": "4409:28:13",
													"nodeType": "YulBlock",
													"src": "4409:28:13",
													"statements": [
														{
															"nativeSrc": "4419:12:13",
															"nodeType": "YulAssignment",
															"src": "4419:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "4426:5:13",
																"nodeType": "YulIdentifier",
																"src": "4426:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4419:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4419:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4377:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4395:5:13",
														"nodeType": "YulTypedName",
														"src": "4395:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4405:3:13",
														"nodeType": "YulTypedName",
														"src": "4405:3:13",
														"type": ""
													}
												],
												"src": "4377:60:13"
											},
											{
												"body": {
													"nativeSrc": "4503:82:13",
													"nodeType": "YulBlock",
													"src": "4503:82:13",
													"statements": [
														{
															"nativeSrc": "4513:66:13",
															"nodeType": "YulAssignment",
															"src": "4513:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4571:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4571:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4553:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "4553:17:13"
																				},
																				"nativeSrc": "4553:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4553:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4544:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "4544:8:13"
																		},
																		"nativeSrc": "4544:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4544:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4526:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "4526:17:13"
																},
																"nativeSrc": "4526:53:13",
																"nodeType": "YulFunctionCall",
																"src": "4526:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4513:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4513:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4443:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4483:5:13",
														"nodeType": "YulTypedName",
														"src": "4483:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4493:9:13",
														"nodeType": "YulTypedName",
														"src": "4493:9:13",
														"type": ""
													}
												],
												"src": "4443:142:13"
											},
											{
												"body": {
													"nativeSrc": "4638:28:13",
													"nodeType": "YulBlock",
													"src": "4638:28:13",
													"statements": [
														{
															"nativeSrc": "4648:12:13",
															"nodeType": "YulAssignment",
															"src": "4648:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "4655:5:13",
																"nodeType": "YulIdentifier",
																"src": "4655:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4648:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4648:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "4591:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4624:5:13",
														"nodeType": "YulTypedName",
														"src": "4624:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4634:3:13",
														"nodeType": "YulTypedName",
														"src": "4634:3:13",
														"type": ""
													}
												],
												"src": "4591:75:13"
											},
											{
												"body": {
													"nativeSrc": "4748:193:13",
													"nodeType": "YulBlock",
													"src": "4748:193:13",
													"statements": [
														{
															"nativeSrc": "4758:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4758:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "4813:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "4813:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "4782:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "4782:30:13"
																},
																"nativeSrc": "4782:39:13",
																"nodeType": "YulFunctionCall",
																"src": "4782:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "4762:16:13",
																	"nodeType": "YulTypedName",
																	"src": "4762:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4837:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4837:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "4877:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "4877:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "4871:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "4871:5:13"
																				},
																				"nativeSrc": "4871:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4871:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4884:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4884:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "4916:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "4916:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "4892:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "4892:23:13"
																				},
																				"nativeSrc": "4892:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4892:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "4843:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "4843:27:13"
																		},
																		"nativeSrc": "4843:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4843:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "4830:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4830:6:13"
																},
																"nativeSrc": "4830:105:13",
																"nodeType": "YulFunctionCall",
																"src": "4830:105:13"
															},
															"nativeSrc": "4830:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "4830:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "4672:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4725:4:13",
														"nodeType": "YulTypedName",
														"src": "4725:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4731:6:13",
														"nodeType": "YulTypedName",
														"src": "4731:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "4739:7:13",
														"nodeType": "YulTypedName",
														"src": "4739:7:13",
														"type": ""
													}
												],
												"src": "4672:269:13"
											},
											{
												"body": {
													"nativeSrc": "4996:24:13",
													"nodeType": "YulBlock",
													"src": "4996:24:13",
													"statements": [
														{
															"nativeSrc": "5006:8:13",
															"nodeType": "YulAssignment",
															"src": "5006:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5013:1:13",
																"nodeType": "YulLiteral",
																"src": "5013:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5006:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5006:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4947:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4992:3:13",
														"nodeType": "YulTypedName",
														"src": "4992:3:13",
														"type": ""
													}
												],
												"src": "4947:73:13"
											},
											{
												"body": {
													"nativeSrc": "5079:136:13",
													"nodeType": "YulBlock",
													"src": "5079:136:13",
													"statements": [
														{
															"nativeSrc": "5089:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5089:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5103:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "5103:30:13"
																},
																"nativeSrc": "5103:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5103:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5093:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5093:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5188:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5188:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5194:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5194:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5202:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5144:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5144:43:13"
																},
																"nativeSrc": "5144:65:13",
																"nodeType": "YulFunctionCall",
																"src": "5144:65:13"
															},
															"nativeSrc": "5144:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "5144:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5026:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5065:4:13",
														"nodeType": "YulTypedName",
														"src": "5065:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5071:6:13",
														"nodeType": "YulTypedName",
														"src": "5071:6:13",
														"type": ""
													}
												],
												"src": "5026:189:13"
											},
											{
												"body": {
													"nativeSrc": "5271:136:13",
													"nodeType": "YulBlock",
													"src": "5271:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5338:63:13",
																"nodeType": "YulBlock",
																"src": "5338:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5382:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5382:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5389:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5389:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5352:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "5352:29:13"
																			},
																			"nativeSrc": "5352:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5352:39:13"
																		},
																		"nativeSrc": "5352:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5352:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5291:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5291:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5298:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5298:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5288:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5288:2:13"
																},
																"nativeSrc": "5288:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5288:14:13"
															},
															"nativeSrc": "5281:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5303:26:13",
																"nodeType": "YulBlock",
																"src": "5303:26:13",
																"statements": [
																	{
																		"nativeSrc": "5305:22:13",
																		"nodeType": "YulAssignment",
																		"src": "5305:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5318:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5318:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5325:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5325:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5314:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5314:3:13"
																			},
																			"nativeSrc": "5314:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5314:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5305:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5305:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5285:2:13",
																"nodeType": "YulBlock",
																"src": "5285:2:13",
																"statements": []
															},
															"src": "5281:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5221:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5259:5:13",
														"nodeType": "YulTypedName",
														"src": "5259:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5266:3:13",
														"nodeType": "YulTypedName",
														"src": "5266:3:13",
														"type": ""
													}
												],
												"src": "5221:186:13"
											},
											{
												"body": {
													"nativeSrc": "5492:464:13",
													"nodeType": "YulBlock",
													"src": "5492:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5518:431:13",
																"nodeType": "YulBlock",
																"src": "5518:431:13",
																"statements": [
																	{
																		"nativeSrc": "5532:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5532:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "5580:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5580:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "5548:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "5548:31:13"
																			},
																			"nativeSrc": "5548:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5548:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "5536:8:13",
																				"nodeType": "YulTypedName",
																				"src": "5536:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5599:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5599:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "5622:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "5622:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "5650:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "5650:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "5632:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "5632:17:13"
																					},
																					"nativeSrc": "5632:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5632:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5618:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5618:3:13"
																			},
																			"nativeSrc": "5618:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5618:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5603:11:13",
																				"nodeType": "YulTypedName",
																				"src": "5603:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5819:27:13",
																			"nodeType": "YulBlock",
																			"src": "5819:27:13",
																			"statements": [
																				{
																					"nativeSrc": "5821:23:13",
																					"nodeType": "YulAssignment",
																					"src": "5821:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "5836:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "5836:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "5821:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "5821:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5803:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "5803:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5815:2:13",
																					"nodeType": "YulLiteral",
																					"src": "5815:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5800:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "5800:2:13"
																			},
																			"nativeSrc": "5800:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5800:18:13"
																		},
																		"nativeSrc": "5797:49:13",
																		"nodeType": "YulIf",
																		"src": "5797:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "5888:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "5888:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "5905:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "5905:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "5933:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5933:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "5915:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "5915:17:13"
																							},
																							"nativeSrc": "5915:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5915:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5901:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "5901:3:13"
																					},
																					"nativeSrc": "5901:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5901:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "5859:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "5859:28:13"
																			},
																			"nativeSrc": "5859:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5859:80:13"
																		},
																		"nativeSrc": "5859:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5859:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5509:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5509:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5514:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5514:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5506:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5506:2:13"
																},
																"nativeSrc": "5506:11:13",
																"nodeType": "YulFunctionCall",
																"src": "5506:11:13"
															},
															"nativeSrc": "5503:446:13",
															"nodeType": "YulIf",
															"src": "5503:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5413:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5468:5:13",
														"nodeType": "YulTypedName",
														"src": "5468:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5475:3:13",
														"nodeType": "YulTypedName",
														"src": "5475:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5480:10:13",
														"nodeType": "YulTypedName",
														"src": "5480:10:13",
														"type": ""
													}
												],
												"src": "5413:543:13"
											},
											{
												"body": {
													"nativeSrc": "6025:54:13",
													"nodeType": "YulBlock",
													"src": "6025:54:13",
													"statements": [
														{
															"nativeSrc": "6035:37:13",
															"nodeType": "YulAssignment",
															"src": "6035:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6060:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6060:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6066:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6066:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6056:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6056:3:13"
																},
																"nativeSrc": "6056:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6056:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6035:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "6035:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5962:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6000:4:13",
														"nodeType": "YulTypedName",
														"src": "6000:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6006:5:13",
														"nodeType": "YulTypedName",
														"src": "6006:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6016:8:13",
														"nodeType": "YulTypedName",
														"src": "6016:8:13",
														"type": ""
													}
												],
												"src": "5962:117:13"
											},
											{
												"body": {
													"nativeSrc": "6136:118:13",
													"nodeType": "YulBlock",
													"src": "6136:118:13",
													"statements": [
														{
															"nativeSrc": "6146:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6146:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6195:1:13",
																						"nodeType": "YulLiteral",
																						"src": "6195:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6198:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6198:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6191:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6191:3:13"
																				},
																				"nativeSrc": "6191:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6191:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6210:1:13",
																						"nodeType": "YulLiteral",
																						"src": "6210:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6206:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6206:3:13"
																				},
																				"nativeSrc": "6206:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6206:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6162:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "6162:28:13"
																		},
																		"nativeSrc": "6162:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6162:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6158:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6158:3:13"
																},
																"nativeSrc": "6158:56:13",
																"nodeType": "YulFunctionCall",
																"src": "6158:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6150:4:13",
																	"nodeType": "YulTypedName",
																	"src": "6150:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6223:25:13",
															"nodeType": "YulAssignment",
															"src": "6223:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6237:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6237:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6243:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6243:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6233:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6233:3:13"
																},
																"nativeSrc": "6233:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6233:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6223:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6223:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6085:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6113:4:13",
														"nodeType": "YulTypedName",
														"src": "6113:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6119:5:13",
														"nodeType": "YulTypedName",
														"src": "6119:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6129:6:13",
														"nodeType": "YulTypedName",
														"src": "6129:6:13",
														"type": ""
													}
												],
												"src": "6085:169:13"
											},
											{
												"body": {
													"nativeSrc": "6340:214:13",
													"nodeType": "YulBlock",
													"src": "6340:214:13",
													"statements": [
														{
															"nativeSrc": "6473:37:13",
															"nodeType": "YulAssignment",
															"src": "6473:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6500:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6500:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "6506:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6506:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6481:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "6481:18:13"
																},
																"nativeSrc": "6481:29:13",
																"nodeType": "YulFunctionCall",
																"src": "6481:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6473:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6473:4:13"
																}
															]
														},
														{
															"nativeSrc": "6519:29:13",
															"nodeType": "YulAssignment",
															"src": "6519:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6530:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6530:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6540:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6540:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6543:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6543:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6536:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6536:3:13"
																		},
																		"nativeSrc": "6536:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6536:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6527:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6527:2:13"
																},
																"nativeSrc": "6527:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6527:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6519:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6519:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6259:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6321:4:13",
														"nodeType": "YulTypedName",
														"src": "6321:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6327:3:13",
														"nodeType": "YulTypedName",
														"src": "6327:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6335:4:13",
														"nodeType": "YulTypedName",
														"src": "6335:4:13",
														"type": ""
													}
												],
												"src": "6259:295:13"
											},
											{
												"body": {
													"nativeSrc": "6651:1303:13",
													"nodeType": "YulBlock",
													"src": "6651:1303:13",
													"statements": [
														{
															"nativeSrc": "6662:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6662:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6709:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6709:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6676:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "6676:32:13"
																},
																"nativeSrc": "6676:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6676:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6666:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6666:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6798:22:13",
																"nodeType": "YulBlock",
																"src": "6798:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6800:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6800:16:13"
																			},
																			"nativeSrc": "6800:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6800:18:13"
																		},
																		"nativeSrc": "6800:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6800:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6770:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6770:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6778:18:13",
																		"nodeType": "YulLiteral",
																		"src": "6778:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6767:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6767:2:13"
																},
																"nativeSrc": "6767:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6767:30:13"
															},
															"nativeSrc": "6764:56:13",
															"nodeType": "YulIf",
															"src": "6764:56:13"
														},
														{
															"nativeSrc": "6830:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6830:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "6876:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6876:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "6870:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6870:5:13"
																		},
																		"nativeSrc": "6870:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6870:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "6844:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "6844:25:13"
																},
																"nativeSrc": "6844:38:13",
																"nodeType": "YulFunctionCall",
																"src": "6844:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "6834:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6834:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6975:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6975:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6981:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6981:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6989:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6989:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "6929:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "6929:45:13"
																},
																"nativeSrc": "6929:67:13",
																"nodeType": "YulFunctionCall",
																"src": "6929:67:13"
															},
															"nativeSrc": "6929:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "6929:67:13"
														},
														{
															"nativeSrc": "7006:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7006:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "7023:1:13",
																"nodeType": "YulLiteral",
																"src": "7023:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7010:9:13",
																	"nodeType": "YulTypedName",
																	"src": "7010:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7034:17:13",
															"nodeType": "YulAssignment",
															"src": "7034:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "7047:4:13",
																"nodeType": "YulLiteral",
																"src": "7047:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7034:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "7034:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7098:611:13",
																		"nodeType": "YulBlock",
																		"src": "7098:611:13",
																		"statements": [
																			{
																				"nativeSrc": "7112:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7112:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7131:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "7131:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7143:4:13",
																									"nodeType": "YulLiteral",
																									"src": "7143:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7139:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "7139:3:13"
																							},
																							"nativeSrc": "7139:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7139:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7127:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "7127:3:13"
																					},
																					"nativeSrc": "7127:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7127:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7116:7:13",
																						"nodeType": "YulTypedName",
																						"src": "7116:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7163:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7163:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7209:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "7209:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7177:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "7177:31:13"
																					},
																					"nativeSrc": "7177:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7177:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7167:6:13",
																						"nodeType": "YulTypedName",
																						"src": "7167:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7227:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7227:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7236:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7236:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7231:1:13",
																						"nodeType": "YulTypedName",
																						"src": "7231:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7295:163:13",
																					"nodeType": "YulBlock",
																					"src": "7295:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7320:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "7320:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7338:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "7338:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7343:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "7343:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7334:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "7334:3:13"
																												},
																												"nativeSrc": "7334:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "7334:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7328:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "7328:5:13"
																										},
																										"nativeSrc": "7328:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "7328:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7313:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7313:6:13"
																								},
																								"nativeSrc": "7313:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7313:42:13"
																							},
																							"nativeSrc": "7313:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "7313:42:13"
																						},
																						{
																							"nativeSrc": "7372:24:13",
																							"nodeType": "YulAssignment",
																							"src": "7372:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7386:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "7386:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7394:1:13",
																										"nodeType": "YulLiteral",
																										"src": "7394:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7382:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7382:3:13"
																								},
																								"nativeSrc": "7382:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7382:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7372:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7372:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7413:31:13",
																							"nodeType": "YulAssignment",
																							"src": "7413:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7430:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "7430:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7441:2:13",
																										"nodeType": "YulLiteral",
																										"src": "7441:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7426:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7426:3:13"
																								},
																								"nativeSrc": "7426:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7426:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7413:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "7413:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7261:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "7261:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7264:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "7264:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7258:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "7258:2:13"
																					},
																					"nativeSrc": "7258:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7258:14:13"
																				},
																				"nativeSrc": "7250:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7273:21:13",
																					"nodeType": "YulBlock",
																					"src": "7273:21:13",
																					"statements": [
																						{
																							"nativeSrc": "7275:17:13",
																							"nodeType": "YulAssignment",
																							"src": "7275:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7284:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "7284:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7287:4:13",
																										"nodeType": "YulLiteral",
																										"src": "7287:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7280:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7280:3:13"
																								},
																								"nativeSrc": "7280:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7280:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7275:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "7275:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7254:3:13",
																					"nodeType": "YulBlock",
																					"src": "7254:3:13",
																					"statements": []
																				},
																				"src": "7250:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "7494:156:13",
																					"nodeType": "YulBlock",
																					"src": "7494:156:13",
																					"statements": [
																						{
																							"nativeSrc": "7512:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7512:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7539:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "7539:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7544:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "7544:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7535:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "7535:3:13"
																										},
																										"nativeSrc": "7535:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "7535:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7529:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "7529:5:13"
																								},
																								"nativeSrc": "7529:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7529:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7516:9:13",
																									"nodeType": "YulTypedName",
																									"src": "7516:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7579:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "7579:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7606:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "7606:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "7621:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "7621:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "7629:4:13",
																														"nodeType": "YulLiteral",
																														"src": "7629:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "7617:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "7617:3:13"
																												},
																												"nativeSrc": "7617:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "7617:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "7587:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "7587:18:13"
																										},
																										"nativeSrc": "7587:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "7587:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7572:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7572:6:13"
																								},
																								"nativeSrc": "7572:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7572:64:13"
																							},
																							"nativeSrc": "7572:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "7572:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7477:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "7477:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7486:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "7486:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7474:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "7474:2:13"
																					},
																					"nativeSrc": "7474:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7474:19:13"
																				},
																				"nativeSrc": "7471:179:13",
																				"nodeType": "YulIf",
																				"src": "7471:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7670:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "7670:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "7684:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "7684:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7692:1:13",
																											"nodeType": "YulLiteral",
																											"src": "7692:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "7680:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "7680:3:13"
																									},
																									"nativeSrc": "7680:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "7680:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7696:1:13",
																									"nodeType": "YulLiteral",
																									"src": "7696:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7676:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "7676:3:13"
																							},
																							"nativeSrc": "7676:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7676:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7663:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7663:6:13"
																					},
																					"nativeSrc": "7663:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7663:36:13"
																				},
																				"nativeSrc": "7663:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "7663:36:13"
																			}
																		]
																	},
																	"nativeSrc": "7091:618:13",
																	"nodeType": "YulCase",
																	"src": "7091:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7096:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7096:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7726:222:13",
																		"nodeType": "YulBlock",
																		"src": "7726:222:13",
																		"statements": [
																			{
																				"nativeSrc": "7740:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7740:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7753:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7753:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7744:5:13",
																						"nodeType": "YulTypedName",
																						"src": "7744:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7777:67:13",
																					"nodeType": "YulBlock",
																					"src": "7777:67:13",
																					"statements": [
																						{
																							"nativeSrc": "7795:35:13",
																							"nodeType": "YulAssignment",
																							"src": "7795:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7814:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "7814:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7819:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "7819:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7810:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "7810:3:13"
																										},
																										"nativeSrc": "7810:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "7810:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7804:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "7804:5:13"
																								},
																								"nativeSrc": "7804:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "7804:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7795:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "7795:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7770:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "7770:6:13"
																				},
																				"nativeSrc": "7767:77:13",
																				"nodeType": "YulIf",
																				"src": "7767:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7864:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "7864:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "7923:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "7923:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "7930:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7870:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "7870:52:13"
																							},
																							"nativeSrc": "7870:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7870:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7857:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7857:6:13"
																					},
																					"nativeSrc": "7857:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7857:81:13"
																				},
																				"nativeSrc": "7857:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "7857:81:13"
																			}
																		]
																	},
																	"nativeSrc": "7718:230:13",
																	"nodeType": "YulCase",
																	"src": "7718:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7071:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7071:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7079:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7079:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7068:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7068:2:13"
																},
																"nativeSrc": "7068:14:13",
																"nodeType": "YulFunctionCall",
																"src": "7068:14:13"
															},
															"nativeSrc": "7061:887:13",
															"nodeType": "YulSwitch",
															"src": "7061:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6559:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6640:4:13",
														"nodeType": "YulTypedName",
														"src": "6640:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6646:3:13",
														"nodeType": "YulTypedName",
														"src": "6646:3:13",
														"type": ""
													}
												],
												"src": "6559:1395:13"
											},
											{
												"body": {
													"nativeSrc": "7988:152:13",
													"nodeType": "YulBlock",
													"src": "7988:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8005:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8005:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8008:77:13",
																		"nodeType": "YulLiteral",
																		"src": "8008:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7998:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7998:6:13"
																},
																"nativeSrc": "7998:88:13",
																"nodeType": "YulFunctionCall",
																"src": "7998:88:13"
															},
															"nativeSrc": "7998:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "7998:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8102:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8102:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8105:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8105:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8095:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8095:6:13"
																},
																"nativeSrc": "8095:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8095:15:13"
															},
															"nativeSrc": "8095:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8095:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8126:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8126:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8129:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8129:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8119:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8119:6:13"
																},
																"nativeSrc": "8119:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8119:15:13"
															},
															"nativeSrc": "8119:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8119:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7960:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7960:180:13"
											},
											{
												"body": {
													"nativeSrc": "8197:51:13",
													"nodeType": "YulBlock",
													"src": "8197:51:13",
													"statements": [
														{
															"nativeSrc": "8207:34:13",
															"nodeType": "YulAssignment",
															"src": "8207:34:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8235:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8235:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8228:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8228:3:13"
																},
																"nativeSrc": "8228:13:13",
																"nodeType": "YulFunctionCall",
																"src": "8228:13:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8207:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "8207:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "8146:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8178:5:13",
														"nodeType": "YulTypedName",
														"src": "8178:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8188:8:13",
														"nodeType": "YulTypedName",
														"src": "8188:8:13",
														"type": ""
													}
												],
												"src": "8146:102:13"
											},
											{
												"body": {
													"nativeSrc": "8327:775:13",
													"nodeType": "YulBlock",
													"src": "8327:775:13",
													"statements": [
														{
															"nativeSrc": "8337:15:13",
															"nodeType": "YulAssignment",
															"src": "8337:15:13",
															"value": {
																"name": "_power",
																"nativeSrc": "8346:6:13",
																"nodeType": "YulIdentifier",
																"src": "8346:6:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8337:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8337:5:13"
																}
															]
														},
														{
															"nativeSrc": "8361:14:13",
															"nodeType": "YulAssignment",
															"src": "8361:14:13",
															"value": {
																"name": "_base",
																"nativeSrc": "8370:5:13",
																"nodeType": "YulIdentifier",
																"src": "8370:5:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8361:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8361:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8419:677:13",
																"nodeType": "YulBlock",
																"src": "8419:677:13",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "8507:22:13",
																			"nodeType": "YulBlock",
																			"src": "8507:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8509:16:13",
																							"nodeType": "YulIdentifier",
																							"src": "8509:16:13"
																						},
																						"nativeSrc": "8509:18:13",
																						"nodeType": "YulFunctionCall",
																						"src": "8509:18:13"
																					},
																					"nativeSrc": "8509:18:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "8509:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8485:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "8485:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "8495:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8495:3:13"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "8500:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "8500:4:13"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "8491:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "8491:3:13"
																					},
																					"nativeSrc": "8491:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8491:14:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8482:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "8482:2:13"
																			},
																			"nativeSrc": "8482:24:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8482:24:13"
																		},
																		"nativeSrc": "8479:50:13",
																		"nodeType": "YulIf",
																		"src": "8479:50:13"
																	},
																	{
																		"body": {
																			"nativeSrc": "8574:419:13",
																			"nodeType": "YulBlock",
																			"src": "8574:419:13",
																			"statements": [
																				{
																					"nativeSrc": "8954:25:13",
																					"nodeType": "YulAssignment",
																					"src": "8954:25:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8967:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "8967:5:13"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8974:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "8974:4:13"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8963:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8963:3:13"
																						},
																						"nativeSrc": "8963:16:13",
																						"nodeType": "YulFunctionCall",
																						"src": "8963:16:13"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8954:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "8954:5:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8549:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "8549:8:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8559:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8559:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8545:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8545:3:13"
																			},
																			"nativeSrc": "8545:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8545:16:13"
																		},
																		"nativeSrc": "8542:451:13",
																		"nodeType": "YulIf",
																		"src": "8542:451:13"
																	},
																	{
																		"nativeSrc": "9006:23:13",
																		"nodeType": "YulAssignment",
																		"src": "9006:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9018:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "9018:4:13"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "9024:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "9024:4:13"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "9014:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9014:3:13"
																			},
																			"nativeSrc": "9014:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9014:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "9006:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "9006:4:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9042:44:13",
																		"nodeType": "YulAssignment",
																		"src": "9042:44:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9077:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "9077:8:13"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "9054:22:13",
																				"nodeType": "YulIdentifier",
																				"src": "9054:22:13"
																			},
																			"nativeSrc": "9054:32:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9054:32:13"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "9042:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "9042:8:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8395:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "8395:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8405:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8405:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8392:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8392:2:13"
																},
																"nativeSrc": "8392:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8392:15:13"
															},
															"nativeSrc": "8384:712:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8408:2:13",
																"nodeType": "YulBlock",
																"src": "8408:2:13",
																"statements": []
															},
															"pre": {
																"nativeSrc": "8388:3:13",
																"nodeType": "YulBlock",
																"src": "8388:3:13",
																"statements": []
															},
															"src": "8384:712:13"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "8254:848:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "8282:6:13",
														"nodeType": "YulTypedName",
														"src": "8282:6:13",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "8290:5:13",
														"nodeType": "YulTypedName",
														"src": "8290:5:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8297:8:13",
														"nodeType": "YulTypedName",
														"src": "8297:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8307:3:13",
														"nodeType": "YulTypedName",
														"src": "8307:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8315:5:13",
														"nodeType": "YulTypedName",
														"src": "8315:5:13",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "8322:4:13",
														"nodeType": "YulTypedName",
														"src": "8322:4:13",
														"type": ""
													}
												],
												"src": "8254:848:13"
											},
											{
												"body": {
													"nativeSrc": "9168:1013:13",
													"nodeType": "YulBlock",
													"src": "9168:1013:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9363:20:13",
																"nodeType": "YulBlock",
																"src": "9363:20:13",
																"statements": [
																	{
																		"nativeSrc": "9365:10:13",
																		"nodeType": "YulAssignment",
																		"src": "9365:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9374:1:13",
																			"nodeType": "YulLiteral",
																			"src": "9374:1:13",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9365:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9365:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9376:5:13",
																		"nodeType": "YulLeave",
																		"src": "9376:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9353:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "9353:8:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9346:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9346:6:13"
																},
																"nativeSrc": "9346:16:13",
																"nodeType": "YulFunctionCall",
																"src": "9346:16:13"
															},
															"nativeSrc": "9343:40:13",
															"nodeType": "YulIf",
															"src": "9343:40:13"
														},
														{
															"body": {
																"nativeSrc": "9408:20:13",
																"nodeType": "YulBlock",
																"src": "9408:20:13",
																"statements": [
																	{
																		"nativeSrc": "9410:10:13",
																		"nodeType": "YulAssignment",
																		"src": "9410:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9419:1:13",
																			"nodeType": "YulLiteral",
																			"src": "9419:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9410:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9410:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9421:5:13",
																		"nodeType": "YulLeave",
																		"src": "9421:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9402:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9402:4:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9395:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9395:6:13"
																},
																"nativeSrc": "9395:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9395:12:13"
															},
															"nativeSrc": "9392:36:13",
															"nodeType": "YulIf",
															"src": "9392:36:13"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9538:20:13",
																		"nodeType": "YulBlock",
																		"src": "9538:20:13",
																		"statements": [
																			{
																				"nativeSrc": "9540:10:13",
																				"nodeType": "YulAssignment",
																				"src": "9540:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9549:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9549:1:13",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9540:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "9540:5:13"
																					}
																				]
																			},
																			{
																				"nativeSrc": "9551:5:13",
																				"nodeType": "YulLeave",
																				"src": "9551:5:13"
																			}
																		]
																	},
																	"nativeSrc": "9531:27:13",
																	"nodeType": "YulCase",
																	"src": "9531:27:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9536:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9536:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9582:176:13",
																		"nodeType": "YulBlock",
																		"src": "9582:176:13",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "9617:22:13",
																					"nodeType": "YulBlock",
																					"src": "9617:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9619:16:13",
																									"nodeType": "YulIdentifier",
																									"src": "9619:16:13"
																								},
																								"nativeSrc": "9619:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "9619:18:13"
																							},
																							"nativeSrc": "9619:18:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "9619:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "9602:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "9602:8:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9612:3:13",
																							"nodeType": "YulLiteral",
																							"src": "9612:3:13",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9599:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "9599:2:13"
																					},
																					"nativeSrc": "9599:17:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9599:17:13"
																				},
																				"nativeSrc": "9596:43:13",
																				"nodeType": "YulIf",
																				"src": "9596:43:13"
																			},
																			{
																				"nativeSrc": "9652:25:13",
																				"nodeType": "YulAssignment",
																				"src": "9652:25:13",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9665:1:13",
																							"nodeType": "YulLiteral",
																							"src": "9665:1:13",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "9668:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "9668:8:13"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "9661:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "9661:3:13"
																					},
																					"nativeSrc": "9661:16:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9661:16:13"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9652:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "9652:5:13"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9708:22:13",
																					"nodeType": "YulBlock",
																					"src": "9708:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9710:16:13",
																									"nodeType": "YulIdentifier",
																									"src": "9710:16:13"
																								},
																								"nativeSrc": "9710:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "9710:18:13"
																							},
																							"nativeSrc": "9710:18:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "9710:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "9696:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "9696:5:13"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "9703:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "9703:3:13"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9693:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "9693:2:13"
																					},
																					"nativeSrc": "9693:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9693:14:13"
																				},
																				"nativeSrc": "9690:40:13",
																				"nodeType": "YulIf",
																				"src": "9690:40:13"
																			},
																			{
																				"nativeSrc": "9743:5:13",
																				"nodeType": "YulLeave",
																				"src": "9743:5:13"
																			}
																		]
																	},
																	"nativeSrc": "9567:191:13",
																	"nodeType": "YulCase",
																	"src": "9567:191:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9572:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9572:1:13",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "9488:4:13",
																"nodeType": "YulIdentifier",
																"src": "9488:4:13"
															},
															"nativeSrc": "9481:277:13",
															"nodeType": "YulSwitch",
															"src": "9481:277:13"
														},
														{
															"body": {
																"nativeSrc": "9890:123:13",
																"nodeType": "YulBlock",
																"src": "9890:123:13",
																"statements": [
																	{
																		"nativeSrc": "9904:28:13",
																		"nodeType": "YulAssignment",
																		"src": "9904:28:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9917:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "9917:4:13"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9923:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "9923:8:13"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9913:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9913:3:13"
																			},
																			"nativeSrc": "9913:19:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9913:19:13"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9904:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9904:5:13"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9963:22:13",
																			"nodeType": "YulBlock",
																			"src": "9963:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9965:16:13",
																							"nodeType": "YulIdentifier",
																							"src": "9965:16:13"
																						},
																						"nativeSrc": "9965:18:13",
																						"nodeType": "YulFunctionCall",
																						"src": "9965:18:13"
																					},
																					"nativeSrc": "9965:18:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "9965:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "9951:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "9951:5:13"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "9958:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9958:3:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9948:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "9948:2:13"
																			},
																			"nativeSrc": "9948:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9948:14:13"
																		},
																		"nativeSrc": "9945:40:13",
																		"nodeType": "YulIf",
																		"src": "9945:40:13"
																	},
																	{
																		"nativeSrc": "9998:5:13",
																		"nodeType": "YulLeave",
																		"src": "9998:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9793:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "9793:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9799:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9799:2:13",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9790:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9790:2:13"
																				},
																				"nativeSrc": "9790:12:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9790:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9807:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "9807:8:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9817:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9817:2:13",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9804:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9804:2:13"
																				},
																				"nativeSrc": "9804:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9804:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9786:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9786:3:13"
																		},
																		"nativeSrc": "9786:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9786:35:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9842:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "9842:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9848:3:13",
																						"nodeType": "YulLiteral",
																						"src": "9848:3:13",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9839:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9839:2:13"
																				},
																				"nativeSrc": "9839:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9839:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9857:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "9857:8:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9867:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9867:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9854:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9854:2:13"
																				},
																				"nativeSrc": "9854:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9854:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9835:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9835:3:13"
																		},
																		"nativeSrc": "9835:36:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9835:36:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9770:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9770:2:13"
																},
																"nativeSrc": "9770:111:13",
																"nodeType": "YulFunctionCall",
																"src": "9770:111:13"
															},
															"nativeSrc": "9767:246:13",
															"nodeType": "YulIf",
															"src": "9767:246:13"
														},
														{
															"nativeSrc": "10023:57:13",
															"nodeType": "YulAssignment",
															"src": "10023:57:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10057:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10057:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10060:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10060:4:13"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10066:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "10066:8:13"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "10076:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10076:3:13"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "10038:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "10038:18:13"
																},
																"nativeSrc": "10038:42:13",
																"nodeType": "YulFunctionCall",
																"src": "10038:42:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10023:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10023:5:13"
																},
																{
																	"name": "base",
																	"nativeSrc": "10030:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10030:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10119:22:13",
																"nodeType": "YulBlock",
																"src": "10119:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10121:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10121:16:13"
																			},
																			"nativeSrc": "10121:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10121:18:13"
																		},
																		"nativeSrc": "10121:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10121:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10096:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10096:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "10107:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10107:3:13"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "10112:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "10112:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "10103:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10103:3:13"
																		},
																		"nativeSrc": "10103:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10103:14:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10093:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10093:2:13"
																},
																"nativeSrc": "10093:25:13",
																"nodeType": "YulFunctionCall",
																"src": "10093:25:13"
															},
															"nativeSrc": "10090:51:13",
															"nodeType": "YulIf",
															"src": "10090:51:13"
														},
														{
															"nativeSrc": "10150:25:13",
															"nodeType": "YulAssignment",
															"src": "10150:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10163:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10163:5:13"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10170:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10170:4:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10159:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10159:3:13"
																},
																"nativeSrc": "10159:16:13",
																"nodeType": "YulFunctionCall",
																"src": "10159:16:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10150:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10150:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "9108:1073:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9138:4:13",
														"nodeType": "YulTypedName",
														"src": "9138:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9144:8:13",
														"nodeType": "YulTypedName",
														"src": "9144:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9154:3:13",
														"nodeType": "YulTypedName",
														"src": "9154:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9162:5:13",
														"nodeType": "YulTypedName",
														"src": "9162:5:13",
														"type": ""
													}
												],
												"src": "9108:1073:13"
											},
											{
												"body": {
													"nativeSrc": "10230:43:13",
													"nodeType": "YulBlock",
													"src": "10230:43:13",
													"statements": [
														{
															"nativeSrc": "10240:27:13",
															"nodeType": "YulAssignment",
															"src": "10240:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10255:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10255:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10262:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10262:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10251:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10251:3:13"
																},
																"nativeSrc": "10251:16:13",
																"nodeType": "YulFunctionCall",
																"src": "10251:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10240:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "10240:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "10187:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10212:5:13",
														"nodeType": "YulTypedName",
														"src": "10212:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10222:7:13",
														"nodeType": "YulTypedName",
														"src": "10222:7:13",
														"type": ""
													}
												],
												"src": "10187:86:13"
											},
											{
												"body": {
													"nativeSrc": "10343:217:13",
													"nodeType": "YulBlock",
													"src": "10343:217:13",
													"statements": [
														{
															"nativeSrc": "10353:31:13",
															"nodeType": "YulAssignment",
															"src": "10353:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10379:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10379:4:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10361:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10361:17:13"
																},
																"nativeSrc": "10361:23:13",
																"nodeType": "YulFunctionCall",
																"src": "10361:23:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10353:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10353:4:13"
																}
															]
														},
														{
															"nativeSrc": "10393:37:13",
															"nodeType": "YulAssignment",
															"src": "10393:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10421:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "10421:8:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "10405:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "10405:15:13"
																},
																"nativeSrc": "10405:25:13",
																"nodeType": "YulFunctionCall",
																"src": "10405:25:13"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "10393:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "10393:8:13"
																}
															]
														},
														{
															"nativeSrc": "10440:113:13",
															"nodeType": "YulAssignment",
															"src": "10440:113:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10470:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10470:4:13"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10476:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "10476:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10486:66:13",
																		"nodeType": "YulLiteral",
																		"src": "10486:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "10449:20:13",
																	"nodeType": "YulIdentifier",
																	"src": "10449:20:13"
																},
																"nativeSrc": "10449:104:13",
																"nodeType": "YulFunctionCall",
																"src": "10449:104:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10440:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10440:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "10279:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10318:4:13",
														"nodeType": "YulTypedName",
														"src": "10318:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10324:8:13",
														"nodeType": "YulTypedName",
														"src": "10324:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10337:5:13",
														"nodeType": "YulTypedName",
														"src": "10337:5:13",
														"type": ""
													}
												],
												"src": "10279:281:13"
											},
											{
												"body": {
													"nativeSrc": "10594:152:13",
													"nodeType": "YulBlock",
													"src": "10594:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10611:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10611:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10614:77:13",
																		"nodeType": "YulLiteral",
																		"src": "10614:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10604:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10604:6:13"
																},
																"nativeSrc": "10604:88:13",
																"nodeType": "YulFunctionCall",
																"src": "10604:88:13"
															},
															"nativeSrc": "10604:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "10604:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10708:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10708:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10711:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10711:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10701:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10701:6:13"
																},
																"nativeSrc": "10701:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10701:15:13"
															},
															"nativeSrc": "10701:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10701:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10732:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10732:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10735:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10735:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10725:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10725:6:13"
																},
																"nativeSrc": "10725:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10725:15:13"
															},
															"nativeSrc": "10725:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10725:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10566:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "10566:180:13"
											},
											{
												"body": {
													"nativeSrc": "10794:143:13",
													"nodeType": "YulBlock",
													"src": "10794:143:13",
													"statements": [
														{
															"nativeSrc": "10804:25:13",
															"nodeType": "YulAssignment",
															"src": "10804:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10827:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10827:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10809:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10809:17:13"
																},
																"nativeSrc": "10809:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10809:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10804:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "10804:1:13"
																}
															]
														},
														{
															"nativeSrc": "10838:25:13",
															"nodeType": "YulAssignment",
															"src": "10838:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10861:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10861:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10843:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10843:17:13"
																},
																"nativeSrc": "10843:20:13",
																"nodeType": "YulFunctionCall",
																"src": "10843:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10838:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "10838:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10885:22:13",
																"nodeType": "YulBlock",
																"src": "10885:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10887:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10887:16:13"
																			},
																			"nativeSrc": "10887:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10887:18:13"
																		},
																		"nativeSrc": "10887:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10887:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10882:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10882:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10875:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10875:6:13"
																},
																"nativeSrc": "10875:9:13",
																"nodeType": "YulFunctionCall",
																"src": "10875:9:13"
															},
															"nativeSrc": "10872:35:13",
															"nodeType": "YulIf",
															"src": "10872:35:13"
														},
														{
															"nativeSrc": "10917:14:13",
															"nodeType": "YulAssignment",
															"src": "10917:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10926:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10926:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10929:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10929:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10922:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10922:3:13"
																},
																"nativeSrc": "10922:9:13",
																"nodeType": "YulFunctionCall",
																"src": "10922:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10917:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "10917:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10752:185:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10783:1:13",
														"nodeType": "YulTypedName",
														"src": "10783:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10786:1:13",
														"nodeType": "YulTypedName",
														"src": "10786:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10792:1:13",
														"nodeType": "YulTypedName",
														"src": "10792:1:13",
														"type": ""
													}
												],
												"src": "10752:185:13"
											},
											{
												"body": {
													"nativeSrc": "10991:362:13",
													"nodeType": "YulBlock",
													"src": "10991:362:13",
													"statements": [
														{
															"nativeSrc": "11001:25:13",
															"nodeType": "YulAssignment",
															"src": "11001:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11024:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11024:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11006:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11006:17:13"
																},
																"nativeSrc": "11006:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11006:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11001:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11001:1:13"
																}
															]
														},
														{
															"nativeSrc": "11035:25:13",
															"nodeType": "YulAssignment",
															"src": "11035:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11058:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11058:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11040:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11040:17:13"
																},
																"nativeSrc": "11040:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11040:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11035:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11035:1:13"
																}
															]
														},
														{
															"nativeSrc": "11069:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11069:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11092:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11092:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11095:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11095:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11088:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11088:3:13"
																},
																"nativeSrc": "11088:9:13",
																"nodeType": "YulFunctionCall",
																"src": "11088:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11073:11:13",
																	"nodeType": "YulTypedName",
																	"src": "11073:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11106:41:13",
															"nodeType": "YulAssignment",
															"src": "11106:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11135:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "11135:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11117:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11117:17:13"
																},
																"nativeSrc": "11117:30:13",
																"nodeType": "YulFunctionCall",
																"src": "11117:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11106:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "11106:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11324:22:13",
																"nodeType": "YulBlock",
																"src": "11324:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11326:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11326:16:13"
																			},
																			"nativeSrc": "11326:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11326:18:13"
																		},
																		"nativeSrc": "11326:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11326:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11257:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "11257:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11250:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "11250:6:13"
																				},
																				"nativeSrc": "11250:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11250:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11280:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "11280:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11287:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "11287:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11296:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "11296:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11283:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "11283:3:13"
																						},
																						"nativeSrc": "11283:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "11283:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11277:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "11277:2:13"
																				},
																				"nativeSrc": "11277:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11277:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11230:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "11230:2:13"
																		},
																		"nativeSrc": "11230:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11230:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11210:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11210:6:13"
																},
																"nativeSrc": "11210:113:13",
																"nodeType": "YulFunctionCall",
																"src": "11210:113:13"
															},
															"nativeSrc": "11207:139:13",
															"nodeType": "YulIf",
															"src": "11207:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10943:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10974:1:13",
														"nodeType": "YulTypedName",
														"src": "10974:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10977:1:13",
														"nodeType": "YulTypedName",
														"src": "10977:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10983:7:13",
														"nodeType": "YulTypedName",
														"src": "10983:7:13",
														"type": ""
													}
												],
												"src": "10943:410:13"
											},
											{
												"body": {
													"nativeSrc": "11424:53:13",
													"nodeType": "YulBlock",
													"src": "11424:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11441:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11441:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11464:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "11464:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11446:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "11446:17:13"
																		},
																		"nativeSrc": "11446:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11446:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11434:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11434:6:13"
																},
																"nativeSrc": "11434:37:13",
																"nodeType": "YulFunctionCall",
																"src": "11434:37:13"
															},
															"nativeSrc": "11434:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "11434:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11359:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11412:5:13",
														"nodeType": "YulTypedName",
														"src": "11412:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11419:3:13",
														"nodeType": "YulTypedName",
														"src": "11419:3:13",
														"type": ""
													}
												],
												"src": "11359:118:13"
											},
											{
												"body": {
													"nativeSrc": "11581:124:13",
													"nodeType": "YulBlock",
													"src": "11581:124:13",
													"statements": [
														{
															"nativeSrc": "11591:26:13",
															"nodeType": "YulAssignment",
															"src": "11591:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11603:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11603:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11614:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11614:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11599:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11599:3:13"
																},
																"nativeSrc": "11599:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11599:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11591:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11591:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11671:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11671:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11684:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11684:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11695:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11695:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11680:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11680:3:13"
																		},
																		"nativeSrc": "11680:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11680:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11627:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11627:43:13"
																},
																"nativeSrc": "11627:71:13",
																"nodeType": "YulFunctionCall",
																"src": "11627:71:13"
															},
															"nativeSrc": "11627:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "11627:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "11483:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11553:9:13",
														"nodeType": "YulTypedName",
														"src": "11553:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11565:6:13",
														"nodeType": "YulTypedName",
														"src": "11565:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11576:4:13",
														"nodeType": "YulTypedName",
														"src": "11576:4:13",
														"type": ""
													}
												],
												"src": "11483:222:13"
											},
											{
												"body": {
													"nativeSrc": "11755:147:13",
													"nodeType": "YulBlock",
													"src": "11755:147:13",
													"statements": [
														{
															"nativeSrc": "11765:25:13",
															"nodeType": "YulAssignment",
															"src": "11765:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11788:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11788:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11770:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11770:17:13"
																},
																"nativeSrc": "11770:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11770:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11765:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11765:1:13"
																}
															]
														},
														{
															"nativeSrc": "11799:25:13",
															"nodeType": "YulAssignment",
															"src": "11799:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11822:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11822:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11804:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11804:17:13"
																},
																"nativeSrc": "11804:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11804:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11799:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11799:1:13"
																}
															]
														},
														{
															"nativeSrc": "11833:16:13",
															"nodeType": "YulAssignment",
															"src": "11833:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11844:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11844:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11847:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11847:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11840:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11840:3:13"
																},
																"nativeSrc": "11840:9:13",
																"nodeType": "YulFunctionCall",
																"src": "11840:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11833:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11833:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11873:22:13",
																"nodeType": "YulBlock",
																"src": "11873:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11875:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11875:16:13"
																			},
																			"nativeSrc": "11875:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11875:18:13"
																		},
																		"nativeSrc": "11875:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11875:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11865:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11865:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11868:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11868:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11862:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11862:2:13"
																},
																"nativeSrc": "11862:10:13",
																"nodeType": "YulFunctionCall",
																"src": "11862:10:13"
															},
															"nativeSrc": "11859:36:13",
															"nodeType": "YulIf",
															"src": "11859:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11711:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11742:1:13",
														"nodeType": "YulTypedName",
														"src": "11742:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11745:1:13",
														"nodeType": "YulTypedName",
														"src": "11745:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11751:3:13",
														"nodeType": "YulTypedName",
														"src": "11751:3:13",
														"type": ""
													}
												],
												"src": "11711:191:13"
											},
											{
												"body": {
													"nativeSrc": "11973:53:13",
													"nodeType": "YulBlock",
													"src": "11973:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11990:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11990:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12013:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12013:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "11995:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "11995:17:13"
																		},
																		"nativeSrc": "11995:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11995:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11983:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11983:6:13"
																},
																"nativeSrc": "11983:37:13",
																"nodeType": "YulFunctionCall",
																"src": "11983:37:13"
															},
															"nativeSrc": "11983:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "11983:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "11908:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11961:5:13",
														"nodeType": "YulTypedName",
														"src": "11961:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11968:3:13",
														"nodeType": "YulTypedName",
														"src": "11968:3:13",
														"type": ""
													}
												],
												"src": "11908:118:13"
											},
											{
												"body": {
													"nativeSrc": "12186:288:13",
													"nodeType": "YulBlock",
													"src": "12186:288:13",
													"statements": [
														{
															"nativeSrc": "12196:26:13",
															"nodeType": "YulAssignment",
															"src": "12196:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12208:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12208:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12219:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12219:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12204:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12204:3:13"
																},
																"nativeSrc": "12204:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12204:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12196:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12196:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12276:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12276:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12289:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12289:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12300:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12300:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12285:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12285:3:13"
																		},
																		"nativeSrc": "12285:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12285:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12232:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12232:43:13"
																},
																"nativeSrc": "12232:71:13",
																"nodeType": "YulFunctionCall",
																"src": "12232:71:13"
															},
															"nativeSrc": "12232:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "12232:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12357:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12357:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12370:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12370:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12381:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12381:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12366:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12366:3:13"
																		},
																		"nativeSrc": "12366:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12366:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12313:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12313:43:13"
																},
																"nativeSrc": "12313:72:13",
																"nodeType": "YulFunctionCall",
																"src": "12313:72:13"
															},
															"nativeSrc": "12313:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "12313:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12439:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12439:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12452:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12452:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12463:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12463:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12448:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12448:3:13"
																		},
																		"nativeSrc": "12448:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12448:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12395:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12395:43:13"
																},
																"nativeSrc": "12395:72:13",
																"nodeType": "YulFunctionCall",
																"src": "12395:72:13"
															},
															"nativeSrc": "12395:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "12395:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12032:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12142:9:13",
														"nodeType": "YulTypedName",
														"src": "12142:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12154:6:13",
														"nodeType": "YulTypedName",
														"src": "12154:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12162:6:13",
														"nodeType": "YulTypedName",
														"src": "12162:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12170:6:13",
														"nodeType": "YulTypedName",
														"src": "12170:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12181:4:13",
														"nodeType": "YulTypedName",
														"src": "12181:4:13",
														"type": ""
													}
												],
												"src": "12032:442:13"
											},
											{
												"body": {
													"nativeSrc": "12578:124:13",
													"nodeType": "YulBlock",
													"src": "12578:124:13",
													"statements": [
														{
															"nativeSrc": "12588:26:13",
															"nodeType": "YulAssignment",
															"src": "12588:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12600:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12600:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12611:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12611:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12596:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12596:3:13"
																},
																"nativeSrc": "12596:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12596:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12588:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12588:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12668:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12668:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12681:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12681:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12692:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12692:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12677:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12677:3:13"
																		},
																		"nativeSrc": "12677:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12677:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12624:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12624:43:13"
																},
																"nativeSrc": "12624:71:13",
																"nodeType": "YulFunctionCall",
																"src": "12624:71:13"
															},
															"nativeSrc": "12624:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "12624:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "12480:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12550:9:13",
														"nodeType": "YulTypedName",
														"src": "12550:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12562:6:13",
														"nodeType": "YulTypedName",
														"src": "12562:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12573:4:13",
														"nodeType": "YulTypedName",
														"src": "12573:4:13",
														"type": ""
													}
												],
												"src": "12480:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8 {\n        if slt(sub(dataEnd, headStart), 288) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e060405234801561000f575f80fd5b5060405161388038038061388083398181016040528101906100319190610725565b6040518060400160405280601581526020017f426f6e4465466920546f6b656e205369656d656e7300000000000000000000008152506040518060400160405280600681526020017f42445349454d000000000000000000000000000000000000000000000000000081525081600390816100ac9190610a1a565b5080600490816100bc9190610a1a565b5050505f60055f6101000a81548160ff0219169083151502179055506101087fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec428a6101f760201b60201c565b506101397ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7896101f760201b60201c565b508673ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508573ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508060c081815250506101e9336101bc6102ed60201b60201c565b600a6101c89190610c51565b83886101d49190610cc8565b6101de9190610cf8565b6102f560201b60201c565b505050505050505050610df1565b5f610208838361037a60201b60201c565b6102e357600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506102806103de60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506102e7565b5f90505b92915050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610365575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161035c9190610d48565b60405180910390fd5b6103765f83836103e560201b60201c565b5050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b6103f68383836103fb60201b60201c565b505050565b61040961041f60201b60201c565b61041a83838361046660201b60201c565b505050565b61042d61067f60201b60201c565b15610464576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104b6578060025f8282546104aa9190610d61565b92505081905550610584565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561053f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161053693929190610da3565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105cb578060025f8282540392505081905550610615565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106729190610dd8565b60405180910390a3505050565b5f60055f9054906101000a900460ff16905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106c182610698565b9050919050565b6106d1816106b7565b81146106db575f80fd5b50565b5f815190506106ec816106c8565b92915050565b5f819050919050565b610704816106f2565b811461070e575f80fd5b50565b5f8151905061071f816106fb565b92915050565b5f805f805f805f805f6101208a8c03121561074357610742610694565b5b5f6107508c828d016106de565b99505060206107618c828d016106de565b98505060406107728c828d016106de565b97505060606107838c828d016106de565b96505060806107948c828d01610711565b95505060a06107a58c828d01610711565b94505060c06107b68c828d01610711565b93505060e06107c78c828d01610711565b9250506101006107d98c828d01610711565b9150509295985092959850929598565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061086457607f821691505b60208210810361087757610876610820565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108d97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261089e565b6108e3868361089e565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61091e610919610914846106f2565b6108fb565b6106f2565b9050919050565b5f819050919050565b61093783610904565b61094b61094382610925565b8484546108aa565b825550505050565b5f90565b61095f610953565b61096a81848461092e565b505050565b5b8181101561098d576109825f82610957565b600181019050610970565b5050565b601f8211156109d2576109a38161087d565b6109ac8461088f565b810160208510156109bb578190505b6109cf6109c78561088f565b83018261096f565b50505b505050565b5f82821c905092915050565b5f6109f25f19846008026109d7565b1980831691505092915050565b5f610a0a83836109e3565b9150826002028217905092915050565b610a23826107e9565b67ffffffffffffffff811115610a3c57610a3b6107f3565b5b610a46825461084d565b610a51828285610991565b5f60209050601f831160018114610a82575f8415610a70578287015190505b610a7a85826109ff565b865550610ae1565b601f198416610a908661087d565b5f5b82811015610ab757848901518255600182019150602085019450602081019050610a92565b86831015610ad45784890151610ad0601f8916826109e3565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115610b6b57808604811115610b4757610b46610ae9565b5b6001851615610b565780820291505b8081029050610b6485610b16565b9450610b2b565b94509492505050565b5f82610b835760019050610c3e565b81610b90575f9050610c3e565b8160018114610ba65760028114610bb057610bdf565b6001915050610c3e565b60ff841115610bc257610bc1610ae9565b5b8360020a915084821115610bd957610bd8610ae9565b5b50610c3e565b5060208310610133831016604e8410600b8410161715610c145782820a905083811115610c0f57610c0e610ae9565b5b610c3e565b610c218484846001610b22565b92509050818404811115610c3857610c37610ae9565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610c5b826106f2565b9150610c6683610c45565b9250610c937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610b74565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610cd2826106f2565b9150610cdd836106f2565b925082610ced57610cec610c9b565b5b828204905092915050565b5f610d02826106f2565b9150610d0d836106f2565b9250828202610d1b816106f2565b91508282048414831517610d3257610d31610ae9565b5b5092915050565b610d42816106b7565b82525050565b5f602082019050610d5b5f830184610d39565b92915050565b5f610d6b826106f2565b9150610d76836106f2565b9250828201905080821115610d8e57610d8d610ae9565b5b92915050565b610d9d816106f2565b82525050565b5f606082019050610db65f830186610d39565b610dc36020830185610d94565b610dd06040830184610d94565b949350505050565b5f602082019050610deb5f830184610d94565b92915050565b60805160a05160c051612a2d610e535f395f818161073601528181610dad0152610f0c01525f8181610b4a01528181611264015281816112b201526112ee01525f81816106f801528181610d6101528181610ecf01526110020152612a2d5ff3fe608060405234801561000f575f80fd5b50600436106101e3575f3560e01c806379cc67901161010d578063a920260b116100a0578063dd62ed3e1161006f578063dd62ed3e14610543578063e091a39b14610573578063ec8eba1414610591578063f57d283e146105af576101e3565b8063a920260b146104e3578063ca19c11c14610501578063ced0550f1461051d578063d547741f14610527576101e3565b806395d89b41116100dc57806395d89b4114610459578063992642e514610477578063a217fddf14610495578063a9059cbb146104b3576101e3565b806379cc6790146103e75780638456cb5914610403578063904835c41461040d57806391d1485414610429576101e3565b80632a0acc6a116101855780633f4ba83a116101545780633f4ba83a1461037357806342966c681461037d5780635c975abb1461039957806370a08231146103b7576101e3565b80632a0acc6a146102ff5780632f2ff15d1461031d578063313ce5671461033957806336568abe14610357576101e3565b806310002dbd116101c157806310002dbd1461026557806318160ddd1461028157806323b872dd1461029f578063248a9ca3146102cf576101e3565b806301ffc9a7146101e757806306fdde0314610217578063095ea7b314610235575b5f80fd5b61020160048036038101906101fc9190611e27565b6105cb565b60405161020e9190611e6c565b60405180910390f35b61021f610644565b60405161022c9190611ef5565b60405180910390f35b61024f600480360381019061024a9190611fa2565b6106d4565b60405161025c9190611e6c565b60405180910390f35b61027f600480360381019061027a9190611fe0565b6106f6565b005b6102896108ba565b604051610296919061201a565b60405180910390f35b6102b960048036038101906102b49190612033565b6108c3565b6040516102c69190611e6c565b60405180910390f35b6102e960048036038101906102e491906120b6565b6108f1565b6040516102f691906120f0565b60405180910390f35b61030761090e565b60405161031491906120f0565b60405180910390f35b61033760048036038101906103329190612109565b610932565b005b610341610954565b60405161034e9190612162565b60405180910390f35b610371600480360381019061036c9190612109565b61095c565b005b61037b6109d7565b005b61039760048036038101906103929190611fe0565b610a0c565b005b6103a1610a20565b6040516103ae9190611e6c565b60405180910390f35b6103d160048036038101906103cc919061217b565b610a35565b6040516103de919061201a565b60405180910390f35b61040160048036038101906103fc9190611fa2565b610a7a565b005b61040b610a9a565b005b610427600480360381019061042291906123a6565b610acf565b005b610443600480360381019061043e9190612109565b610c6b565b6040516104509190611e6c565b60405180910390f35b610461610ccf565b60405161046e9190611ef5565b60405180910390f35b61047f610d5f565b60405161048c919061242b565b60405180910390f35b61049d610d83565b6040516104aa91906120f0565b60405180910390f35b6104cd60048036038101906104c89190611fa2565b610d89565b6040516104da9190611e6c565b60405180910390f35b6104eb610dab565b6040516104f8919061201a565b60405180910390f35b61051b60048036038101906105169190611fe0565b610dcf565b005b610525610fd5565b005b610541600480360381019061053c9190612109565b61119a565b005b61055d60048036038101906105589190612444565b6111bc565b60405161056a919061201a565b60405180910390f35b61057b61123e565b60405161058891906120f0565b60405180910390f35b610599611262565b6040516105a6919061242b565b60405180910390f35b6105c960048036038101906105c49190611fa2565b611286565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061063d575061063c826113b1565b5b9050919050565b606060038054610653906124af565b80601f016020809104026020016040519081016040528092919081815260200182805461067f906124af565b80156106ca5780601f106106a1576101008083540402835291602001916106ca565b820191905f5260205f20905b8154815290600101906020018083116106ad57829003601f168201915b5050505050905090565b5f806106de61141a565b90506106eb818585611421565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33307f000000000000000000000000000000000000000000000000000000000000000085610760919061250c565b6040518463ffffffff1660e01b815260040161077e9392919061254d565b6020604051808303815f875af115801561079a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107be91906125ac565b6107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f490612621565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161083892919061263f565b6020604051808303815f875af1158015610854573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061087891906125ac565b6108b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ae906126b0565b60405180910390fd5b50565b5f600254905090565b5f806108cd61141a565b90506108da858285611433565b6108e58585856114c5565b60019150509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b61093b826108f1565b610944816115b5565b61094e83836115c9565b50505050565b5f6012905090565b61096461141a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109c8576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109d282826116b3565b505050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610a01816115b5565b610a0961179d565b50565b610a1d610a1761141a565b826117fe565b50565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610a8c82610a8661141a565b83611433565b610a9682826117fe565b5050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610ac4816115b5565b610acc61187d565b50565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610af9816115b5565b8151835114610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b349061273e565b60405180910390fd5b5f5b8351811015610c65577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33868481518110610b9857610b9761275c565b5b6020026020010151868581518110610bb357610bb261275c565b5b60200260200101516040518463ffffffff1660e01b8152600401610bd99392919061254d565b6020604051808303815f875af1158015610bf5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c1991906125ac565b610c58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4f906127d3565b60405180910390fd5b8080600101915050610b3f565b50505050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610cde906124af565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0a906124af565b8015610d555780601f10610d2c57610100808354040283529160200191610d55565b820191905f5260205f20905b815481529060010190602001808311610d3857829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f801b81565b5f80610d9361141a565b9050610da08185856114c5565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f8111610e11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e089061283b565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610e4e9392919061254d565b6020604051808303815f875af1158015610e6a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e8e91906125ac565b610ecd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec4906126b0565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb337f000000000000000000000000000000000000000000000000000000000000000084610f36919061250c565b6040518363ffffffff1660e01b8152600401610f5392919061263f565b6020604051808303815f875af1158015610f6f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f9391906125ac565b610fd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc990612621565b60405180910390fd5b50565b7ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7610fff816115b5565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611059919061242b565b602060405180830381865afa158015611074573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611098919061286d565b90505f81116110dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d3906128e2565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161111792919061263f565b6020604051808303815f875af1158015611133573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061115791906125ac565b611196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118d9061294a565b60405180910390fd5b5050565b6111a3826108f1565b6111ac816115b5565b6111b683836116b3565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b781565b7f000000000000000000000000000000000000000000000000000000000000000081565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec426112b0816115b5565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd7f000000000000000000000000000000000000000000000000000000000000000085856040518463ffffffff1660e01b815260040161132d9392919061254d565b6020604051808303815f875af1158015611349573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061136d91906125ac565b6113ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a3906127d3565b60405180910390fd5b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b61142e83838360016118df565b505050565b5f61143e84846111bc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146114bf57818110156114b0578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016114a793929190612968565b60405180910390fd5b6114be84848484035f6118df565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611535575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161152c919061242b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115a5575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161159c919061242b565b60405180910390fd5b6115b0838383611aae565b505050565b6115c6816115c161141a565b611abe565b50565b5f6115d48383610c6b565b6116a957600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061164661141a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506116ad565b5f90505b92915050565b5f6116be8383610c6b565b15611793575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061173061141a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611797565b5f90505b92915050565b6117a5611b0f565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6117e761141a565b6040516117f4919061242b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361186e575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611865919061242b565b60405180910390fd5b611879825f83611aae565b5050565b611885611b4f565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118c861141a565b6040516118d5919061242b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361194f575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611946919061242b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119bf575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016119b6919061242b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611aa8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611a9f919061201a565b60405180910390a35b50505050565b611ab9838383611b90565b505050565b611ac88282610c6b565b611b0b5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611b0292919061299d565b60405180910390fd5b5050565b611b17610a20565b611b4d576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611b57610a20565b15611b8e576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611b98611b4f565b611ba3838383611ba8565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611bf8578060025f828254611bec91906129c4565b92505081905550611cc6565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611c81578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611c7893929190612968565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d0d578060025f8282540392505081905550611d57565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611db4919061201a565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611e0681611dd2565b8114611e10575f80fd5b50565b5f81359050611e2181611dfd565b92915050565b5f60208284031215611e3c57611e3b611dca565b5b5f611e4984828501611e13565b91505092915050565b5f8115159050919050565b611e6681611e52565b82525050565b5f602082019050611e7f5f830184611e5d565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611ec782611e85565b611ed18185611e8f565b9350611ee1818560208601611e9f565b611eea81611ead565b840191505092915050565b5f6020820190508181035f830152611f0d8184611ebd565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611f3e82611f15565b9050919050565b611f4e81611f34565b8114611f58575f80fd5b50565b5f81359050611f6981611f45565b92915050565b5f819050919050565b611f8181611f6f565b8114611f8b575f80fd5b50565b5f81359050611f9c81611f78565b92915050565b5f8060408385031215611fb857611fb7611dca565b5b5f611fc585828601611f5b565b9250506020611fd685828601611f8e565b9150509250929050565b5f60208284031215611ff557611ff4611dca565b5b5f61200284828501611f8e565b91505092915050565b61201481611f6f565b82525050565b5f60208201905061202d5f83018461200b565b92915050565b5f805f6060848603121561204a57612049611dca565b5b5f61205786828701611f5b565b935050602061206886828701611f5b565b925050604061207986828701611f8e565b9150509250925092565b5f819050919050565b61209581612083565b811461209f575f80fd5b50565b5f813590506120b08161208c565b92915050565b5f602082840312156120cb576120ca611dca565b5b5f6120d8848285016120a2565b91505092915050565b6120ea81612083565b82525050565b5f6020820190506121035f8301846120e1565b92915050565b5f806040838503121561211f5761211e611dca565b5b5f61212c858286016120a2565b925050602061213d85828601611f5b565b9150509250929050565b5f60ff82169050919050565b61215c81612147565b82525050565b5f6020820190506121755f830184612153565b92915050565b5f602082840312156121905761218f611dca565b5b5f61219d84828501611f5b565b91505092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6121e082611ead565b810181811067ffffffffffffffff821117156121ff576121fe6121aa565b5b80604052505050565b5f612211611dc1565b905061221d82826121d7565b919050565b5f67ffffffffffffffff82111561223c5761223b6121aa565b5b602082029050602081019050919050565b5f80fd5b5f61226361225e84612222565b612208565b905080838252602082019050602084028301858111156122865761228561224d565b5b835b818110156122af578061229b8882611f5b565b845260208401935050602081019050612288565b5050509392505050565b5f82601f8301126122cd576122cc6121a6565b5b81356122dd848260208601612251565b91505092915050565b5f67ffffffffffffffff821115612300576122ff6121aa565b5b602082029050602081019050919050565b5f61232361231e846122e6565b612208565b905080838252602082019050602084028301858111156123465761234561224d565b5b835b8181101561236f578061235b8882611f8e565b845260208401935050602081019050612348565b5050509392505050565b5f82601f83011261238d5761238c6121a6565b5b813561239d848260208601612311565b91505092915050565b5f80604083850312156123bc576123bb611dca565b5b5f83013567ffffffffffffffff8111156123d9576123d8611dce565b5b6123e5858286016122b9565b925050602083013567ffffffffffffffff81111561240657612405611dce565b5b61241285828601612379565b9150509250929050565b61242581611f34565b82525050565b5f60208201905061243e5f83018461241c565b92915050565b5f806040838503121561245a57612459611dca565b5b5f61246785828601611f5b565b925050602061247885828601611f5b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806124c657607f821691505b6020821081036124d9576124d8612482565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61251682611f6f565b915061252183611f6f565b925082820261252f81611f6f565b91508282048414831517612546576125456124df565b5b5092915050565b5f6060820190506125605f83018661241c565b61256d602083018561241c565b61257a604083018461200b565b949350505050565b61258b81611e52565b8114612595575f80fd5b50565b5f815190506125a681612582565b92915050565b5f602082840312156125c1576125c0611dca565b5b5f6125ce84828501612598565b91505092915050565b7f537461626c6520636f696e207472616e73666572206661696c656400000000005f82015250565b5f61260b601b83611e8f565b9150612616826125d7565b602082019050919050565b5f6020820190508181035f830152612638816125ff565b9050919050565b5f6040820190506126525f83018561241c565b61265f602083018461200b565b9392505050565b7f426f6e6420746f6b656e207472616e73666572206661696c65640000000000005f82015250565b5f61269a601a83611e8f565b91506126a582612666565b602082019050919050565b5f6020820190508181035f8301526126c78161268e565b9050919050565b7f546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e6774685f8201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b5f612728602983611e8f565b9150612733826126ce565b604082019050919050565b5f6020820190508181035f8301526127558161271c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f6127bd600f83611e8f565b91506127c882612789565b602082019050919050565b5f6020820190508181035f8301526127ea816127b1565b9050919050565b7f43616e277420636c61696d207a65726f20636f696e73000000000000000000005f82015250565b5f612825601683611e8f565b9150612830826127f1565b602082019050919050565b5f6020820190508181035f83015261285281612819565b9050919050565b5f8151905061286781611f78565b92915050565b5f6020828403121561288257612881611dca565b5b5f61288f84828501612859565b91505092915050565b7f4e6f20696e766573746f722066756e647320617661696c61626c652e000000005f82015250565b5f6128cc601c83611e8f565b91506128d782612898565b602082019050919050565b5f6020820190508181035f8301526128f9816128c0565b9050919050565b7f4661696c656420746f207472616e7366657220737461626c6520636f696e73005f82015250565b5f612934601f83611e8f565b915061293f82612900565b602082019050919050565b5f6020820190508181035f83015261296181612928565b9050919050565b5f60608201905061297b5f83018661241c565b612988602083018561200b565b612995604083018461200b565b949350505050565b5f6040820190506129b05f83018561241c565b6129bd60208301846120e1565b9392505050565b5f6129ce82611f6f565b91506129d983611f6f565b92508282019050808211156129f1576129f06124df565b5b9291505056fea2646970667358221220e1d951ad24e5b242d59fbe09145cfe04ae4ea37f3a54f755a9e941cd3b583f7464736f6c634300081a0033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3880 CODESIZE SUB DUP1 PUSH2 0x3880 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426F6E4465466920546F6B656E205369656D656E730000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42445349454D0000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0xA1A JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0xA1A JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x108 PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 DUP11 PUSH2 0x1F7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x139 PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 DUP10 PUSH2 0x1F7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP PUSH2 0x1E9 CALLER PUSH2 0x1BC PUSH2 0x2ED PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0xC51 JUMP JUMPDEST DUP4 DUP9 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0x2F5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0xDF1 JUMP JUMPDEST PUSH0 PUSH2 0x208 DUP4 DUP4 PUSH2 0x37A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2E3 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x280 PUSH2 0x3DE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2E7 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x365 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x376 PUSH0 DUP4 DUP4 PUSH2 0x3E5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F6 DUP4 DUP4 DUP4 PUSH2 0x3FB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x409 PUSH2 0x41F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x41A DUP4 DUP4 DUP4 PUSH2 0x466 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x42D PUSH2 0x67F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0x464 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4B6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x584 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x53F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5CB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x615 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x672 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6C1 DUP3 PUSH2 0x698 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D1 DUP2 PUSH2 0x6B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x6DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6EC DUP2 PUSH2 0x6C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x704 DUP2 PUSH2 0x6F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x70E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x71F DUP2 PUSH2 0x6FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x743 JUMPI PUSH2 0x742 PUSH2 0x694 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x750 DUP13 DUP3 DUP14 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH2 0x761 DUP13 DUP3 DUP14 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH2 0x772 DUP13 DUP3 DUP14 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x783 DUP13 DUP3 DUP14 ADD PUSH2 0x6DE JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0x794 DUP13 DUP3 DUP14 ADD PUSH2 0x711 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0x7A5 DUP13 DUP3 DUP14 ADD PUSH2 0x711 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH2 0x7B6 DUP13 DUP3 DUP14 ADD PUSH2 0x711 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 PUSH2 0x7C7 DUP13 DUP3 DUP14 ADD PUSH2 0x711 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 PUSH2 0x7D9 DUP13 DUP3 DUP14 ADD PUSH2 0x711 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x864 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x877 JUMPI PUSH2 0x876 PUSH2 0x820 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x8D9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x89E JUMP JUMPDEST PUSH2 0x8E3 DUP7 DUP4 PUSH2 0x89E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x91E PUSH2 0x919 PUSH2 0x914 DUP5 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x937 DUP4 PUSH2 0x904 JUMP JUMPDEST PUSH2 0x94B PUSH2 0x943 DUP3 PUSH2 0x925 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x8AA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x95F PUSH2 0x953 JUMP JUMPDEST PUSH2 0x96A DUP2 DUP5 DUP5 PUSH2 0x92E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x98D JUMPI PUSH2 0x982 PUSH0 DUP3 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x970 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9D2 JUMPI PUSH2 0x9A3 DUP2 PUSH2 0x87D JUMP JUMPDEST PUSH2 0x9AC DUP5 PUSH2 0x88F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x9BB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x9CF PUSH2 0x9C7 DUP6 PUSH2 0x88F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x96F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9F2 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x9D7 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA0A DUP4 DUP4 PUSH2 0x9E3 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA23 DUP3 PUSH2 0x7E9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA3C JUMPI PUSH2 0xA3B PUSH2 0x7F3 JUMP JUMPDEST JUMPDEST PUSH2 0xA46 DUP3 SLOAD PUSH2 0x84D JUMP JUMPDEST PUSH2 0xA51 DUP3 DUP3 DUP6 PUSH2 0x991 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA82 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xA70 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA7A DUP6 DUP3 PUSH2 0x9FF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA90 DUP7 PUSH2 0x87D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAB7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA92 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAD4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xAD0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x9E3 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xB6B JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xB47 JUMPI PUSH2 0xB46 PUSH2 0xAE9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xB56 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xB64 DUP6 PUSH2 0xB16 JUMP JUMPDEST SWAP5 POP PUSH2 0xB2B JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xB83 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC3E JUMP JUMPDEST DUP2 PUSH2 0xB90 JUMPI PUSH0 SWAP1 POP PUSH2 0xC3E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xBA6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xBB0 JUMPI PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xC3E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xBC2 JUMPI PUSH2 0xBC1 PUSH2 0xAE9 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xBD9 JUMPI PUSH2 0xBD8 PUSH2 0xAE9 JUMP JUMPDEST JUMPDEST POP PUSH2 0xC3E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xC14 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xC0F JUMPI PUSH2 0xC0E PUSH2 0xAE9 JUMP JUMPDEST JUMPDEST PUSH2 0xC3E JUMP JUMPDEST PUSH2 0xC21 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xB22 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xC38 JUMPI PUSH2 0xC37 PUSH2 0xAE9 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC5B DUP3 PUSH2 0x6F2 JUMP JUMPDEST SWAP2 POP PUSH2 0xC66 DUP4 PUSH2 0xC45 JUMP JUMPDEST SWAP3 POP PUSH2 0xC93 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xB74 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCD2 DUP3 PUSH2 0x6F2 JUMP JUMPDEST SWAP2 POP PUSH2 0xCDD DUP4 PUSH2 0x6F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xCED JUMPI PUSH2 0xCEC PUSH2 0xC9B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD02 DUP3 PUSH2 0x6F2 JUMP JUMPDEST SWAP2 POP PUSH2 0xD0D DUP4 PUSH2 0x6F2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xD1B DUP2 PUSH2 0x6F2 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xD32 JUMPI PUSH2 0xD31 PUSH2 0xAE9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD42 DUP2 PUSH2 0x6B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD5B PUSH0 DUP4 ADD DUP5 PUSH2 0xD39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD6B DUP3 PUSH2 0x6F2 JUMP JUMPDEST SWAP2 POP PUSH2 0xD76 DUP4 PUSH2 0x6F2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD8E JUMPI PUSH2 0xD8D PUSH2 0xAE9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD9D DUP2 PUSH2 0x6F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDB6 PUSH0 DUP4 ADD DUP7 PUSH2 0xD39 JUMP JUMPDEST PUSH2 0xDC3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xDD0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD94 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDEB PUSH0 DUP4 ADD DUP5 PUSH2 0xD94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x2A2D PUSH2 0xE53 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x736 ADD MSTORE DUP2 DUP2 PUSH2 0xDAD ADD MSTORE PUSH2 0xF0C ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0xB4A ADD MSTORE DUP2 DUP2 PUSH2 0x1264 ADD MSTORE DUP2 DUP2 PUSH2 0x12B2 ADD MSTORE PUSH2 0x12EE ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x6F8 ADD MSTORE DUP2 DUP2 PUSH2 0xD61 ADD MSTORE DUP2 DUP2 PUSH2 0xECF ADD MSTORE PUSH2 0x1002 ADD MSTORE PUSH2 0x2A2D PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA920260B GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xE091A39B EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0xEC8EBA14 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xF57D283E EQ PUSH2 0x5AF JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0xA920260B EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xCA19C11C EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xCED0550F EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x527 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B3 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x904835C4 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x429 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x2A0ACC6A GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B7 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x2A0ACC6A EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x357 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x10002DBD GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x10002DBD EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2CF JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x235 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x289 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x201A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x341 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x2162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x95C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37B PUSH2 0x9D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0xA0C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A1 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x201A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40B PUSH2 0xA9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x443 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x461 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49D PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EB PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x201A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0xDCF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x525 PUSH2 0xFD5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x541 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x119A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x2444 JUMP JUMPDEST PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x201A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57B PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x588 SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x599 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x1286 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x63D JUMPI POP PUSH2 0x63C DUP3 PUSH2 0x13B1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x653 SWAP1 PUSH2 0x24AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67F SWAP1 PUSH2 0x24AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6DE PUSH2 0x141A JUMP JUMPDEST SWAP1 POP PUSH2 0x6EB DUP2 DUP6 DUP6 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH32 0x0 DUP6 PUSH2 0x760 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x79A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F4 SWAP1 PUSH2 0x2621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x838 SWAP3 SWAP2 SWAP1 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x854 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x878 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AE SWAP1 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8CD PUSH2 0x141A JUMP JUMPDEST SWAP1 POP PUSH2 0x8DA DUP6 DUP3 DUP6 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x8E5 DUP6 DUP6 DUP6 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 DUP2 JUMP JUMPDEST PUSH2 0x93B DUP3 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x944 DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x94E DUP4 DUP4 PUSH2 0x15C9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x964 PUSH2 0x141A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D2 DUP3 DUP3 PUSH2 0x16B3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xA01 DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0xA09 PUSH2 0x179D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA1D PUSH2 0xA17 PUSH2 0x141A JUMP JUMPDEST DUP3 PUSH2 0x17FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA8C DUP3 PUSH2 0xA86 PUSH2 0x141A JUMP JUMPDEST DUP4 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0xA96 DUP3 DUP3 PUSH2 0x17FE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xAC4 DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0xACC PUSH2 0x187D JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xAF9 DUP2 PUSH2 0x15B5 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB34 SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC65 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xB98 JUMPI PUSH2 0xB97 PUSH2 0x275C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xBB3 JUMPI PUSH2 0xBB2 PUSH2 0x275C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC19 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0xC58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4F SWAP1 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xB3F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xCDE SWAP1 PUSH2 0x24AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD0A SWAP1 PUSH2 0x24AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD55 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD2C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD55 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD38 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD93 PUSH2 0x141A JUMP JUMPDEST SWAP1 POP PUSH2 0xDA0 DUP2 DUP6 DUP6 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE08 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE6A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE8E SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0xECD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC4 SWAP1 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH32 0x0 DUP5 PUSH2 0xF36 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF53 SWAP3 SWAP2 SWAP1 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF6F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0xFD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC9 SWAP1 PUSH2 0x2621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 PUSH2 0xFFF DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1059 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1074 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1098 SWAP2 SWAP1 PUSH2 0x286D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D3 SWAP1 PUSH2 0x28E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1117 SWAP3 SWAP2 SWAP1 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1133 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1157 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0x1196 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118D SWAP1 PUSH2 0x294A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11A3 DUP3 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x11AC DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x11B6 DUP4 DUP4 PUSH2 0x16B3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0x12B0 DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH32 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1349 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136D SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0x13AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A3 SWAP1 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x142E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x18DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x143E DUP5 DUP5 PUSH2 0x11BC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x14BF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x14B0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2968 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14BE DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x18DF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1535 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152C SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15A5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159C SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15B0 DUP4 DUP4 DUP4 PUSH2 0x1AAE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x15C6 DUP2 PUSH2 0x15C1 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x1ABE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x15D4 DUP4 DUP4 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x16A9 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1646 PUSH2 0x141A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x16AD JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16BE DUP4 DUP4 PUSH2 0xC6B JUMP JUMPDEST ISZERO PUSH2 0x1793 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1730 PUSH2 0x141A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1797 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17A5 PUSH2 0x1B0F JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x17E7 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F4 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x186E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1865 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1879 DUP3 PUSH0 DUP4 PUSH2 0x1AAE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1885 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x18C8 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D5 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x194F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1946 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19BF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B6 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1AA8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A9F SWAP2 SWAP1 PUSH2 0x201A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1AB9 DUP4 DUP4 DUP4 PUSH2 0x1B90 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1AC8 DUP3 DUP3 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x1B0B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B02 SWAP3 SWAP2 SWAP1 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1B17 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x1B4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1B57 PUSH2 0xA20 JUMP JUMPDEST ISZERO PUSH2 0x1B8E JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1B98 PUSH2 0x1B4F JUMP JUMPDEST PUSH2 0x1BA3 DUP4 DUP4 DUP4 PUSH2 0x1BA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BF8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1BEC SWAP2 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1CC6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1C81 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C78 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2968 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D0D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D57 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DB4 SWAP2 SWAP1 PUSH2 0x201A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E06 DUP2 PUSH2 0x1DD2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E21 DUP2 PUSH2 0x1DFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3C JUMPI PUSH2 0x1E3B PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E49 DUP5 DUP3 DUP6 ADD PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E66 DUP2 PUSH2 0x1E52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E7F PUSH0 DUP4 ADD DUP5 PUSH2 0x1E5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC7 DUP3 PUSH2 0x1E85 JUMP JUMPDEST PUSH2 0x1ED1 DUP2 DUP6 PUSH2 0x1E8F JUMP JUMPDEST SWAP4 POP PUSH2 0x1EE1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x1EEA DUP2 PUSH2 0x1EAD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F0D DUP2 DUP5 PUSH2 0x1EBD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F3E DUP3 PUSH2 0x1F15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F4E DUP2 PUSH2 0x1F34 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F69 DUP2 PUSH2 0x1F45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F81 DUP2 PUSH2 0x1F6F JUMP JUMPDEST DUP2 EQ PUSH2 0x1F8B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F9C DUP2 PUSH2 0x1F78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB8 JUMPI PUSH2 0x1FB7 PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FC5 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FD6 DUP6 DUP3 DUP7 ADD PUSH2 0x1F8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FF5 JUMPI PUSH2 0x1FF4 PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2002 DUP5 DUP3 DUP6 ADD PUSH2 0x1F8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2014 DUP2 PUSH2 0x1F6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x202D PUSH0 DUP4 ADD DUP5 PUSH2 0x200B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x204A JUMPI PUSH2 0x2049 PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2057 DUP7 DUP3 DUP8 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2068 DUP7 DUP3 DUP8 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2079 DUP7 DUP3 DUP8 ADD PUSH2 0x1F8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2095 DUP2 PUSH2 0x2083 JUMP JUMPDEST DUP2 EQ PUSH2 0x209F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20B0 DUP2 PUSH2 0x208C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20CB JUMPI PUSH2 0x20CA PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D8 DUP5 DUP3 DUP6 ADD PUSH2 0x20A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20EA DUP2 PUSH2 0x2083 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2103 PUSH0 DUP4 ADD DUP5 PUSH2 0x20E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x211F JUMPI PUSH2 0x211E PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x212C DUP6 DUP3 DUP7 ADD PUSH2 0x20A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x213D DUP6 DUP3 DUP7 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x215C DUP2 PUSH2 0x2147 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2175 PUSH0 DUP4 ADD DUP5 PUSH2 0x2153 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2190 JUMPI PUSH2 0x218F PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x219D DUP5 DUP3 DUP6 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x21E0 DUP3 PUSH2 0x1EAD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21FF JUMPI PUSH2 0x21FE PUSH2 0x21AA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2211 PUSH2 0x1DC1 JUMP JUMPDEST SWAP1 POP PUSH2 0x221D DUP3 DUP3 PUSH2 0x21D7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x223C JUMPI PUSH2 0x223B PUSH2 0x21AA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x2263 PUSH2 0x225E DUP5 PUSH2 0x2222 JUMP JUMPDEST PUSH2 0x2208 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2286 JUMPI PUSH2 0x2285 PUSH2 0x224D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22AF JUMPI DUP1 PUSH2 0x229B DUP9 DUP3 PUSH2 0x1F5B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2288 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22CD JUMPI PUSH2 0x22CC PUSH2 0x21A6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22DD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2251 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2300 JUMPI PUSH2 0x22FF PUSH2 0x21AA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2323 PUSH2 0x231E DUP5 PUSH2 0x22E6 JUMP JUMPDEST PUSH2 0x2208 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2346 JUMPI PUSH2 0x2345 PUSH2 0x224D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x236F JUMPI DUP1 PUSH2 0x235B DUP9 DUP3 PUSH2 0x1F8E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2348 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x238D JUMPI PUSH2 0x238C PUSH2 0x21A6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x239D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2311 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23BC JUMPI PUSH2 0x23BB PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23D9 JUMPI PUSH2 0x23D8 PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST PUSH2 0x23E5 DUP6 DUP3 DUP7 ADD PUSH2 0x22B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2406 JUMPI PUSH2 0x2405 PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST PUSH2 0x2412 DUP6 DUP3 DUP7 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2425 DUP2 PUSH2 0x1F34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x243E PUSH0 DUP4 ADD DUP5 PUSH2 0x241C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x245A JUMPI PUSH2 0x2459 PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2467 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2478 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24C6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24D9 JUMPI PUSH2 0x24D8 PUSH2 0x2482 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2516 DUP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP2 POP PUSH2 0x2521 DUP4 PUSH2 0x1F6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x252F DUP2 PUSH2 0x1F6F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2546 JUMPI PUSH2 0x2545 PUSH2 0x24DF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2560 PUSH0 DUP4 ADD DUP7 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x256D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x257A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x200B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x258B DUP2 PUSH2 0x1E52 JUMP JUMPDEST DUP2 EQ PUSH2 0x2595 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25A6 DUP2 PUSH2 0x2582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C1 JUMPI PUSH2 0x25C0 PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25CE DUP5 DUP3 DUP6 ADD PUSH2 0x2598 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537461626C6520636F696E207472616E73666572206661696C65640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x260B PUSH1 0x1B DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x2616 DUP3 PUSH2 0x25D7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2638 DUP2 PUSH2 0x25FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2652 PUSH0 DUP4 ADD DUP6 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x265F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x200B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x426F6E6420746F6B656E207472616E73666572206661696C6564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x269A PUSH1 0x1A DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x26A5 DUP3 PUSH2 0x2666 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26C7 DUP2 PUSH2 0x268E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20686F6C6465727320616E6420616D6F756E7473206C656E677468 PUSH0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2728 PUSH1 0x29 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x2733 DUP3 PUSH2 0x26CE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2755 DUP2 PUSH2 0x271C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27BD PUSH1 0xF DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x27C8 DUP3 PUSH2 0x2789 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27EA DUP2 PUSH2 0x27B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E277420636C61696D207A65726F20636F696E7300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2825 PUSH1 0x16 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x2830 DUP3 PUSH2 0x27F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2852 DUP2 PUSH2 0x2819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2867 DUP2 PUSH2 0x1F78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2882 JUMPI PUSH2 0x2881 PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x288F DUP5 DUP3 DUP6 ADD PUSH2 0x2859 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20696E766573746F722066756E647320617661696C61626C652E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28CC PUSH1 0x1C DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x28D7 DUP3 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28F9 DUP2 PUSH2 0x28C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E7366657220737461626C6520636F696E7300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2934 PUSH1 0x1F DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x293F DUP3 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2961 DUP2 PUSH2 0x2928 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x297B PUSH0 DUP4 ADD DUP7 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x2988 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x200B JUMP JUMPDEST PUSH2 0x2995 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x200B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x29B0 PUSH0 DUP4 ADD DUP6 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x29BD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29CE DUP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP2 POP PUSH2 0x29D9 DUP4 PUSH2 0x1F6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x29F1 JUMPI PUSH2 0x29F0 PUSH2 0x24DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xD9 MLOAD 0xAD 0x24 0xE5 0xB2 TIMESTAMP 0xD5 SWAP16 0xBE MULMOD EQ TLOAD INVALID DIV 0xAE 0x4E LOG3 PUSH32 0x3A54F755A9E941CD3B583F7464736F6C634300081A0033000000000000000000 ",
							"sourceMap": "373:2859:12:-:0;;;709:532;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1241:5:9;1231:7;;:15;;;;;;;;;;;;;;;;;;984:32:12::1;494:18;1002:13;984:10;;;:32;;:::i;:::-;;1026:35;556:24;1050:10;1026;;;:35;;:::i;:::-;;1084:11;1071:24;;;;;;;;::::0;::::1;1120:13;1105:28;;;;;;;;::::0;::::1;1154:9;1143:20;;;;::::0;::::1;1173:61;1179:10;1223;:8;;;:10;;:::i;:::-;1217:2;:16;;;;:::i;:::-;1204:9;1192;:21;;;;:::i;:::-;1191:42;;;;:::i;:::-;1173:5;;;:61;;:::i;:::-;709:532:::0;;;;;;;;;373:2859;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;3002:82:3:-;3051:5;3075:2;3068:9;;3002:82;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;3065:165:12:-;3193:30;3207:4;3213:2;3217:5;3193:13;;;:30;;:::i;:::-;3065:165;;;:::o;1112:145:6:-;1474:19:9;:17;;;:19;;:::i;:::-;1220:30:6::1;1234:4;1240:2;1244:5;1220:13;;;:30;;:::i;:::-;1112:145:::0;;;:::o;2002:128:9:-;2067:8;:6;;;:8;;:::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;6271:1107:3:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;1850:84:9:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:1605::-;1347:6;1355;1363;1371;1379;1387;1395;1403;1411;1460:3;1448:9;1439:7;1435:23;1431:33;1428:120;;;1467:79;;:::i;:::-;1428:120;1587:1;1612:64;1668:7;1659:6;1648:9;1644:22;1612:64;:::i;:::-;1602:74;;1558:128;1725:2;1751:64;1807:7;1798:6;1787:9;1783:22;1751:64;:::i;:::-;1741:74;;1696:129;1864:2;1890:64;1946:7;1937:6;1926:9;1922:22;1890:64;:::i;:::-;1880:74;;1835:129;2003:2;2029:64;2085:7;2076:6;2065:9;2061:22;2029:64;:::i;:::-;2019:74;;1974:129;2142:3;2169:64;2225:7;2216:6;2205:9;2201:22;2169:64;:::i;:::-;2159:74;;2113:130;2282:3;2309:64;2365:7;2356:6;2345:9;2341:22;2309:64;:::i;:::-;2299:74;;2253:130;2422:3;2449:64;2505:7;2496:6;2485:9;2481:22;2449:64;:::i;:::-;2439:74;;2393:130;2562:3;2589:64;2645:7;2636:6;2625:9;2621:22;2589:64;:::i;:::-;2579:74;;2533:130;2702:3;2729:64;2785:7;2776:6;2765:9;2761:22;2729:64;:::i;:::-;2719:74;;2673:130;1205:1605;;;;;;;;;;;:::o;2816:99::-;2868:6;2902:5;2896:12;2886:22;;2816:99;;;:::o;2921:180::-;2969:77;2966:1;2959:88;3066:4;3063:1;3056:15;3090:4;3087:1;3080:15;3107:180;3155:77;3152:1;3145:88;3252:4;3249:1;3242:15;3276:4;3273:1;3266:15;3293:320;3337:6;3374:1;3368:4;3364:12;3354:22;;3421:1;3415:4;3411:12;3442:18;3432:81;;3498:4;3490:6;3486:17;3476:27;;3432:81;3560:2;3552:6;3549:14;3529:18;3526:38;3523:84;;3579:18;;:::i;:::-;3523:84;3344:269;3293:320;;;:::o;3619:141::-;3668:4;3691:3;3683:11;;3714:3;3711:1;3704:14;3748:4;3745:1;3735:18;3727:26;;3619:141;;;:::o;3766:93::-;3803:6;3850:2;3845;3838:5;3834:14;3830:23;3820:33;;3766:93;;;:::o;3865:107::-;3909:8;3959:5;3953:4;3949:16;3928:37;;3865:107;;;;:::o;3978:393::-;4047:6;4097:1;4085:10;4081:18;4120:97;4150:66;4139:9;4120:97;:::i;:::-;4238:39;4268:8;4257:9;4238:39;:::i;:::-;4226:51;;4310:4;4306:9;4299:5;4295:21;4286:30;;4359:4;4349:8;4345:19;4338:5;4335:30;4325:40;;4054:317;;3978:393;;;;;:::o;4377:60::-;4405:3;4426:5;4419:12;;4377:60;;;:::o;4443:142::-;4493:9;4526:53;4544:34;4553:24;4571:5;4553:24;:::i;:::-;4544:34;:::i;:::-;4526:53;:::i;:::-;4513:66;;4443:142;;;:::o;4591:75::-;4634:3;4655:5;4648:12;;4591:75;;;:::o;4672:269::-;4782:39;4813:7;4782:39;:::i;:::-;4843:91;4892:41;4916:16;4892:41;:::i;:::-;4884:6;4877:4;4871:11;4843:91;:::i;:::-;4837:4;4830:105;4748:193;4672:269;;;:::o;4947:73::-;4992:3;4947:73;:::o;5026:189::-;5103:32;;:::i;:::-;5144:65;5202:6;5194;5188:4;5144:65;:::i;:::-;5079:136;5026:189;;:::o;5221:186::-;5281:120;5298:3;5291:5;5288:14;5281:120;;;5352:39;5389:1;5382:5;5352:39;:::i;:::-;5325:1;5318:5;5314:13;5305:22;;5281:120;;;5221:186;;:::o;5413:543::-;5514:2;5509:3;5506:11;5503:446;;;5548:38;5580:5;5548:38;:::i;:::-;5632:29;5650:10;5632:29;:::i;:::-;5622:8;5618:44;5815:2;5803:10;5800:18;5797:49;;;5836:8;5821:23;;5797:49;5859:80;5915:22;5933:3;5915:22;:::i;:::-;5905:8;5901:37;5888:11;5859:80;:::i;:::-;5518:431;;5503:446;5413:543;;;:::o;5962:117::-;6016:8;6066:5;6060:4;6056:16;6035:37;;5962:117;;;;:::o;6085:169::-;6129:6;6162:51;6210:1;6206:6;6198:5;6195:1;6191:13;6162:51;:::i;:::-;6158:56;6243:4;6237;6233:15;6223:25;;6136:118;6085:169;;;;:::o;6259:295::-;6335:4;6481:29;6506:3;6500:4;6481:29;:::i;:::-;6473:37;;6543:3;6540:1;6536:11;6530:4;6527:21;6519:29;;6259:295;;;;:::o;6559:1395::-;6676:37;6709:3;6676:37;:::i;:::-;6778:18;6770:6;6767:30;6764:56;;;6800:18;;:::i;:::-;6764:56;6844:38;6876:4;6870:11;6844:38;:::i;:::-;6929:67;6989:6;6981;6975:4;6929:67;:::i;:::-;7023:1;7047:4;7034:17;;7079:2;7071:6;7068:14;7096:1;7091:618;;;;7753:1;7770:6;7767:77;;;7819:9;7814:3;7810:19;7804:26;7795:35;;7767:77;7870:67;7930:6;7923:5;7870:67;:::i;:::-;7864:4;7857:81;7726:222;7061:887;;7091:618;7143:4;7139:9;7131:6;7127:22;7177:37;7209:4;7177:37;:::i;:::-;7236:1;7250:208;7264:7;7261:1;7258:14;7250:208;;;7343:9;7338:3;7334:19;7328:26;7320:6;7313:42;7394:1;7386:6;7382:14;7372:24;;7441:2;7430:9;7426:18;7413:31;;7287:4;7284:1;7280:12;7275:17;;7250:208;;;7486:6;7477:7;7474:19;7471:179;;;7544:9;7539:3;7535:19;7529:26;7587:48;7629:4;7621:6;7617:17;7606:9;7587:48;:::i;:::-;7579:6;7572:64;7494:156;7471:179;7696:1;7692;7684:6;7680:14;7676:22;7670:4;7663:36;7098:611;;;7061:887;;6651:1303;;;6559:1395;;:::o;7960:180::-;8008:77;8005:1;7998:88;8105:4;8102:1;8095:15;8129:4;8126:1;8119:15;8146:102;8188:8;8235:5;8232:1;8228:13;8207:34;;8146:102;;;:::o;8254:848::-;8315:5;8322:4;8346:6;8337:15;;8370:5;8361:14;;8384:712;8405:1;8395:8;8392:15;8384:712;;;8500:4;8495:3;8491:14;8485:4;8482:24;8479:50;;;8509:18;;:::i;:::-;8479:50;8559:1;8549:8;8545:16;8542:451;;;8974:4;8967:5;8963:16;8954:25;;8542:451;9024:4;9018;9014:15;9006:23;;9054:32;9077:8;9054:32;:::i;:::-;9042:44;;8384:712;;;8254:848;;;;;;;:::o;9108:1073::-;9162:5;9353:8;9343:40;;9374:1;9365:10;;9376:5;;9343:40;9402:4;9392:36;;9419:1;9410:10;;9421:5;;9392:36;9488:4;9536:1;9531:27;;;;9572:1;9567:191;;;;9481:277;;9531:27;9549:1;9540:10;;9551:5;;;9567:191;9612:3;9602:8;9599:17;9596:43;;;9619:18;;:::i;:::-;9596:43;9668:8;9665:1;9661:16;9652:25;;9703:3;9696:5;9693:14;9690:40;;;9710:18;;:::i;:::-;9690:40;9743:5;;;9481:277;;9867:2;9857:8;9854:16;9848:3;9842:4;9839:13;9835:36;9817:2;9807:8;9804:16;9799:2;9793:4;9790:12;9786:35;9770:111;9767:246;;;9923:8;9917:4;9913:19;9904:28;;9958:3;9951:5;9948:14;9945:40;;;9965:18;;:::i;:::-;9945:40;9998:5;;9767:246;10038:42;10076:3;10066:8;10060:4;10057:1;10038:42;:::i;:::-;10023:57;;;;10112:4;10107:3;10103:14;10096:5;10093:25;10090:51;;;10121:18;;:::i;:::-;10090:51;10170:4;10163:5;10159:16;10150:25;;9108:1073;;;;;;:::o;10187:86::-;10222:7;10262:4;10255:5;10251:16;10240:27;;10187:86;;;:::o;10279:281::-;10337:5;10361:23;10379:4;10361:23;:::i;:::-;10353:31;;10405:25;10421:8;10405:25;:::i;:::-;10393:37;;10449:104;10486:66;10476:8;10470:4;10449:104;:::i;:::-;10440:113;;10279:281;;;;:::o;10566:180::-;10614:77;10611:1;10604:88;10711:4;10708:1;10701:15;10735:4;10732:1;10725:15;10752:185;10792:1;10809:20;10827:1;10809:20;:::i;:::-;10804:25;;10843:20;10861:1;10843:20;:::i;:::-;10838:25;;10882:1;10872:35;;10887:18;;:::i;:::-;10872:35;10929:1;10926;10922:9;10917:14;;10752:185;;;;:::o;10943:410::-;10983:7;11006:20;11024:1;11006:20;:::i;:::-;11001:25;;11040:20;11058:1;11040:20;:::i;:::-;11035:25;;11095:1;11092;11088:9;11117:30;11135:11;11117:30;:::i;:::-;11106:41;;11296:1;11287:7;11283:15;11280:1;11277:22;11257:1;11250:9;11230:83;11207:139;;11326:18;;:::i;:::-;11207:139;10991:362;10943:410;;;;:::o;11359:118::-;11446:24;11464:5;11446:24;:::i;:::-;11441:3;11434:37;11359:118;;:::o;11483:222::-;11576:4;11614:2;11603:9;11599:18;11591:26;;11627:71;11695:1;11684:9;11680:17;11671:6;11627:71;:::i;:::-;11483:222;;;;:::o;11711:191::-;11751:3;11770:20;11788:1;11770:20;:::i;:::-;11765:25;;11804:20;11822:1;11804:20;:::i;:::-;11799:25;;11847:1;11844;11840:9;11833:16;;11868:3;11865:1;11862:10;11859:36;;;11875:18;;:::i;:::-;11859:36;11711:191;;;;:::o;11908:118::-;11995:24;12013:5;11995:24;:::i;:::-;11990:3;11983:37;11908:118;;:::o;12032:442::-;12181:4;12219:2;12208:9;12204:18;12196:26;;12232:71;12300:1;12289:9;12285:17;12276:6;12232:71;:::i;:::-;12313:72;12381:2;12370:9;12366:18;12357:6;12313:72;:::i;:::-;12395;12463:2;12452:9;12448:18;12439:6;12395:72;:::i;:::-;12032:442;;;;;;:::o;12480:222::-;12573:4;12611:2;12600:9;12596:18;12588:26;;12624:71;12692:1;12681:9;12677:17;12668:6;12624:71;:::i;:::-;12480:222;;;;:::o;373:2859:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_1416": {
									"entryPoint": 2318,
									"id": 1416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@BOND_ISSUER_1421": {
									"entryPoint": 4670,
									"id": 1421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 3459,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_921": {
									"entryPoint": 5153,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_981": {
									"entryPoint": 6367,
									"id": 981,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_903": {
									"entryPoint": 6142,
									"id": 903,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 6846,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 5557,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 5577,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1226": {
									"entryPoint": 5146,
									"id": 1226,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1344": {
									"entryPoint": 6269,
									"id": 1344,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1315": {
									"entryPoint": 6991,
									"id": 1315,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1328": {
									"entryPoint": 6927,
									"id": 1328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 5811,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1029": {
									"entryPoint": 5171,
									"id": 1029,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_760": {
									"entryPoint": 5317,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1360": {
									"entryPoint": 6045,
									"id": 1360,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1187": {
									"entryPoint": 7056,
									"id": 1187,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1722": {
									"entryPoint": 6830,
									"id": 1722,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 7080,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_657": {
									"entryPoint": 4540,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_681": {
									"entryPoint": 1748,
									"id": 681,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_616": {
									"entryPoint": 2613,
									"id": 616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1153": {
									"entryPoint": 2682,
									"id": 1153,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1132": {
									"entryPoint": 2572,
									"id": 1132,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyBond_1545": {
									"entryPoint": 1782,
									"id": 1545,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimFaceValue_1701": {
									"entryPoint": 3535,
									"id": 1701,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimInvestorFunds_1658": {
									"entryPoint": 4053,
									"id": 1658,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_594": {
									"entryPoint": 2388,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@distributeInterestAll_1620": {
									"entryPoint": 2767,
									"id": 1620,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@distributeInterest_1568": {
									"entryPoint": 4742,
									"id": 1568,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 2289,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 2354,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 3179,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@interestCoin_1425": {
									"entryPoint": 4706,
									"id": 1425,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_576": {
									"entryPoint": 1604,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1499": {
									"entryPoint": 2714,
									"id": 1499,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1303": {
									"entryPoint": 2592,
									"id": 1303,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 2396,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 4506,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stableCoin_1423": {
									"entryPoint": 3423,
									"id": 1423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1384": {
									"entryPoint": 5041,
									"id": 1384,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1483,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_585": {
									"entryPoint": 3279,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_603": {
									"entryPoint": 2234,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_713": {
									"entryPoint": 2243,
									"id": 713,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_640": {
									"entryPoint": 3465,
									"id": 640,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unitSize_1427": {
									"entryPoint": 3499,
									"id": 1427,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_1509": {
									"entryPoint": 2519,
									"id": 1509,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8785,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8977,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 8354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 8374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 8457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 10349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 8417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9549,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 10653,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9791,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10600,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 8432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7617,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 8323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7839,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 9439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9346,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10076,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8618,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8614,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8781,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7630,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7626,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15": {
									"entryPoint": 10392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 10121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f": {
									"entryPoint": 9934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764": {
									"entryPoint": 9830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d": {
									"entryPoint": 9687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b": {
									"entryPoint": 10496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464": {
									"entryPoint": 10225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 8332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24254:13",
										"nodeType": "YulBlock",
										"src": "0:24254:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1577:40:13",
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nativeSrc": "1588:22:13",
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nativeSrc": "1598:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:13",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nativeSrc": "1719:73:13",
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nativeSrc": "1729:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nativeSrc": "1729:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nativeSrc": "1757:29:13",
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nativeSrc": "1772:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:13",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:13",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:13",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nativeSrc": "1860:77:13",
													"nodeType": "YulBlock",
													"src": "1860:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:13"
																},
																"nativeSrc": "1871:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:13"
															},
															"nativeSrc": "1871:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:13"
																		},
																		"nativeSrc": "1910:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:13"
																},
																"nativeSrc": "1903:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:13"
															},
															"nativeSrc": "1903:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:13",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:13",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:13",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:139:13"
											},
											{
												"body": {
													"nativeSrc": "1991:54:13",
													"nodeType": "YulBlock",
													"src": "1991:54:13",
													"statements": [
														{
															"nativeSrc": "2001:38:13",
															"nodeType": "YulAssignment",
															"src": "2001:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:13"
																		},
																		"nativeSrc": "2015:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:13"
																		},
																		"nativeSrc": "2031:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:13"
																},
																"nativeSrc": "2011:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:13",
														"nodeType": "YulTypedName",
														"src": "1974:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:13",
														"nodeType": "YulTypedName",
														"src": "1984:6:13",
														"type": ""
													}
												],
												"src": "1943:102:13"
											},
											{
												"body": {
													"nativeSrc": "2143:285:13",
													"nodeType": "YulBlock",
													"src": "2143:285:13",
													"statements": [
														{
															"nativeSrc": "2153:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:13"
																},
																"nativeSrc": "2167:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:13",
															"nodeType": "YulAssignment",
															"src": "2215:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:13"
																},
																"nativeSrc": "2222:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:13"
																		},
																		"nativeSrc": "2337:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:13"
																},
																"nativeSrc": "2302:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:13"
															},
															"nativeSrc": "2302:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:13"
														},
														{
															"nativeSrc": "2376:46:13",
															"nodeType": "YulAssignment",
															"src": "2376:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:13"
																		},
																		"nativeSrc": "2392:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:13"
																},
																"nativeSrc": "2383:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:13",
														"nodeType": "YulTypedName",
														"src": "2124:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:13",
														"nodeType": "YulTypedName",
														"src": "2131:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:13",
														"nodeType": "YulTypedName",
														"src": "2139:3:13",
														"type": ""
													}
												],
												"src": "2051:377:13"
											},
											{
												"body": {
													"nativeSrc": "2552:195:13",
													"nodeType": "YulBlock",
													"src": "2552:195:13",
													"statements": [
														{
															"nativeSrc": "2562:26:13",
															"nodeType": "YulAssignment",
															"src": "2562:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:13"
																},
																"nativeSrc": "2570:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:13"
																		},
																		"nativeSrc": "2605:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:13"
																		},
																		"nativeSrc": "2624:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:13"
																},
																"nativeSrc": "2598:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:13"
															},
															"nativeSrc": "2598:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:13"
														},
														{
															"nativeSrc": "2654:86:13",
															"nodeType": "YulAssignment",
															"src": "2654:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:13"
																},
																"nativeSrc": "2662:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:13",
														"nodeType": "YulTypedName",
														"src": "2524:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:13",
														"nodeType": "YulTypedName",
														"src": "2536:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:13",
														"nodeType": "YulTypedName",
														"src": "2547:4:13",
														"type": ""
													}
												],
												"src": "2434:313:13"
											},
											{
												"body": {
													"nativeSrc": "2798:81:13",
													"nodeType": "YulBlock",
													"src": "2798:81:13",
													"statements": [
														{
															"nativeSrc": "2808:65:13",
															"nodeType": "YulAssignment",
															"src": "2808:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:13",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:13"
																},
																"nativeSrc": "2819:54:13",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:13",
														"nodeType": "YulTypedName",
														"src": "2780:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:13",
														"nodeType": "YulTypedName",
														"src": "2790:7:13",
														"type": ""
													}
												],
												"src": "2753:126:13"
											},
											{
												"body": {
													"nativeSrc": "2930:51:13",
													"nodeType": "YulBlock",
													"src": "2930:51:13",
													"statements": [
														{
															"nativeSrc": "2940:35:13",
															"nodeType": "YulAssignment",
															"src": "2940:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:13"
																},
																"nativeSrc": "2951:24:13",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:13",
														"nodeType": "YulTypedName",
														"src": "2912:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:13",
														"nodeType": "YulTypedName",
														"src": "2922:7:13",
														"type": ""
													}
												],
												"src": "2885:96:13"
											},
											{
												"body": {
													"nativeSrc": "3030:79:13",
													"nodeType": "YulBlock",
													"src": "3030:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:13",
																"nodeType": "YulBlock",
																"src": "3087:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:13"
																			},
																			"nativeSrc": "3089:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:13"
																		},
																		"nativeSrc": "3089:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:13"
																				},
																				"nativeSrc": "3060:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:13"
																		},
																		"nativeSrc": "3050:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:13"
																},
																"nativeSrc": "3043:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:13"
															},
															"nativeSrc": "3040:63:13",
															"nodeType": "YulIf",
															"src": "3040:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:13",
														"nodeType": "YulTypedName",
														"src": "3023:5:13",
														"type": ""
													}
												],
												"src": "2987:122:13"
											},
											{
												"body": {
													"nativeSrc": "3167:87:13",
													"nodeType": "YulBlock",
													"src": "3167:87:13",
													"statements": [
														{
															"nativeSrc": "3177:29:13",
															"nodeType": "YulAssignment",
															"src": "3177:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:13"
																},
																"nativeSrc": "3186:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:13"
																},
																"nativeSrc": "3215:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:13"
															},
															"nativeSrc": "3215:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:13",
														"nodeType": "YulTypedName",
														"src": "3145:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:13",
														"nodeType": "YulTypedName",
														"src": "3153:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:13",
														"nodeType": "YulTypedName",
														"src": "3161:5:13",
														"type": ""
													}
												],
												"src": "3115:139:13"
											},
											{
												"body": {
													"nativeSrc": "3305:32:13",
													"nodeType": "YulBlock",
													"src": "3305:32:13",
													"statements": [
														{
															"nativeSrc": "3315:16:13",
															"nodeType": "YulAssignment",
															"src": "3315:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:13",
																"nodeType": "YulIdentifier",
																"src": "3326:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:13",
														"nodeType": "YulTypedName",
														"src": "3287:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:13",
														"nodeType": "YulTypedName",
														"src": "3297:7:13",
														"type": ""
													}
												],
												"src": "3260:77:13"
											},
											{
												"body": {
													"nativeSrc": "3386:79:13",
													"nodeType": "YulBlock",
													"src": "3386:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:13",
																"nodeType": "YulBlock",
																"src": "3443:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:13"
																			},
																			"nativeSrc": "3445:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:13"
																		},
																		"nativeSrc": "3445:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:13"
																				},
																				"nativeSrc": "3416:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:13"
																		},
																		"nativeSrc": "3406:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:13"
																},
																"nativeSrc": "3399:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:13"
															},
															"nativeSrc": "3396:63:13",
															"nodeType": "YulIf",
															"src": "3396:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:13",
														"nodeType": "YulTypedName",
														"src": "3379:5:13",
														"type": ""
													}
												],
												"src": "3343:122:13"
											},
											{
												"body": {
													"nativeSrc": "3523:87:13",
													"nodeType": "YulBlock",
													"src": "3523:87:13",
													"statements": [
														{
															"nativeSrc": "3533:29:13",
															"nodeType": "YulAssignment",
															"src": "3533:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:13"
																},
																"nativeSrc": "3542:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:13"
																},
																"nativeSrc": "3571:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:13"
															},
															"nativeSrc": "3571:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:13",
														"nodeType": "YulTypedName",
														"src": "3501:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:13",
														"nodeType": "YulTypedName",
														"src": "3509:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:13",
														"nodeType": "YulTypedName",
														"src": "3517:5:13",
														"type": ""
													}
												],
												"src": "3471:139:13"
											},
											{
												"body": {
													"nativeSrc": "3699:391:13",
													"nodeType": "YulBlock",
													"src": "3699:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:13",
																"nodeType": "YulBlock",
																"src": "3745:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:13"
																			},
																			"nativeSrc": "3747:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:13"
																		},
																		"nativeSrc": "3747:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:13"
																		},
																		"nativeSrc": "3716:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:13"
																},
																"nativeSrc": "3712:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:13"
															},
															"nativeSrc": "3709:119:13",
															"nodeType": "YulIf",
															"src": "3709:119:13"
														},
														{
															"nativeSrc": "3838:117:13",
															"nodeType": "YulBlock",
															"src": "3838:117:13",
															"statements": [
																{
																	"nativeSrc": "3853:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:13"
																				},
																				"nativeSrc": "3913:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:13"
																		},
																		"nativeSrc": "3892:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:13",
															"nodeType": "YulBlock",
															"src": "3965:118:13",
															"statements": [
																{
																	"nativeSrc": "3980:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:13"
																				},
																				"nativeSrc": "4041:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:13"
																		},
																		"nativeSrc": "4020:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:13",
														"nodeType": "YulTypedName",
														"src": "3661:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:13",
														"nodeType": "YulTypedName",
														"src": "3672:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:13",
														"nodeType": "YulTypedName",
														"src": "3684:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:13",
														"nodeType": "YulTypedName",
														"src": "3692:6:13",
														"type": ""
													}
												],
												"src": "3616:474:13"
											},
											{
												"body": {
													"nativeSrc": "4162:263:13",
													"nodeType": "YulBlock",
													"src": "4162:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4208:83:13",
																"nodeType": "YulBlock",
																"src": "4208:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4210:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4210:77:13"
																			},
																			"nativeSrc": "4210:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4210:79:13"
																		},
																		"nativeSrc": "4210:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4210:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4183:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4183:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4192:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4192:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4179:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4179:3:13"
																		},
																		"nativeSrc": "4179:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4179:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4204:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4204:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4175:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4175:3:13"
																},
																"nativeSrc": "4175:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4175:32:13"
															},
															"nativeSrc": "4172:119:13",
															"nodeType": "YulIf",
															"src": "4172:119:13"
														},
														{
															"nativeSrc": "4301:117:13",
															"nodeType": "YulBlock",
															"src": "4301:117:13",
															"statements": [
																{
																	"nativeSrc": "4316:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4316:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4330:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4330:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4320:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4320:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4345:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4345:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4380:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4380:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4391:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4391:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4376:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4376:3:13"
																				},
																				"nativeSrc": "4376:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4376:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4400:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4400:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4355:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4355:20:13"
																		},
																		"nativeSrc": "4355:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4355:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4345:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4345:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4096:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4132:9:13",
														"nodeType": "YulTypedName",
														"src": "4132:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4143:7:13",
														"nodeType": "YulTypedName",
														"src": "4143:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4155:6:13",
														"nodeType": "YulTypedName",
														"src": "4155:6:13",
														"type": ""
													}
												],
												"src": "4096:329:13"
											},
											{
												"body": {
													"nativeSrc": "4496:53:13",
													"nodeType": "YulBlock",
													"src": "4496:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4513:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4513:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4536:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4536:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4518:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4518:17:13"
																		},
																		"nativeSrc": "4518:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4518:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4506:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4506:6:13"
																},
																"nativeSrc": "4506:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4506:37:13"
															},
															"nativeSrc": "4506:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4506:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4431:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4484:5:13",
														"nodeType": "YulTypedName",
														"src": "4484:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4491:3:13",
														"nodeType": "YulTypedName",
														"src": "4491:3:13",
														"type": ""
													}
												],
												"src": "4431:118:13"
											},
											{
												"body": {
													"nativeSrc": "4653:124:13",
													"nodeType": "YulBlock",
													"src": "4653:124:13",
													"statements": [
														{
															"nativeSrc": "4663:26:13",
															"nodeType": "YulAssignment",
															"src": "4663:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4675:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4675:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4686:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4686:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4671:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:13"
																},
																"nativeSrc": "4671:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4671:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4663:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4663:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4743:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4743:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4756:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4756:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4767:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4767:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4752:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4752:3:13"
																		},
																		"nativeSrc": "4752:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4752:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4699:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4699:43:13"
																},
																"nativeSrc": "4699:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4699:71:13"
															},
															"nativeSrc": "4699:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4699:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4555:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4625:9:13",
														"nodeType": "YulTypedName",
														"src": "4625:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4637:6:13",
														"nodeType": "YulTypedName",
														"src": "4637:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4648:4:13",
														"nodeType": "YulTypedName",
														"src": "4648:4:13",
														"type": ""
													}
												],
												"src": "4555:222:13"
											},
											{
												"body": {
													"nativeSrc": "4883:519:13",
													"nodeType": "YulBlock",
													"src": "4883:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:13",
																"nodeType": "YulBlock",
																"src": "4929:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:13"
																			},
																			"nativeSrc": "4931:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:13"
																		},
																		"nativeSrc": "4931:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:13"
																		},
																		"nativeSrc": "4900:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:13"
																},
																"nativeSrc": "4896:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:13"
															},
															"nativeSrc": "4893:119:13",
															"nodeType": "YulIf",
															"src": "4893:119:13"
														},
														{
															"nativeSrc": "5022:117:13",
															"nodeType": "YulBlock",
															"src": "5022:117:13",
															"statements": [
																{
																	"nativeSrc": "5037:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:13"
																				},
																				"nativeSrc": "5097:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:13"
																		},
																		"nativeSrc": "5076:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:13",
															"nodeType": "YulBlock",
															"src": "5149:118:13",
															"statements": [
																{
																	"nativeSrc": "5164:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:13"
																				},
																				"nativeSrc": "5225:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:13"
																		},
																		"nativeSrc": "5204:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:13",
															"nodeType": "YulBlock",
															"src": "5277:118:13",
															"statements": [
																{
																	"nativeSrc": "5292:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:13"
																				},
																				"nativeSrc": "5353:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:13"
																		},
																		"nativeSrc": "5332:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:13",
														"nodeType": "YulTypedName",
														"src": "4837:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:13",
														"nodeType": "YulTypedName",
														"src": "4848:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:13",
														"nodeType": "YulTypedName",
														"src": "4860:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:13",
														"nodeType": "YulTypedName",
														"src": "4868:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:13",
														"nodeType": "YulTypedName",
														"src": "4876:6:13",
														"type": ""
													}
												],
												"src": "4783:619:13"
											},
											{
												"body": {
													"nativeSrc": "5453:32:13",
													"nodeType": "YulBlock",
													"src": "5453:32:13",
													"statements": [
														{
															"nativeSrc": "5463:16:13",
															"nodeType": "YulAssignment",
															"src": "5463:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "5474:5:13",
																"nodeType": "YulIdentifier",
																"src": "5474:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5463:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5463:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5408:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5435:5:13",
														"nodeType": "YulTypedName",
														"src": "5435:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5445:7:13",
														"nodeType": "YulTypedName",
														"src": "5445:7:13",
														"type": ""
													}
												],
												"src": "5408:77:13"
											},
											{
												"body": {
													"nativeSrc": "5534:79:13",
													"nodeType": "YulBlock",
													"src": "5534:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5591:16:13",
																"nodeType": "YulBlock",
																"src": "5591:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5600:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5600:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5603:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5603:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5593:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5593:6:13"
																			},
																			"nativeSrc": "5593:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5593:12:13"
																		},
																		"nativeSrc": "5593:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5593:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5557:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5557:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5582:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5582:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5564:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "5564:17:13"
																				},
																				"nativeSrc": "5564:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5564:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5554:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5554:2:13"
																		},
																		"nativeSrc": "5554:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5554:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5547:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:13"
																},
																"nativeSrc": "5547:43:13",
																"nodeType": "YulFunctionCall",
																"src": "5547:43:13"
															},
															"nativeSrc": "5544:63:13",
															"nodeType": "YulIf",
															"src": "5544:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5491:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5527:5:13",
														"nodeType": "YulTypedName",
														"src": "5527:5:13",
														"type": ""
													}
												],
												"src": "5491:122:13"
											},
											{
												"body": {
													"nativeSrc": "5671:87:13",
													"nodeType": "YulBlock",
													"src": "5671:87:13",
													"statements": [
														{
															"nativeSrc": "5681:29:13",
															"nodeType": "YulAssignment",
															"src": "5681:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5703:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5703:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5690:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5690:12:13"
																},
																"nativeSrc": "5690:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5690:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5681:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5681:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5746:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5746:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5719:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "5719:26:13"
																},
																"nativeSrc": "5719:33:13",
																"nodeType": "YulFunctionCall",
																"src": "5719:33:13"
															},
															"nativeSrc": "5719:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "5719:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5619:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5649:6:13",
														"nodeType": "YulTypedName",
														"src": "5649:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5657:3:13",
														"nodeType": "YulTypedName",
														"src": "5657:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5665:5:13",
														"nodeType": "YulTypedName",
														"src": "5665:5:13",
														"type": ""
													}
												],
												"src": "5619:139:13"
											},
											{
												"body": {
													"nativeSrc": "5830:263:13",
													"nodeType": "YulBlock",
													"src": "5830:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5876:83:13",
																"nodeType": "YulBlock",
																"src": "5876:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5878:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5878:77:13"
																			},
																			"nativeSrc": "5878:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5878:79:13"
																		},
																		"nativeSrc": "5878:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5878:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5851:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5851:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5860:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5860:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5847:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5847:3:13"
																		},
																		"nativeSrc": "5847:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5847:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5872:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5872:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5843:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5843:3:13"
																},
																"nativeSrc": "5843:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5843:32:13"
															},
															"nativeSrc": "5840:119:13",
															"nodeType": "YulIf",
															"src": "5840:119:13"
														},
														{
															"nativeSrc": "5969:117:13",
															"nodeType": "YulBlock",
															"src": "5969:117:13",
															"statements": [
																{
																	"nativeSrc": "5984:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5984:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5998:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5998:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5988:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5988:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6013:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6013:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6048:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6048:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6059:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6059:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6044:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6044:3:13"
																				},
																				"nativeSrc": "6044:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6044:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6068:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6068:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6023:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6023:20:13"
																		},
																		"nativeSrc": "6023:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6023:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6013:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6013:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5764:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5800:9:13",
														"nodeType": "YulTypedName",
														"src": "5800:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5811:7:13",
														"nodeType": "YulTypedName",
														"src": "5811:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5823:6:13",
														"nodeType": "YulTypedName",
														"src": "5823:6:13",
														"type": ""
													}
												],
												"src": "5764:329:13"
											},
											{
												"body": {
													"nativeSrc": "6164:53:13",
													"nodeType": "YulBlock",
													"src": "6164:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6181:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6181:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6204:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6204:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "6186:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6186:17:13"
																		},
																		"nativeSrc": "6186:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6174:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:13"
																},
																"nativeSrc": "6174:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6174:37:13"
															},
															"nativeSrc": "6174:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6174:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "6099:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6152:5:13",
														"nodeType": "YulTypedName",
														"src": "6152:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6159:3:13",
														"nodeType": "YulTypedName",
														"src": "6159:3:13",
														"type": ""
													}
												],
												"src": "6099:118:13"
											},
											{
												"body": {
													"nativeSrc": "6321:124:13",
													"nodeType": "YulBlock",
													"src": "6321:124:13",
													"statements": [
														{
															"nativeSrc": "6331:26:13",
															"nodeType": "YulAssignment",
															"src": "6331:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6343:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6343:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6354:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6354:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6339:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6339:3:13"
																},
																"nativeSrc": "6339:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6339:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6331:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6331:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6411:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6411:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6424:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6424:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6435:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6435:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6420:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6420:3:13"
																		},
																		"nativeSrc": "6420:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6420:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6367:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6367:43:13"
																},
																"nativeSrc": "6367:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6367:71:13"
															},
															"nativeSrc": "6367:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6367:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "6223:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6293:9:13",
														"nodeType": "YulTypedName",
														"src": "6293:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6305:6:13",
														"nodeType": "YulTypedName",
														"src": "6305:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6316:4:13",
														"nodeType": "YulTypedName",
														"src": "6316:4:13",
														"type": ""
													}
												],
												"src": "6223:222:13"
											},
											{
												"body": {
													"nativeSrc": "6534:391:13",
													"nodeType": "YulBlock",
													"src": "6534:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6580:83:13",
																"nodeType": "YulBlock",
																"src": "6580:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6582:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6582:77:13"
																			},
																			"nativeSrc": "6582:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6582:79:13"
																		},
																		"nativeSrc": "6582:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6582:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6555:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6555:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6564:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6564:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6551:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6551:3:13"
																		},
																		"nativeSrc": "6551:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6551:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6576:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6576:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6547:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6547:3:13"
																},
																"nativeSrc": "6547:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6547:32:13"
															},
															"nativeSrc": "6544:119:13",
															"nodeType": "YulIf",
															"src": "6544:119:13"
														},
														{
															"nativeSrc": "6673:117:13",
															"nodeType": "YulBlock",
															"src": "6673:117:13",
															"statements": [
																{
																	"nativeSrc": "6688:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6688:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6702:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6702:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6692:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6692:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6717:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6717:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6752:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6752:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6763:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6763:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6748:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6748:3:13"
																				},
																				"nativeSrc": "6748:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6748:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6772:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6772:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6727:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6727:20:13"
																		},
																		"nativeSrc": "6727:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6717:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6717:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6800:118:13",
															"nodeType": "YulBlock",
															"src": "6800:118:13",
															"statements": [
																{
																	"nativeSrc": "6815:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6815:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6829:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6829:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6819:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6819:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6845:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6845:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6880:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6880:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6891:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6891:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6876:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6876:3:13"
																				},
																				"nativeSrc": "6876:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6876:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6900:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6900:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6855:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6855:20:13"
																		},
																		"nativeSrc": "6855:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6855:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6845:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6845:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6451:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6496:9:13",
														"nodeType": "YulTypedName",
														"src": "6496:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6507:7:13",
														"nodeType": "YulTypedName",
														"src": "6507:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6519:6:13",
														"nodeType": "YulTypedName",
														"src": "6519:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6527:6:13",
														"nodeType": "YulTypedName",
														"src": "6527:6:13",
														"type": ""
													}
												],
												"src": "6451:474:13"
											},
											{
												"body": {
													"nativeSrc": "6974:43:13",
													"nodeType": "YulBlock",
													"src": "6974:43:13",
													"statements": [
														{
															"nativeSrc": "6984:27:13",
															"nodeType": "YulAssignment",
															"src": "6984:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6999:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6999:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7006:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7006:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6995:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6995:3:13"
																},
																"nativeSrc": "6995:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6995:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6984:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6984:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6931:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6956:5:13",
														"nodeType": "YulTypedName",
														"src": "6956:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6966:7:13",
														"nodeType": "YulTypedName",
														"src": "6966:7:13",
														"type": ""
													}
												],
												"src": "6931:86:13"
											},
											{
												"body": {
													"nativeSrc": "7084:51:13",
													"nodeType": "YulBlock",
													"src": "7084:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7101:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7101:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7122:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7122:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7106:15:13",
																			"nodeType": "YulIdentifier",
																			"src": "7106:15:13"
																		},
																		"nativeSrc": "7106:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7106:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7094:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7094:6:13"
																},
																"nativeSrc": "7094:35:13",
																"nodeType": "YulFunctionCall",
																"src": "7094:35:13"
															},
															"nativeSrc": "7094:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "7094:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7023:112:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7072:5:13",
														"nodeType": "YulTypedName",
														"src": "7072:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7079:3:13",
														"nodeType": "YulTypedName",
														"src": "7079:3:13",
														"type": ""
													}
												],
												"src": "7023:112:13"
											},
											{
												"body": {
													"nativeSrc": "7235:120:13",
													"nodeType": "YulBlock",
													"src": "7235:120:13",
													"statements": [
														{
															"nativeSrc": "7245:26:13",
															"nodeType": "YulAssignment",
															"src": "7245:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7257:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7257:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7268:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7268:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7253:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7253:3:13"
																},
																"nativeSrc": "7253:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7253:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7245:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7245:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7321:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7321:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7334:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7334:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7345:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7345:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7330:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7330:3:13"
																		},
																		"nativeSrc": "7330:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7330:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7281:39:13",
																	"nodeType": "YulIdentifier",
																	"src": "7281:39:13"
																},
																"nativeSrc": "7281:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7281:67:13"
															},
															"nativeSrc": "7281:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "7281:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7141:214:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7207:9:13",
														"nodeType": "YulTypedName",
														"src": "7207:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7219:6:13",
														"nodeType": "YulTypedName",
														"src": "7219:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7230:4:13",
														"nodeType": "YulTypedName",
														"src": "7230:4:13",
														"type": ""
													}
												],
												"src": "7141:214:13"
											},
											{
												"body": {
													"nativeSrc": "7427:263:13",
													"nodeType": "YulBlock",
													"src": "7427:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7473:83:13",
																"nodeType": "YulBlock",
																"src": "7473:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7475:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7475:77:13"
																			},
																			"nativeSrc": "7475:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7475:79:13"
																		},
																		"nativeSrc": "7475:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7475:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7448:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7448:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7457:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7457:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7444:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7444:3:13"
																		},
																		"nativeSrc": "7444:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7444:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7469:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7469:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7440:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:13"
																},
																"nativeSrc": "7440:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7440:32:13"
															},
															"nativeSrc": "7437:119:13",
															"nodeType": "YulIf",
															"src": "7437:119:13"
														},
														{
															"nativeSrc": "7566:117:13",
															"nodeType": "YulBlock",
															"src": "7566:117:13",
															"statements": [
																{
																	"nativeSrc": "7581:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7581:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7595:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7595:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7585:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7585:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7610:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7610:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7645:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7645:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7656:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7656:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7641:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7641:3:13"
																				},
																				"nativeSrc": "7641:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7641:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7665:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7665:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7620:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7620:20:13"
																		},
																		"nativeSrc": "7620:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7620:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7610:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7610:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7361:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7397:9:13",
														"nodeType": "YulTypedName",
														"src": "7397:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7408:7:13",
														"nodeType": "YulTypedName",
														"src": "7408:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7420:6:13",
														"nodeType": "YulTypedName",
														"src": "7420:6:13",
														"type": ""
													}
												],
												"src": "7361:329:13"
											},
											{
												"body": {
													"nativeSrc": "7785:28:13",
													"nodeType": "YulBlock",
													"src": "7785:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7802:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7802:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7805:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7805:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7795:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7795:6:13"
																},
																"nativeSrc": "7795:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7795:12:13"
															},
															"nativeSrc": "7795:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "7795:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7696:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7696:117:13"
											},
											{
												"body": {
													"nativeSrc": "7847:152:13",
													"nodeType": "YulBlock",
													"src": "7847:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7864:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7864:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7867:77:13",
																		"nodeType": "YulLiteral",
																		"src": "7867:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7857:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7857:6:13"
																},
																"nativeSrc": "7857:88:13",
																"nodeType": "YulFunctionCall",
																"src": "7857:88:13"
															},
															"nativeSrc": "7857:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "7857:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7961:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7961:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7964:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7964:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7954:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7954:6:13"
																},
																"nativeSrc": "7954:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7954:15:13"
															},
															"nativeSrc": "7954:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7954:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7985:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7985:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7988:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7988:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7978:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7978:6:13"
																},
																"nativeSrc": "7978:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7978:15:13"
															},
															"nativeSrc": "7978:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7978:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7819:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7819:180:13"
											},
											{
												"body": {
													"nativeSrc": "8048:238:13",
													"nodeType": "YulBlock",
													"src": "8048:238:13",
													"statements": [
														{
															"nativeSrc": "8058:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8058:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8080:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8080:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "8110:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8110:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8088:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "8088:21:13"
																		},
																		"nativeSrc": "8088:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8088:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8076:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:13"
																},
																"nativeSrc": "8076:40:13",
																"nodeType": "YulFunctionCall",
																"src": "8076:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8062:10:13",
																	"nodeType": "YulTypedName",
																	"src": "8062:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8227:22:13",
																"nodeType": "YulBlock",
																"src": "8227:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8229:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8229:16:13"
																			},
																			"nativeSrc": "8229:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8229:18:13"
																		},
																		"nativeSrc": "8229:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8229:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8170:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "8170:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8182:18:13",
																				"nodeType": "YulLiteral",
																				"src": "8182:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8167:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8167:2:13"
																		},
																		"nativeSrc": "8167:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8167:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8206:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "8206:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8218:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8218:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8203:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8203:2:13"
																		},
																		"nativeSrc": "8203:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8203:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8164:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8164:2:13"
																},
																"nativeSrc": "8164:62:13",
																"nodeType": "YulFunctionCall",
																"src": "8164:62:13"
															},
															"nativeSrc": "8161:88:13",
															"nodeType": "YulIf",
															"src": "8161:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8265:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8265:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8269:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "8269:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8258:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8258:6:13"
																},
																"nativeSrc": "8258:22:13",
																"nodeType": "YulFunctionCall",
																"src": "8258:22:13"
															},
															"nativeSrc": "8258:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "8258:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "8005:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8034:6:13",
														"nodeType": "YulTypedName",
														"src": "8034:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8042:4:13",
														"nodeType": "YulTypedName",
														"src": "8042:4:13",
														"type": ""
													}
												],
												"src": "8005:281:13"
											},
											{
												"body": {
													"nativeSrc": "8333:88:13",
													"nodeType": "YulBlock",
													"src": "8333:88:13",
													"statements": [
														{
															"nativeSrc": "8343:30:13",
															"nodeType": "YulAssignment",
															"src": "8343:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8353:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "8353:18:13"
																},
																"nativeSrc": "8353:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8353:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8343:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8343:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8402:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8402:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8410:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8410:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8382:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "8382:19:13"
																},
																"nativeSrc": "8382:33:13",
																"nodeType": "YulFunctionCall",
																"src": "8382:33:13"
															},
															"nativeSrc": "8382:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "8382:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8292:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8317:4:13",
														"nodeType": "YulTypedName",
														"src": "8317:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8326:6:13",
														"nodeType": "YulTypedName",
														"src": "8326:6:13",
														"type": ""
													}
												],
												"src": "8292:129:13"
											},
											{
												"body": {
													"nativeSrc": "8509:229:13",
													"nodeType": "YulBlock",
													"src": "8509:229:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8614:22:13",
																"nodeType": "YulBlock",
																"src": "8614:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8616:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8616:16:13"
																			},
																			"nativeSrc": "8616:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8616:18:13"
																		},
																		"nativeSrc": "8616:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8616:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8586:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8586:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8594:18:13",
																		"nodeType": "YulLiteral",
																		"src": "8594:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8583:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8583:2:13"
																},
																"nativeSrc": "8583:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8583:30:13"
															},
															"nativeSrc": "8580:56:13",
															"nodeType": "YulIf",
															"src": "8580:56:13"
														},
														{
															"nativeSrc": "8646:25:13",
															"nodeType": "YulAssignment",
															"src": "8646:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8658:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8658:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8666:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8666:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8654:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8654:3:13"
																},
																"nativeSrc": "8654:17:13",
																"nodeType": "YulFunctionCall",
																"src": "8654:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8646:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8646:4:13"
																}
															]
														},
														{
															"nativeSrc": "8708:23:13",
															"nodeType": "YulAssignment",
															"src": "8708:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8720:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8720:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8726:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8726:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8716:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8716:3:13"
																},
																"nativeSrc": "8716:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8716:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8708:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8708:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8427:311:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8493:6:13",
														"nodeType": "YulTypedName",
														"src": "8493:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8504:4:13",
														"nodeType": "YulTypedName",
														"src": "8504:4:13",
														"type": ""
													}
												],
												"src": "8427:311:13"
											},
											{
												"body": {
													"nativeSrc": "8833:28:13",
													"nodeType": "YulBlock",
													"src": "8833:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8850:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8850:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8853:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8853:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8843:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8843:6:13"
																},
																"nativeSrc": "8843:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8843:12:13"
															},
															"nativeSrc": "8843:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "8843:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "8744:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "8744:117:13"
											},
											{
												"body": {
													"nativeSrc": "8986:608:13",
													"nodeType": "YulBlock",
													"src": "8986:608:13",
													"statements": [
														{
															"nativeSrc": "8996:90:13",
															"nodeType": "YulAssignment",
															"src": "8996:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9078:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9078:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "9021:56:13",
																			"nodeType": "YulIdentifier",
																			"src": "9021:56:13"
																		},
																		"nativeSrc": "9021:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9021:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9005:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "9005:15:13"
																},
																"nativeSrc": "9005:81:13",
																"nodeType": "YulFunctionCall",
																"src": "9005:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8996:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8996:5:13"
																}
															]
														},
														{
															"nativeSrc": "9095:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9095:16:13",
															"value": {
																"name": "array",
																"nativeSrc": "9106:5:13",
																"nodeType": "YulIdentifier",
																"src": "9106:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9099:3:13",
																	"nodeType": "YulTypedName",
																	"src": "9099:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9128:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9128:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9135:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9135:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9121:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9121:6:13"
																},
																"nativeSrc": "9121:21:13",
																"nodeType": "YulFunctionCall",
																"src": "9121:21:13"
															},
															"nativeSrc": "9121:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "9121:21:13"
														},
														{
															"nativeSrc": "9151:23:13",
															"nodeType": "YulAssignment",
															"src": "9151:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9162:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9162:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9169:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9169:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9158:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9158:3:13"
																},
																"nativeSrc": "9158:16:13",
																"nodeType": "YulFunctionCall",
																"src": "9158:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "9151:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9151:3:13"
																}
															]
														},
														{
															"nativeSrc": "9184:44:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9184:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9202:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9202:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9214:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9214:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9222:4:13",
																				"nodeType": "YulLiteral",
																				"src": "9222:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "9210:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:13"
																		},
																		"nativeSrc": "9210:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9198:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9198:3:13"
																},
																"nativeSrc": "9198:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9198:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "9188:6:13",
																	"nodeType": "YulTypedName",
																	"src": "9188:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9256:103:13",
																"nodeType": "YulBlock",
																"src": "9256:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "9270:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9270:77:13"
																			},
																			"nativeSrc": "9270:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9270:79:13"
																		},
																		"nativeSrc": "9270:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9270:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "9243:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9243:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9251:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9251:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9240:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9240:2:13"
																},
																"nativeSrc": "9240:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9240:15:13"
															},
															"nativeSrc": "9237:122:13",
															"nodeType": "YulIf",
															"src": "9237:122:13"
														},
														{
															"body": {
																"nativeSrc": "9444:144:13",
																"nodeType": "YulBlock",
																"src": "9444:144:13",
																"statements": [
																	{
																		"nativeSrc": "9459:21:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9459:21:13",
																		"value": {
																			"name": "src",
																			"nativeSrc": "9477:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9477:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "9463:10:13",
																				"nodeType": "YulTypedName",
																				"src": "9463:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "9501:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9501:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "9527:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "9527:10:13"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "9539:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "9539:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "9506:20:13",
																						"nodeType": "YulIdentifier",
																						"src": "9506:20:13"
																					},
																					"nativeSrc": "9506:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9506:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9494:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9494:6:13"
																			},
																			"nativeSrc": "9494:50:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9494:50:13"
																		},
																		"nativeSrc": "9494:50:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9494:50:13"
																	},
																	{
																		"nativeSrc": "9557:21:13",
																		"nodeType": "YulAssignment",
																		"src": "9557:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "9568:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9568:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9573:4:13",
																					"nodeType": "YulLiteral",
																					"src": "9573:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9564:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9564:3:13"
																			},
																			"nativeSrc": "9564:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9564:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "9557:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9557:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9397:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9397:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "9402:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9402:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9394:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9394:2:13"
																},
																"nativeSrc": "9394:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9394:15:13"
															},
															"nativeSrc": "9368:220:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9410:25:13",
																"nodeType": "YulBlock",
																"src": "9410:25:13",
																"statements": [
																	{
																		"nativeSrc": "9412:21:13",
																		"nodeType": "YulAssignment",
																		"src": "9412:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "9423:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9423:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9428:4:13",
																					"nodeType": "YulLiteral",
																					"src": "9428:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9419:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9419:3:13"
																			},
																			"nativeSrc": "9419:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9419:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "9412:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9412:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9372:21:13",
																"nodeType": "YulBlock",
																"src": "9372:21:13",
																"statements": [
																	{
																		"nativeSrc": "9374:17:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9374:17:13",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "9385:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9385:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "9378:3:13",
																				"nodeType": "YulTypedName",
																				"src": "9378:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9368:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8884:710:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8956:6:13",
														"nodeType": "YulTypedName",
														"src": "8956:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8964:6:13",
														"nodeType": "YulTypedName",
														"src": "8964:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8972:3:13",
														"nodeType": "YulTypedName",
														"src": "8972:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8980:5:13",
														"nodeType": "YulTypedName",
														"src": "8980:5:13",
														"type": ""
													}
												],
												"src": "8884:710:13"
											},
											{
												"body": {
													"nativeSrc": "9694:293:13",
													"nodeType": "YulBlock",
													"src": "9694:293:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9743:83:13",
																"nodeType": "YulBlock",
																"src": "9743:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9745:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9745:77:13"
																			},
																			"nativeSrc": "9745:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9745:79:13"
																		},
																		"nativeSrc": "9745:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9745:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9722:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9722:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9730:4:13",
																						"nodeType": "YulLiteral",
																						"src": "9730:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9718:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9718:3:13"
																				},
																				"nativeSrc": "9718:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9718:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9737:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9737:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9714:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9714:3:13"
																		},
																		"nativeSrc": "9714:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9714:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9707:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9707:6:13"
																},
																"nativeSrc": "9707:35:13",
																"nodeType": "YulFunctionCall",
																"src": "9707:35:13"
															},
															"nativeSrc": "9704:122:13",
															"nodeType": "YulIf",
															"src": "9704:122:13"
														},
														{
															"nativeSrc": "9835:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9835:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9862:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9862:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9849:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9849:12:13"
																},
																"nativeSrc": "9849:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9849:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9839:6:13",
																	"nodeType": "YulTypedName",
																	"src": "9839:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9878:103:13",
															"nodeType": "YulAssignment",
															"src": "9878:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9954:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9954:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9962:4:13",
																				"nodeType": "YulLiteral",
																				"src": "9962:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9950:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9950:3:13"
																		},
																		"nativeSrc": "9950:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9950:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9969:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9969:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9977:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9977:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "9887:62:13",
																	"nodeType": "YulIdentifier",
																	"src": "9887:62:13"
																},
																"nativeSrc": "9887:94:13",
																"nodeType": "YulFunctionCall",
																"src": "9887:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9878:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9878:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "9617:370:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9672:6:13",
														"nodeType": "YulTypedName",
														"src": "9672:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9680:3:13",
														"nodeType": "YulTypedName",
														"src": "9680:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9688:5:13",
														"nodeType": "YulTypedName",
														"src": "9688:5:13",
														"type": ""
													}
												],
												"src": "9617:370:13"
											},
											{
												"body": {
													"nativeSrc": "10075:229:13",
													"nodeType": "YulBlock",
													"src": "10075:229:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10180:22:13",
																"nodeType": "YulBlock",
																"src": "10180:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10182:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10182:16:13"
																			},
																			"nativeSrc": "10182:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10182:18:13"
																		},
																		"nativeSrc": "10182:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10182:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10152:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10152:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10160:18:13",
																		"nodeType": "YulLiteral",
																		"src": "10160:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10149:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10149:2:13"
																},
																"nativeSrc": "10149:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10149:30:13"
															},
															"nativeSrc": "10146:56:13",
															"nodeType": "YulIf",
															"src": "10146:56:13"
														},
														{
															"nativeSrc": "10212:25:13",
															"nodeType": "YulAssignment",
															"src": "10212:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10224:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10224:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10232:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10232:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10220:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10220:3:13"
																},
																"nativeSrc": "10220:17:13",
																"nodeType": "YulFunctionCall",
																"src": "10220:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10212:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10212:4:13"
																}
															]
														},
														{
															"nativeSrc": "10274:23:13",
															"nodeType": "YulAssignment",
															"src": "10274:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10286:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10286:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10292:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10292:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10282:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10282:3:13"
																},
																"nativeSrc": "10282:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10282:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10274:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10274:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "9993:311:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10059:6:13",
														"nodeType": "YulTypedName",
														"src": "10059:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10070:4:13",
														"nodeType": "YulTypedName",
														"src": "10070:4:13",
														"type": ""
													}
												],
												"src": "9993:311:13"
											},
											{
												"body": {
													"nativeSrc": "10429:608:13",
													"nodeType": "YulBlock",
													"src": "10429:608:13",
													"statements": [
														{
															"nativeSrc": "10439:90:13",
															"nodeType": "YulAssignment",
															"src": "10439:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10521:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10521:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10464:56:13",
																			"nodeType": "YulIdentifier",
																			"src": "10464:56:13"
																		},
																		"nativeSrc": "10464:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10464:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10448:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "10448:15:13"
																},
																"nativeSrc": "10448:81:13",
																"nodeType": "YulFunctionCall",
																"src": "10448:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10439:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10439:5:13"
																}
															]
														},
														{
															"nativeSrc": "10538:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10538:16:13",
															"value": {
																"name": "array",
																"nativeSrc": "10549:5:13",
																"nodeType": "YulIdentifier",
																"src": "10549:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10542:3:13",
																	"nodeType": "YulTypedName",
																	"src": "10542:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10571:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10571:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10578:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10578:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10564:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10564:6:13"
																},
																"nativeSrc": "10564:21:13",
																"nodeType": "YulFunctionCall",
																"src": "10564:21:13"
															},
															"nativeSrc": "10564:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "10564:21:13"
														},
														{
															"nativeSrc": "10594:23:13",
															"nodeType": "YulAssignment",
															"src": "10594:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10605:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10605:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10612:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10612:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10601:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10601:3:13"
																},
																"nativeSrc": "10601:16:13",
																"nodeType": "YulFunctionCall",
																"src": "10601:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "10594:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10594:3:13"
																}
															]
														},
														{
															"nativeSrc": "10627:44:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10627:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10645:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10645:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10657:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10657:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10665:4:13",
																				"nodeType": "YulLiteral",
																				"src": "10665:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "10653:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10653:3:13"
																		},
																		"nativeSrc": "10653:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10653:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10641:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10641:3:13"
																},
																"nativeSrc": "10641:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10641:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "10631:6:13",
																	"nodeType": "YulTypedName",
																	"src": "10631:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10699:103:13",
																"nodeType": "YulBlock",
																"src": "10699:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "10713:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10713:77:13"
																			},
																			"nativeSrc": "10713:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10713:79:13"
																		},
																		"nativeSrc": "10713:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10713:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "10686:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10686:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10694:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10694:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10683:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10683:2:13"
																},
																"nativeSrc": "10683:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10683:15:13"
															},
															"nativeSrc": "10680:122:13",
															"nodeType": "YulIf",
															"src": "10680:122:13"
														},
														{
															"body": {
																"nativeSrc": "10887:144:13",
																"nodeType": "YulBlock",
																"src": "10887:144:13",
																"statements": [
																	{
																		"nativeSrc": "10902:21:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10902:21:13",
																		"value": {
																			"name": "src",
																			"nativeSrc": "10920:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10920:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "10906:10:13",
																				"nodeType": "YulTypedName",
																				"src": "10906:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "10944:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10944:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "10970:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "10970:10:13"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "10982:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "10982:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "10949:20:13",
																						"nodeType": "YulIdentifier",
																						"src": "10949:20:13"
																					},
																					"nativeSrc": "10949:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10949:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10937:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10937:6:13"
																			},
																			"nativeSrc": "10937:50:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10937:50:13"
																		},
																		"nativeSrc": "10937:50:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10937:50:13"
																	},
																	{
																		"nativeSrc": "11000:21:13",
																		"nodeType": "YulAssignment",
																		"src": "11000:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "11011:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11011:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11016:4:13",
																					"nodeType": "YulLiteral",
																					"src": "11016:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11007:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11007:3:13"
																			},
																			"nativeSrc": "11007:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11007:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "11000:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11000:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10840:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10840:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "10845:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10845:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10837:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10837:2:13"
																},
																"nativeSrc": "10837:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10837:15:13"
															},
															"nativeSrc": "10811:220:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10853:25:13",
																"nodeType": "YulBlock",
																"src": "10853:25:13",
																"statements": [
																	{
																		"nativeSrc": "10855:21:13",
																		"nodeType": "YulAssignment",
																		"src": "10855:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "10866:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10866:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10871:4:13",
																					"nodeType": "YulLiteral",
																					"src": "10871:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10862:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10862:3:13"
																			},
																			"nativeSrc": "10862:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10862:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "10855:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10855:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10815:21:13",
																"nodeType": "YulBlock",
																"src": "10815:21:13",
																"statements": [
																	{
																		"nativeSrc": "10817:17:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10817:17:13",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "10828:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10828:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "10821:3:13",
																				"nodeType": "YulTypedName",
																				"src": "10821:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10811:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "10327:710:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10399:6:13",
														"nodeType": "YulTypedName",
														"src": "10399:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10407:6:13",
														"nodeType": "YulTypedName",
														"src": "10407:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10415:3:13",
														"nodeType": "YulTypedName",
														"src": "10415:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10423:5:13",
														"nodeType": "YulTypedName",
														"src": "10423:5:13",
														"type": ""
													}
												],
												"src": "10327:710:13"
											},
											{
												"body": {
													"nativeSrc": "11137:293:13",
													"nodeType": "YulBlock",
													"src": "11137:293:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11186:83:13",
																"nodeType": "YulBlock",
																"src": "11186:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11188:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11188:77:13"
																			},
																			"nativeSrc": "11188:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11188:79:13"
																		},
																		"nativeSrc": "11188:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11188:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11165:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11165:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11173:4:13",
																						"nodeType": "YulLiteral",
																						"src": "11173:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11161:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11161:3:13"
																				},
																				"nativeSrc": "11161:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11161:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11180:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11180:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11157:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11157:3:13"
																		},
																		"nativeSrc": "11157:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11157:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11150:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11150:6:13"
																},
																"nativeSrc": "11150:35:13",
																"nodeType": "YulFunctionCall",
																"src": "11150:35:13"
															},
															"nativeSrc": "11147:122:13",
															"nodeType": "YulIf",
															"src": "11147:122:13"
														},
														{
															"nativeSrc": "11278:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11278:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11305:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11305:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11292:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "11292:12:13"
																},
																"nativeSrc": "11292:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11292:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11282:6:13",
																	"nodeType": "YulTypedName",
																	"src": "11282:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11321:103:13",
															"nodeType": "YulAssignment",
															"src": "11321:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11397:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11397:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11405:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11405:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11393:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11393:3:13"
																		},
																		"nativeSrc": "11393:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11393:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11412:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11412:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11420:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11420:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "11330:62:13",
																	"nodeType": "YulIdentifier",
																	"src": "11330:62:13"
																},
																"nativeSrc": "11330:94:13",
																"nodeType": "YulFunctionCall",
																"src": "11330:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11321:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11321:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "11060:370:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11115:6:13",
														"nodeType": "YulTypedName",
														"src": "11115:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11123:3:13",
														"nodeType": "YulTypedName",
														"src": "11123:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11131:5:13",
														"nodeType": "YulTypedName",
														"src": "11131:5:13",
														"type": ""
													}
												],
												"src": "11060:370:13"
											},
											{
												"body": {
													"nativeSrc": "11569:761:13",
													"nodeType": "YulBlock",
													"src": "11569:761:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11615:83:13",
																"nodeType": "YulBlock",
																"src": "11615:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11617:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11617:77:13"
																			},
																			"nativeSrc": "11617:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11617:79:13"
																		},
																		"nativeSrc": "11617:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11617:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11590:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11590:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11599:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11599:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11586:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11586:3:13"
																		},
																		"nativeSrc": "11586:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11586:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11611:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11611:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11582:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11582:3:13"
																},
																"nativeSrc": "11582:32:13",
																"nodeType": "YulFunctionCall",
																"src": "11582:32:13"
															},
															"nativeSrc": "11579:119:13",
															"nodeType": "YulIf",
															"src": "11579:119:13"
														},
														{
															"nativeSrc": "11708:302:13",
															"nodeType": "YulBlock",
															"src": "11708:302:13",
															"statements": [
																{
																	"nativeSrc": "11723:45:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11723:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11754:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11754:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11765:1:13",
																						"nodeType": "YulLiteral",
																						"src": "11765:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11750:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11750:3:13"
																				},
																				"nativeSrc": "11750:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11750:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11737:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "11737:12:13"
																		},
																		"nativeSrc": "11737:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11737:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11727:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11727:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11815:83:13",
																		"nodeType": "YulBlock",
																		"src": "11815:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11817:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "11817:77:13"
																					},
																					"nativeSrc": "11817:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "11817:79:13"
																				},
																				"nativeSrc": "11817:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "11817:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11787:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11787:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11795:18:13",
																				"nodeType": "YulLiteral",
																				"src": "11795:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11784:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "11784:2:13"
																		},
																		"nativeSrc": "11784:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11784:30:13"
																	},
																	"nativeSrc": "11781:117:13",
																	"nodeType": "YulIf",
																	"src": "11781:117:13"
																},
																{
																	"nativeSrc": "11912:88:13",
																	"nodeType": "YulAssignment",
																	"src": "11912:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11972:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11972:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11983:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11983:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11968:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11968:3:13"
																				},
																				"nativeSrc": "11968:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11968:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11992:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11992:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "11922:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "11922:45:13"
																		},
																		"nativeSrc": "11922:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11922:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11912:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11912:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12020:303:13",
															"nodeType": "YulBlock",
															"src": "12020:303:13",
															"statements": [
																{
																	"nativeSrc": "12035:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12035:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12066:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12066:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12077:2:13",
																						"nodeType": "YulLiteral",
																						"src": "12077:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12062:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12062:3:13"
																				},
																				"nativeSrc": "12062:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12062:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12049:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "12049:12:13"
																		},
																		"nativeSrc": "12049:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12049:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12039:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12039:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12128:83:13",
																		"nodeType": "YulBlock",
																		"src": "12128:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12130:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "12130:77:13"
																					},
																					"nativeSrc": "12130:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12130:79:13"
																				},
																				"nativeSrc": "12130:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "12130:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12100:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12100:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12108:18:13",
																				"nodeType": "YulLiteral",
																				"src": "12108:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12097:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12097:2:13"
																		},
																		"nativeSrc": "12097:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12097:30:13"
																	},
																	"nativeSrc": "12094:117:13",
																	"nodeType": "YulIf",
																	"src": "12094:117:13"
																},
																{
																	"nativeSrc": "12225:88:13",
																	"nodeType": "YulAssignment",
																	"src": "12225:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12285:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12285:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12296:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12296:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12281:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12281:3:13"
																				},
																				"nativeSrc": "12281:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12281:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12305:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12305:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "12235:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "12235:45:13"
																		},
																		"nativeSrc": "12235:78:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12235:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12225:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12225:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "11436:894:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11531:9:13",
														"nodeType": "YulTypedName",
														"src": "11531:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11542:7:13",
														"nodeType": "YulTypedName",
														"src": "11542:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11554:6:13",
														"nodeType": "YulTypedName",
														"src": "11554:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11562:6:13",
														"nodeType": "YulTypedName",
														"src": "11562:6:13",
														"type": ""
													}
												],
												"src": "11436:894:13"
											},
											{
												"body": {
													"nativeSrc": "12401:53:13",
													"nodeType": "YulBlock",
													"src": "12401:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12418:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12418:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12441:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12441:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12423:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "12423:17:13"
																		},
																		"nativeSrc": "12423:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12423:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12411:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12411:6:13"
																},
																"nativeSrc": "12411:37:13",
																"nodeType": "YulFunctionCall",
																"src": "12411:37:13"
															},
															"nativeSrc": "12411:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "12411:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "12336:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12389:5:13",
														"nodeType": "YulTypedName",
														"src": "12389:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12396:3:13",
														"nodeType": "YulTypedName",
														"src": "12396:3:13",
														"type": ""
													}
												],
												"src": "12336:118:13"
											},
											{
												"body": {
													"nativeSrc": "12558:124:13",
													"nodeType": "YulBlock",
													"src": "12558:124:13",
													"statements": [
														{
															"nativeSrc": "12568:26:13",
															"nodeType": "YulAssignment",
															"src": "12568:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12580:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12580:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12591:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12591:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12576:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12576:3:13"
																},
																"nativeSrc": "12576:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12576:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12568:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12568:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12648:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12648:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12661:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12661:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12672:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12672:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12657:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12657:3:13"
																		},
																		"nativeSrc": "12657:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12657:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12604:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12604:43:13"
																},
																"nativeSrc": "12604:71:13",
																"nodeType": "YulFunctionCall",
																"src": "12604:71:13"
															},
															"nativeSrc": "12604:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "12604:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12460:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12530:9:13",
														"nodeType": "YulTypedName",
														"src": "12530:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12542:6:13",
														"nodeType": "YulTypedName",
														"src": "12542:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12553:4:13",
														"nodeType": "YulTypedName",
														"src": "12553:4:13",
														"type": ""
													}
												],
												"src": "12460:222:13"
											},
											{
												"body": {
													"nativeSrc": "12771:391:13",
													"nodeType": "YulBlock",
													"src": "12771:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12817:83:13",
																"nodeType": "YulBlock",
																"src": "12817:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12819:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12819:77:13"
																			},
																			"nativeSrc": "12819:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12819:79:13"
																		},
																		"nativeSrc": "12819:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12819:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12792:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12792:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12801:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12801:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12788:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12788:3:13"
																		},
																		"nativeSrc": "12788:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12788:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12813:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12813:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12784:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12784:3:13"
																},
																"nativeSrc": "12784:32:13",
																"nodeType": "YulFunctionCall",
																"src": "12784:32:13"
															},
															"nativeSrc": "12781:119:13",
															"nodeType": "YulIf",
															"src": "12781:119:13"
														},
														{
															"nativeSrc": "12910:117:13",
															"nodeType": "YulBlock",
															"src": "12910:117:13",
															"statements": [
																{
																	"nativeSrc": "12925:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12925:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12939:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12939:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12929:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12929:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12954:63:13",
																	"nodeType": "YulAssignment",
																	"src": "12954:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12989:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12989:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13000:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13000:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12985:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12985:3:13"
																				},
																				"nativeSrc": "12985:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12985:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13009:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13009:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12964:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "12964:20:13"
																		},
																		"nativeSrc": "12964:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12964:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12954:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12954:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13037:118:13",
															"nodeType": "YulBlock",
															"src": "13037:118:13",
															"statements": [
																{
																	"nativeSrc": "13052:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13052:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13066:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13066:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13056:6:13",
																			"nodeType": "YulTypedName",
																			"src": "13056:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13082:63:13",
																	"nodeType": "YulAssignment",
																	"src": "13082:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13117:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "13117:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13128:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13128:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13113:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13113:3:13"
																				},
																				"nativeSrc": "13113:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13113:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13137:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13137:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13092:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "13092:20:13"
																		},
																		"nativeSrc": "13092:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13092:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13082:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "13082:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12688:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12733:9:13",
														"nodeType": "YulTypedName",
														"src": "12733:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12744:7:13",
														"nodeType": "YulTypedName",
														"src": "12744:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12756:6:13",
														"nodeType": "YulTypedName",
														"src": "12756:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12764:6:13",
														"nodeType": "YulTypedName",
														"src": "12764:6:13",
														"type": ""
													}
												],
												"src": "12688:474:13"
											},
											{
												"body": {
													"nativeSrc": "13196:152:13",
													"nodeType": "YulBlock",
													"src": "13196:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13213:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13213:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13216:77:13",
																		"nodeType": "YulLiteral",
																		"src": "13216:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13206:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13206:6:13"
																},
																"nativeSrc": "13206:88:13",
																"nodeType": "YulFunctionCall",
																"src": "13206:88:13"
															},
															"nativeSrc": "13206:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "13206:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13310:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13310:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13313:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13313:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13303:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13303:6:13"
																},
																"nativeSrc": "13303:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13303:15:13"
															},
															"nativeSrc": "13303:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13303:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13334:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13334:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13337:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13337:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13327:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13327:6:13"
																},
																"nativeSrc": "13327:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13327:15:13"
															},
															"nativeSrc": "13327:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13327:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13168:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "13168:180:13"
											},
											{
												"body": {
													"nativeSrc": "13405:269:13",
													"nodeType": "YulBlock",
													"src": "13405:269:13",
													"statements": [
														{
															"nativeSrc": "13415:22:13",
															"nodeType": "YulAssignment",
															"src": "13415:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13429:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13429:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13435:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13435:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13425:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13425:3:13"
																},
																"nativeSrc": "13425:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13425:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13415:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13415:6:13"
																}
															]
														},
														{
															"nativeSrc": "13446:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13446:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13476:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13476:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13482:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13482:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13472:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13472:3:13"
																},
																"nativeSrc": "13472:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13472:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13450:18:13",
																	"nodeType": "YulTypedName",
																	"src": "13450:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13523:51:13",
																"nodeType": "YulBlock",
																"src": "13523:51:13",
																"statements": [
																	{
																		"nativeSrc": "13537:27:13",
																		"nodeType": "YulAssignment",
																		"src": "13537:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13551:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "13551:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13559:4:13",
																					"nodeType": "YulLiteral",
																					"src": "13559:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13547:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "13547:3:13"
																			},
																			"nativeSrc": "13547:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13547:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13537:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13537:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13503:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "13503:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13496:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13496:6:13"
																},
																"nativeSrc": "13496:26:13",
																"nodeType": "YulFunctionCall",
																"src": "13496:26:13"
															},
															"nativeSrc": "13493:81:13",
															"nodeType": "YulIf",
															"src": "13493:81:13"
														},
														{
															"body": {
																"nativeSrc": "13626:42:13",
																"nodeType": "YulBlock",
																"src": "13626:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13640:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "13640:16:13"
																			},
																			"nativeSrc": "13640:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13640:18:13"
																		},
																		"nativeSrc": "13640:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13640:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13590:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "13590:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13613:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13613:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13621:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13621:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13610:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "13610:2:13"
																		},
																		"nativeSrc": "13610:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13610:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13587:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13587:2:13"
																},
																"nativeSrc": "13587:38:13",
																"nodeType": "YulFunctionCall",
																"src": "13587:38:13"
															},
															"nativeSrc": "13584:84:13",
															"nodeType": "YulIf",
															"src": "13584:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13354:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13389:4:13",
														"nodeType": "YulTypedName",
														"src": "13389:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13398:6:13",
														"nodeType": "YulTypedName",
														"src": "13398:6:13",
														"type": ""
													}
												],
												"src": "13354:320:13"
											},
											{
												"body": {
													"nativeSrc": "13708:152:13",
													"nodeType": "YulBlock",
													"src": "13708:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13725:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13725:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13728:77:13",
																		"nodeType": "YulLiteral",
																		"src": "13728:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13718:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13718:6:13"
																},
																"nativeSrc": "13718:88:13",
																"nodeType": "YulFunctionCall",
																"src": "13718:88:13"
															},
															"nativeSrc": "13718:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "13718:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13822:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13822:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13825:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13825:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13815:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13815:6:13"
																},
																"nativeSrc": "13815:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13815:15:13"
															},
															"nativeSrc": "13815:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13815:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13846:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13846:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13849:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13849:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13839:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13839:6:13"
																},
																"nativeSrc": "13839:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13839:15:13"
															},
															"nativeSrc": "13839:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13839:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13680:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "13680:180:13"
											},
											{
												"body": {
													"nativeSrc": "13914:362:13",
													"nodeType": "YulBlock",
													"src": "13914:362:13",
													"statements": [
														{
															"nativeSrc": "13924:25:13",
															"nodeType": "YulAssignment",
															"src": "13924:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13947:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13947:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13929:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "13929:17:13"
																},
																"nativeSrc": "13929:20:13",
																"nodeType": "YulFunctionCall",
																"src": "13929:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13924:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "13924:1:13"
																}
															]
														},
														{
															"nativeSrc": "13958:25:13",
															"nodeType": "YulAssignment",
															"src": "13958:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13981:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "13981:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13963:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "13963:17:13"
																},
																"nativeSrc": "13963:20:13",
																"nodeType": "YulFunctionCall",
																"src": "13963:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13958:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "13958:1:13"
																}
															]
														},
														{
															"nativeSrc": "13992:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13992:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14015:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14015:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14018:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14018:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14011:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14011:3:13"
																},
																"nativeSrc": "14011:9:13",
																"nodeType": "YulFunctionCall",
																"src": "14011:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13996:11:13",
																	"nodeType": "YulTypedName",
																	"src": "13996:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14029:41:13",
															"nodeType": "YulAssignment",
															"src": "14029:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14058:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "14058:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14040:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "14040:17:13"
																},
																"nativeSrc": "14040:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14040:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14029:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "14029:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14247:22:13",
																"nodeType": "YulBlock",
																"src": "14247:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14249:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "14249:16:13"
																			},
																			"nativeSrc": "14249:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14249:18:13"
																		},
																		"nativeSrc": "14249:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14249:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14180:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "14180:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14173:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "14173:6:13"
																				},
																				"nativeSrc": "14173:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14173:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14203:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "14203:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14210:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "14210:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14219:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "14219:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14206:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "14206:3:13"
																						},
																						"nativeSrc": "14206:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "14206:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14200:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "14200:2:13"
																				},
																				"nativeSrc": "14200:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14200:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14153:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "14153:2:13"
																		},
																		"nativeSrc": "14153:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14153:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14133:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14133:6:13"
																},
																"nativeSrc": "14133:113:13",
																"nodeType": "YulFunctionCall",
																"src": "14133:113:13"
															},
															"nativeSrc": "14130:139:13",
															"nodeType": "YulIf",
															"src": "14130:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13866:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13897:1:13",
														"nodeType": "YulTypedName",
														"src": "13897:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13900:1:13",
														"nodeType": "YulTypedName",
														"src": "13900:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "13906:7:13",
														"nodeType": "YulTypedName",
														"src": "13906:7:13",
														"type": ""
													}
												],
												"src": "13866:410:13"
											},
											{
												"body": {
													"nativeSrc": "14436:288:13",
													"nodeType": "YulBlock",
													"src": "14436:288:13",
													"statements": [
														{
															"nativeSrc": "14446:26:13",
															"nodeType": "YulAssignment",
															"src": "14446:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14458:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14458:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14469:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14469:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14454:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14454:3:13"
																},
																"nativeSrc": "14454:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14454:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14446:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14446:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14526:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14526:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14539:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14539:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14550:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14550:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14535:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14535:3:13"
																		},
																		"nativeSrc": "14535:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14535:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14482:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14482:43:13"
																},
																"nativeSrc": "14482:71:13",
																"nodeType": "YulFunctionCall",
																"src": "14482:71:13"
															},
															"nativeSrc": "14482:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "14482:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14607:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14607:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14620:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14620:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14631:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14631:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14616:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14616:3:13"
																		},
																		"nativeSrc": "14616:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14616:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14563:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14563:43:13"
																},
																"nativeSrc": "14563:72:13",
																"nodeType": "YulFunctionCall",
																"src": "14563:72:13"
															},
															"nativeSrc": "14563:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "14563:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14689:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14689:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14702:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14702:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14713:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14713:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14698:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14698:3:13"
																		},
																		"nativeSrc": "14698:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14698:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14645:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14645:43:13"
																},
																"nativeSrc": "14645:72:13",
																"nodeType": "YulFunctionCall",
																"src": "14645:72:13"
															},
															"nativeSrc": "14645:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "14645:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14282:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14392:9:13",
														"nodeType": "YulTypedName",
														"src": "14392:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14404:6:13",
														"nodeType": "YulTypedName",
														"src": "14404:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14412:6:13",
														"nodeType": "YulTypedName",
														"src": "14412:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14420:6:13",
														"nodeType": "YulTypedName",
														"src": "14420:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14431:4:13",
														"nodeType": "YulTypedName",
														"src": "14431:4:13",
														"type": ""
													}
												],
												"src": "14282:442:13"
											},
											{
												"body": {
													"nativeSrc": "14770:76:13",
													"nodeType": "YulBlock",
													"src": "14770:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "14824:16:13",
																"nodeType": "YulBlock",
																"src": "14824:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14833:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14833:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14836:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14836:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14826:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14826:6:13"
																			},
																			"nativeSrc": "14826:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14826:12:13"
																		},
																		"nativeSrc": "14826:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14826:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14793:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14793:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14815:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "14815:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "14800:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "14800:14:13"
																				},
																				"nativeSrc": "14800:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14800:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14790:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "14790:2:13"
																		},
																		"nativeSrc": "14790:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14790:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14783:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14783:6:13"
																},
																"nativeSrc": "14783:40:13",
																"nodeType": "YulFunctionCall",
																"src": "14783:40:13"
															},
															"nativeSrc": "14780:60:13",
															"nodeType": "YulIf",
															"src": "14780:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "14730:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14763:5:13",
														"nodeType": "YulTypedName",
														"src": "14763:5:13",
														"type": ""
													}
												],
												"src": "14730:116:13"
											},
											{
												"body": {
													"nativeSrc": "14912:77:13",
													"nodeType": "YulBlock",
													"src": "14912:77:13",
													"statements": [
														{
															"nativeSrc": "14922:22:13",
															"nodeType": "YulAssignment",
															"src": "14922:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14937:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14937:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14931:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "14931:5:13"
																},
																"nativeSrc": "14931:13:13",
																"nodeType": "YulFunctionCall",
																"src": "14931:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14922:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "14922:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14977:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14977:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "14953:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "14953:23:13"
																},
																"nativeSrc": "14953:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14953:30:13"
															},
															"nativeSrc": "14953:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "14953:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "14852:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14890:6:13",
														"nodeType": "YulTypedName",
														"src": "14890:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14898:3:13",
														"nodeType": "YulTypedName",
														"src": "14898:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14906:5:13",
														"nodeType": "YulTypedName",
														"src": "14906:5:13",
														"type": ""
													}
												],
												"src": "14852:137:13"
											},
											{
												"body": {
													"nativeSrc": "15069:271:13",
													"nodeType": "YulBlock",
													"src": "15069:271:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "15115:83:13",
																"nodeType": "YulBlock",
																"src": "15115:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15117:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "15117:77:13"
																			},
																			"nativeSrc": "15117:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15117:79:13"
																		},
																		"nativeSrc": "15117:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15117:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15090:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "15090:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15099:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15099:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15086:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15086:3:13"
																		},
																		"nativeSrc": "15086:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15086:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15111:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15111:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15082:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15082:3:13"
																},
																"nativeSrc": "15082:32:13",
																"nodeType": "YulFunctionCall",
																"src": "15082:32:13"
															},
															"nativeSrc": "15079:119:13",
															"nodeType": "YulIf",
															"src": "15079:119:13"
														},
														{
															"nativeSrc": "15208:125:13",
															"nodeType": "YulBlock",
															"src": "15208:125:13",
															"statements": [
																{
																	"nativeSrc": "15223:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15223:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15237:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15237:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15227:6:13",
																			"nodeType": "YulTypedName",
																			"src": "15227:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15252:71:13",
																	"nodeType": "YulAssignment",
																	"src": "15252:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15295:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "15295:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15306:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "15306:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15291:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "15291:3:13"
																				},
																				"nativeSrc": "15291:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15291:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15315:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "15315:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "15262:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "15262:28:13"
																		},
																		"nativeSrc": "15262:61:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15262:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15252:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "15252:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "14995:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15039:9:13",
														"nodeType": "YulTypedName",
														"src": "15039:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15050:7:13",
														"nodeType": "YulTypedName",
														"src": "15050:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15062:6:13",
														"nodeType": "YulTypedName",
														"src": "15062:6:13",
														"type": ""
													}
												],
												"src": "14995:345:13"
											},
											{
												"body": {
													"nativeSrc": "15452:71:13",
													"nodeType": "YulBlock",
													"src": "15452:71:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15474:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15474:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15482:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15482:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15470:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15470:3:13"
																		},
																		"nativeSrc": "15470:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15470:14:13"
																	},
																	{
																		"hexValue": "537461626c6520636f696e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "15486:29:13",
																		"nodeType": "YulLiteral",
																		"src": "15486:29:13",
																		"type": "",
																		"value": "Stable coin transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15463:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15463:6:13"
																},
																"nativeSrc": "15463:53:13",
																"nodeType": "YulFunctionCall",
																"src": "15463:53:13"
															},
															"nativeSrc": "15463:53:13",
															"nodeType": "YulExpressionStatement",
															"src": "15463:53:13"
														}
													]
												},
												"name": "store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
												"nativeSrc": "15346:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15444:6:13",
														"nodeType": "YulTypedName",
														"src": "15444:6:13",
														"type": ""
													}
												],
												"src": "15346:177:13"
											},
											{
												"body": {
													"nativeSrc": "15675:220:13",
													"nodeType": "YulBlock",
													"src": "15675:220:13",
													"statements": [
														{
															"nativeSrc": "15685:74:13",
															"nodeType": "YulAssignment",
															"src": "15685:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15751:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15751:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15756:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15756:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15692:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "15692:58:13"
																},
																"nativeSrc": "15692:67:13",
																"nodeType": "YulFunctionCall",
																"src": "15692:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15685:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15685:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15857:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15857:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																	"nativeSrc": "15768:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "15768:88:13"
																},
																"nativeSrc": "15768:93:13",
																"nodeType": "YulFunctionCall",
																"src": "15768:93:13"
															},
															"nativeSrc": "15768:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "15768:93:13"
														},
														{
															"nativeSrc": "15870:19:13",
															"nodeType": "YulAssignment",
															"src": "15870:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15881:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15881:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15886:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15886:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15877:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15877:3:13"
																},
																"nativeSrc": "15877:12:13",
																"nodeType": "YulFunctionCall",
																"src": "15877:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15870:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15870:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15529:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15663:3:13",
														"nodeType": "YulTypedName",
														"src": "15663:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15671:3:13",
														"nodeType": "YulTypedName",
														"src": "15671:3:13",
														"type": ""
													}
												],
												"src": "15529:366:13"
											},
											{
												"body": {
													"nativeSrc": "16072:248:13",
													"nodeType": "YulBlock",
													"src": "16072:248:13",
													"statements": [
														{
															"nativeSrc": "16082:26:13",
															"nodeType": "YulAssignment",
															"src": "16082:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16094:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16094:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16105:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16105:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16090:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16090:3:13"
																},
																"nativeSrc": "16090:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16090:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16082:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16082:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16129:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16129:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16140:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16140:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16125:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16125:3:13"
																		},
																		"nativeSrc": "16125:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16125:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16148:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16148:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16154:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16154:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16144:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16144:3:13"
																		},
																		"nativeSrc": "16144:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16144:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16118:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16118:6:13"
																},
																"nativeSrc": "16118:47:13",
																"nodeType": "YulFunctionCall",
																"src": "16118:47:13"
															},
															"nativeSrc": "16118:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "16118:47:13"
														},
														{
															"nativeSrc": "16174:139:13",
															"nodeType": "YulAssignment",
															"src": "16174:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16308:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16308:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16182:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "16182:124:13"
																},
																"nativeSrc": "16182:131:13",
																"nodeType": "YulFunctionCall",
																"src": "16182:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16174:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16174:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15901:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16052:9:13",
														"nodeType": "YulTypedName",
														"src": "16052:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16067:4:13",
														"nodeType": "YulTypedName",
														"src": "16067:4:13",
														"type": ""
													}
												],
												"src": "15901:419:13"
											},
											{
												"body": {
													"nativeSrc": "16452:206:13",
													"nodeType": "YulBlock",
													"src": "16452:206:13",
													"statements": [
														{
															"nativeSrc": "16462:26:13",
															"nodeType": "YulAssignment",
															"src": "16462:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16474:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16474:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16485:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16485:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16470:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16470:3:13"
																},
																"nativeSrc": "16470:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16470:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16462:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16462:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16542:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16542:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16555:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16555:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16566:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16566:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16551:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16551:3:13"
																		},
																		"nativeSrc": "16551:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16551:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16498:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "16498:43:13"
																},
																"nativeSrc": "16498:71:13",
																"nodeType": "YulFunctionCall",
																"src": "16498:71:13"
															},
															"nativeSrc": "16498:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "16498:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16623:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16623:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16636:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16636:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16647:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16647:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16632:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16632:3:13"
																		},
																		"nativeSrc": "16632:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16632:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16579:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "16579:43:13"
																},
																"nativeSrc": "16579:72:13",
																"nodeType": "YulFunctionCall",
																"src": "16579:72:13"
															},
															"nativeSrc": "16579:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "16579:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16326:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16416:9:13",
														"nodeType": "YulTypedName",
														"src": "16416:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16428:6:13",
														"nodeType": "YulTypedName",
														"src": "16428:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16436:6:13",
														"nodeType": "YulTypedName",
														"src": "16436:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16447:4:13",
														"nodeType": "YulTypedName",
														"src": "16447:4:13",
														"type": ""
													}
												],
												"src": "16326:332:13"
											},
											{
												"body": {
													"nativeSrc": "16770:70:13",
													"nodeType": "YulBlock",
													"src": "16770:70:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16792:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16792:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16800:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16800:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16788:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16788:3:13"
																		},
																		"nativeSrc": "16788:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16788:14:13"
																	},
																	{
																		"hexValue": "426f6e6420746f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "16804:28:13",
																		"nodeType": "YulLiteral",
																		"src": "16804:28:13",
																		"type": "",
																		"value": "Bond token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16781:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16781:6:13"
																},
																"nativeSrc": "16781:52:13",
																"nodeType": "YulFunctionCall",
																"src": "16781:52:13"
															},
															"nativeSrc": "16781:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "16781:52:13"
														}
													]
												},
												"name": "store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
												"nativeSrc": "16664:176:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16762:6:13",
														"nodeType": "YulTypedName",
														"src": "16762:6:13",
														"type": ""
													}
												],
												"src": "16664:176:13"
											},
											{
												"body": {
													"nativeSrc": "16992:220:13",
													"nodeType": "YulBlock",
													"src": "16992:220:13",
													"statements": [
														{
															"nativeSrc": "17002:74:13",
															"nodeType": "YulAssignment",
															"src": "17002:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17068:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17068:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17073:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17073:2:13",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17009:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "17009:58:13"
																},
																"nativeSrc": "17009:67:13",
																"nodeType": "YulFunctionCall",
																"src": "17009:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17002:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17002:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17174:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17174:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																	"nativeSrc": "17085:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "17085:88:13"
																},
																"nativeSrc": "17085:93:13",
																"nodeType": "YulFunctionCall",
																"src": "17085:93:13"
															},
															"nativeSrc": "17085:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "17085:93:13"
														},
														{
															"nativeSrc": "17187:19:13",
															"nodeType": "YulAssignment",
															"src": "17187:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17198:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17198:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17203:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17203:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17194:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17194:3:13"
																},
																"nativeSrc": "17194:12:13",
																"nodeType": "YulFunctionCall",
																"src": "17194:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17187:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17187:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16846:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16980:3:13",
														"nodeType": "YulTypedName",
														"src": "16980:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16988:3:13",
														"nodeType": "YulTypedName",
														"src": "16988:3:13",
														"type": ""
													}
												],
												"src": "16846:366:13"
											},
											{
												"body": {
													"nativeSrc": "17389:248:13",
													"nodeType": "YulBlock",
													"src": "17389:248:13",
													"statements": [
														{
															"nativeSrc": "17399:26:13",
															"nodeType": "YulAssignment",
															"src": "17399:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17411:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17411:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17422:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17422:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17407:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17407:3:13"
																},
																"nativeSrc": "17407:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17407:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17399:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17399:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17446:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17446:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17457:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17457:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17442:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17442:3:13"
																		},
																		"nativeSrc": "17442:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17442:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17465:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "17465:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17471:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17471:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17461:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17461:3:13"
																		},
																		"nativeSrc": "17461:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17461:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17435:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17435:6:13"
																},
																"nativeSrc": "17435:47:13",
																"nodeType": "YulFunctionCall",
																"src": "17435:47:13"
															},
															"nativeSrc": "17435:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "17435:47:13"
														},
														{
															"nativeSrc": "17491:139:13",
															"nodeType": "YulAssignment",
															"src": "17491:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17625:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17625:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17499:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "17499:124:13"
																},
																"nativeSrc": "17499:131:13",
																"nodeType": "YulFunctionCall",
																"src": "17499:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17491:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17491:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17218:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17369:9:13",
														"nodeType": "YulTypedName",
														"src": "17369:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17384:4:13",
														"nodeType": "YulTypedName",
														"src": "17384:4:13",
														"type": ""
													}
												],
												"src": "17218:419:13"
											},
											{
												"body": {
													"nativeSrc": "17749:122:13",
													"nodeType": "YulBlock",
													"src": "17749:122:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17771:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17771:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17779:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17779:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17767:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17767:3:13"
																		},
																		"nativeSrc": "17767:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17767:14:13"
																	},
																	{
																		"hexValue": "546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e677468",
																		"kind": "string",
																		"nativeSrc": "17783:34:13",
																		"nodeType": "YulLiteral",
																		"src": "17783:34:13",
																		"type": "",
																		"value": "Token holders and amounts length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17760:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17760:6:13"
																},
																"nativeSrc": "17760:58:13",
																"nodeType": "YulFunctionCall",
																"src": "17760:58:13"
															},
															"nativeSrc": "17760:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "17760:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17839:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17839:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17847:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17847:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17835:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17835:3:13"
																		},
																		"nativeSrc": "17835:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17835:15:13"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "17852:11:13",
																		"nodeType": "YulLiteral",
																		"src": "17852:11:13",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17828:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17828:6:13"
																},
																"nativeSrc": "17828:36:13",
																"nodeType": "YulFunctionCall",
																"src": "17828:36:13"
															},
															"nativeSrc": "17828:36:13",
															"nodeType": "YulExpressionStatement",
															"src": "17828:36:13"
														}
													]
												},
												"name": "store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f",
												"nativeSrc": "17643:228:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17741:6:13",
														"nodeType": "YulTypedName",
														"src": "17741:6:13",
														"type": ""
													}
												],
												"src": "17643:228:13"
											},
											{
												"body": {
													"nativeSrc": "18023:220:13",
													"nodeType": "YulBlock",
													"src": "18023:220:13",
													"statements": [
														{
															"nativeSrc": "18033:74:13",
															"nodeType": "YulAssignment",
															"src": "18033:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18099:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18099:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18104:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18104:2:13",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18040:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "18040:58:13"
																},
																"nativeSrc": "18040:67:13",
																"nodeType": "YulFunctionCall",
																"src": "18040:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18033:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18033:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18205:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18205:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f",
																	"nativeSrc": "18116:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "18116:88:13"
																},
																"nativeSrc": "18116:93:13",
																"nodeType": "YulFunctionCall",
																"src": "18116:93:13"
															},
															"nativeSrc": "18116:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "18116:93:13"
														},
														{
															"nativeSrc": "18218:19:13",
															"nodeType": "YulAssignment",
															"src": "18218:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18229:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18229:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18234:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18234:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18225:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18225:3:13"
																},
																"nativeSrc": "18225:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18225:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18218:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18218:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17877:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18011:3:13",
														"nodeType": "YulTypedName",
														"src": "18011:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18019:3:13",
														"nodeType": "YulTypedName",
														"src": "18019:3:13",
														"type": ""
													}
												],
												"src": "17877:366:13"
											},
											{
												"body": {
													"nativeSrc": "18420:248:13",
													"nodeType": "YulBlock",
													"src": "18420:248:13",
													"statements": [
														{
															"nativeSrc": "18430:26:13",
															"nodeType": "YulAssignment",
															"src": "18430:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18442:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18442:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18453:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18453:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18438:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18438:3:13"
																},
																"nativeSrc": "18438:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18438:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18430:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18430:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18477:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18477:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18488:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18488:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18473:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18473:3:13"
																		},
																		"nativeSrc": "18473:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18473:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18496:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "18496:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18502:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18502:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18492:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18492:3:13"
																		},
																		"nativeSrc": "18492:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18492:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18466:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18466:6:13"
																},
																"nativeSrc": "18466:47:13",
																"nodeType": "YulFunctionCall",
																"src": "18466:47:13"
															},
															"nativeSrc": "18466:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "18466:47:13"
														},
														{
															"nativeSrc": "18522:139:13",
															"nodeType": "YulAssignment",
															"src": "18522:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18656:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18656:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18530:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "18530:124:13"
																},
																"nativeSrc": "18530:131:13",
																"nodeType": "YulFunctionCall",
																"src": "18530:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18522:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18522:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18249:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18400:9:13",
														"nodeType": "YulTypedName",
														"src": "18400:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18415:4:13",
														"nodeType": "YulTypedName",
														"src": "18415:4:13",
														"type": ""
													}
												],
												"src": "18249:419:13"
											},
											{
												"body": {
													"nativeSrc": "18702:152:13",
													"nodeType": "YulBlock",
													"src": "18702:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18719:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18719:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18722:77:13",
																		"nodeType": "YulLiteral",
																		"src": "18722:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18712:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18712:6:13"
																},
																"nativeSrc": "18712:88:13",
																"nodeType": "YulFunctionCall",
																"src": "18712:88:13"
															},
															"nativeSrc": "18712:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "18712:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18816:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18816:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18819:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18819:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18809:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18809:6:13"
																},
																"nativeSrc": "18809:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18809:15:13"
															},
															"nativeSrc": "18809:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18809:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18840:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18840:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18843:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18843:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18833:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18833:6:13"
																},
																"nativeSrc": "18833:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18833:15:13"
															},
															"nativeSrc": "18833:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18833:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "18674:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "18674:180:13"
											},
											{
												"body": {
													"nativeSrc": "18966:59:13",
													"nodeType": "YulBlock",
													"src": "18966:59:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18988:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18988:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18996:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18996:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18984:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18984:3:13"
																		},
																		"nativeSrc": "18984:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18984:14:13"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "19000:17:13",
																		"nodeType": "YulLiteral",
																		"src": "19000:17:13",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18977:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18977:6:13"
																},
																"nativeSrc": "18977:41:13",
																"nodeType": "YulFunctionCall",
																"src": "18977:41:13"
															},
															"nativeSrc": "18977:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "18977:41:13"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "18860:165:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18958:6:13",
														"nodeType": "YulTypedName",
														"src": "18958:6:13",
														"type": ""
													}
												],
												"src": "18860:165:13"
											},
											{
												"body": {
													"nativeSrc": "19177:220:13",
													"nodeType": "YulBlock",
													"src": "19177:220:13",
													"statements": [
														{
															"nativeSrc": "19187:74:13",
															"nodeType": "YulAssignment",
															"src": "19187:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19253:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19253:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19258:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19258:2:13",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19194:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "19194:58:13"
																},
																"nativeSrc": "19194:67:13",
																"nodeType": "YulFunctionCall",
																"src": "19194:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19187:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19187:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19359:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19359:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "19270:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "19270:88:13"
																},
																"nativeSrc": "19270:93:13",
																"nodeType": "YulFunctionCall",
																"src": "19270:93:13"
															},
															"nativeSrc": "19270:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "19270:93:13"
														},
														{
															"nativeSrc": "19372:19:13",
															"nodeType": "YulAssignment",
															"src": "19372:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19383:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19383:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19388:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19388:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19379:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19379:3:13"
																},
																"nativeSrc": "19379:12:13",
																"nodeType": "YulFunctionCall",
																"src": "19379:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19372:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19372:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19031:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19165:3:13",
														"nodeType": "YulTypedName",
														"src": "19165:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19173:3:13",
														"nodeType": "YulTypedName",
														"src": "19173:3:13",
														"type": ""
													}
												],
												"src": "19031:366:13"
											},
											{
												"body": {
													"nativeSrc": "19574:248:13",
													"nodeType": "YulBlock",
													"src": "19574:248:13",
													"statements": [
														{
															"nativeSrc": "19584:26:13",
															"nodeType": "YulAssignment",
															"src": "19584:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19596:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19596:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19607:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19607:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19592:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19592:3:13"
																},
																"nativeSrc": "19592:18:13",
																"nodeType": "YulFunctionCall",
																"src": "19592:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19584:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19584:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19631:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19631:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19642:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19642:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19627:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19627:3:13"
																		},
																		"nativeSrc": "19627:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19627:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19650:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "19650:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19656:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19656:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19646:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19646:3:13"
																		},
																		"nativeSrc": "19646:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19646:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19620:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19620:6:13"
																},
																"nativeSrc": "19620:47:13",
																"nodeType": "YulFunctionCall",
																"src": "19620:47:13"
															},
															"nativeSrc": "19620:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "19620:47:13"
														},
														{
															"nativeSrc": "19676:139:13",
															"nodeType": "YulAssignment",
															"src": "19676:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19810:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19810:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19684:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "19684:124:13"
																},
																"nativeSrc": "19684:131:13",
																"nodeType": "YulFunctionCall",
																"src": "19684:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19676:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19676:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19403:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19554:9:13",
														"nodeType": "YulTypedName",
														"src": "19554:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19569:4:13",
														"nodeType": "YulTypedName",
														"src": "19569:4:13",
														"type": ""
													}
												],
												"src": "19403:419:13"
											},
											{
												"body": {
													"nativeSrc": "19934:66:13",
													"nodeType": "YulBlock",
													"src": "19934:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19956:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19956:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19964:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19964:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19952:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19952:3:13"
																		},
																		"nativeSrc": "19952:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19952:14:13"
																	},
																	{
																		"hexValue": "43616e277420636c61696d207a65726f20636f696e73",
																		"kind": "string",
																		"nativeSrc": "19968:24:13",
																		"nodeType": "YulLiteral",
																		"src": "19968:24:13",
																		"type": "",
																		"value": "Can't claim zero coins"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19945:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19945:6:13"
																},
																"nativeSrc": "19945:48:13",
																"nodeType": "YulFunctionCall",
																"src": "19945:48:13"
															},
															"nativeSrc": "19945:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "19945:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464",
												"nativeSrc": "19828:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19926:6:13",
														"nodeType": "YulTypedName",
														"src": "19926:6:13",
														"type": ""
													}
												],
												"src": "19828:172:13"
											},
											{
												"body": {
													"nativeSrc": "20152:220:13",
													"nodeType": "YulBlock",
													"src": "20152:220:13",
													"statements": [
														{
															"nativeSrc": "20162:74:13",
															"nodeType": "YulAssignment",
															"src": "20162:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20228:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20228:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20233:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20233:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20169:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "20169:58:13"
																},
																"nativeSrc": "20169:67:13",
																"nodeType": "YulFunctionCall",
																"src": "20169:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20162:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20162:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20334:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20334:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464",
																	"nativeSrc": "20245:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "20245:88:13"
																},
																"nativeSrc": "20245:93:13",
																"nodeType": "YulFunctionCall",
																"src": "20245:93:13"
															},
															"nativeSrc": "20245:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "20245:93:13"
														},
														{
															"nativeSrc": "20347:19:13",
															"nodeType": "YulAssignment",
															"src": "20347:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20358:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20358:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20363:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20363:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20354:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20354:3:13"
																},
																"nativeSrc": "20354:12:13",
																"nodeType": "YulFunctionCall",
																"src": "20354:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20347:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20347:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20006:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20140:3:13",
														"nodeType": "YulTypedName",
														"src": "20140:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20148:3:13",
														"nodeType": "YulTypedName",
														"src": "20148:3:13",
														"type": ""
													}
												],
												"src": "20006:366:13"
											},
											{
												"body": {
													"nativeSrc": "20549:248:13",
													"nodeType": "YulBlock",
													"src": "20549:248:13",
													"statements": [
														{
															"nativeSrc": "20559:26:13",
															"nodeType": "YulAssignment",
															"src": "20559:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20571:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20571:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20582:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20582:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20567:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20567:3:13"
																},
																"nativeSrc": "20567:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20567:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20559:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20559:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20606:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20606:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20617:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20617:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20602:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20602:3:13"
																		},
																		"nativeSrc": "20602:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20602:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20625:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "20625:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20631:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20631:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20621:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20621:3:13"
																		},
																		"nativeSrc": "20621:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20621:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20595:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20595:6:13"
																},
																"nativeSrc": "20595:47:13",
																"nodeType": "YulFunctionCall",
																"src": "20595:47:13"
															},
															"nativeSrc": "20595:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "20595:47:13"
														},
														{
															"nativeSrc": "20651:139:13",
															"nodeType": "YulAssignment",
															"src": "20651:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20785:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "20785:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20659:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "20659:124:13"
																},
																"nativeSrc": "20659:131:13",
																"nodeType": "YulFunctionCall",
																"src": "20659:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20651:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20651:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20378:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20529:9:13",
														"nodeType": "YulTypedName",
														"src": "20529:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20544:4:13",
														"nodeType": "YulTypedName",
														"src": "20544:4:13",
														"type": ""
													}
												],
												"src": "20378:419:13"
											},
											{
												"body": {
													"nativeSrc": "20866:80:13",
													"nodeType": "YulBlock",
													"src": "20866:80:13",
													"statements": [
														{
															"nativeSrc": "20876:22:13",
															"nodeType": "YulAssignment",
															"src": "20876:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20891:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20891:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20885:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20885:5:13"
																},
																"nativeSrc": "20885:13:13",
																"nodeType": "YulFunctionCall",
																"src": "20885:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20876:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20876:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20934:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20934:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "20907:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "20907:26:13"
																},
																"nativeSrc": "20907:33:13",
																"nodeType": "YulFunctionCall",
																"src": "20907:33:13"
															},
															"nativeSrc": "20907:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "20907:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "20803:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20844:6:13",
														"nodeType": "YulTypedName",
														"src": "20844:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20852:3:13",
														"nodeType": "YulTypedName",
														"src": "20852:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20860:5:13",
														"nodeType": "YulTypedName",
														"src": "20860:5:13",
														"type": ""
													}
												],
												"src": "20803:143:13"
											},
											{
												"body": {
													"nativeSrc": "21029:274:13",
													"nodeType": "YulBlock",
													"src": "21029:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "21075:83:13",
																"nodeType": "YulBlock",
																"src": "21075:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21077:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "21077:77:13"
																			},
																			"nativeSrc": "21077:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "21077:79:13"
																		},
																		"nativeSrc": "21077:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "21077:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21050:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "21050:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21059:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21059:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21046:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21046:3:13"
																		},
																		"nativeSrc": "21046:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21046:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21071:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21071:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21042:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21042:3:13"
																},
																"nativeSrc": "21042:32:13",
																"nodeType": "YulFunctionCall",
																"src": "21042:32:13"
															},
															"nativeSrc": "21039:119:13",
															"nodeType": "YulIf",
															"src": "21039:119:13"
														},
														{
															"nativeSrc": "21168:128:13",
															"nodeType": "YulBlock",
															"src": "21168:128:13",
															"statements": [
																{
																	"nativeSrc": "21183:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21183:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "21197:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21187:6:13",
																			"nodeType": "YulTypedName",
																			"src": "21187:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21212:74:13",
																	"nodeType": "YulAssignment",
																	"src": "21212:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21258:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "21258:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21269:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "21269:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21254:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "21254:3:13"
																				},
																				"nativeSrc": "21254:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "21254:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21278:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "21278:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "21222:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "21222:31:13"
																		},
																		"nativeSrc": "21222:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21222:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21212:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "21212:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "20952:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20999:9:13",
														"nodeType": "YulTypedName",
														"src": "20999:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21010:7:13",
														"nodeType": "YulTypedName",
														"src": "21010:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21022:6:13",
														"nodeType": "YulTypedName",
														"src": "21022:6:13",
														"type": ""
													}
												],
												"src": "20952:351:13"
											},
											{
												"body": {
													"nativeSrc": "21415:72:13",
													"nodeType": "YulBlock",
													"src": "21415:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21437:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "21437:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21445:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21445:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21433:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21433:3:13"
																		},
																		"nativeSrc": "21433:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21433:14:13"
																	},
																	{
																		"hexValue": "4e6f20696e766573746f722066756e647320617661696c61626c652e",
																		"kind": "string",
																		"nativeSrc": "21449:30:13",
																		"nodeType": "YulLiteral",
																		"src": "21449:30:13",
																		"type": "",
																		"value": "No investor funds available."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21426:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21426:6:13"
																},
																"nativeSrc": "21426:54:13",
																"nodeType": "YulFunctionCall",
																"src": "21426:54:13"
															},
															"nativeSrc": "21426:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "21426:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15",
												"nativeSrc": "21309:178:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21407:6:13",
														"nodeType": "YulTypedName",
														"src": "21407:6:13",
														"type": ""
													}
												],
												"src": "21309:178:13"
											},
											{
												"body": {
													"nativeSrc": "21639:220:13",
													"nodeType": "YulBlock",
													"src": "21639:220:13",
													"statements": [
														{
															"nativeSrc": "21649:74:13",
															"nodeType": "YulAssignment",
															"src": "21649:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21715:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21715:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21720:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21720:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21656:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "21656:58:13"
																},
																"nativeSrc": "21656:67:13",
																"nodeType": "YulFunctionCall",
																"src": "21656:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21649:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21649:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21821:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21821:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15",
																	"nativeSrc": "21732:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "21732:88:13"
																},
																"nativeSrc": "21732:93:13",
																"nodeType": "YulFunctionCall",
																"src": "21732:93:13"
															},
															"nativeSrc": "21732:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "21732:93:13"
														},
														{
															"nativeSrc": "21834:19:13",
															"nodeType": "YulAssignment",
															"src": "21834:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21845:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21845:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21850:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21850:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21841:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21841:3:13"
																},
																"nativeSrc": "21841:12:13",
																"nodeType": "YulFunctionCall",
																"src": "21841:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21834:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21834:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21493:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21627:3:13",
														"nodeType": "YulTypedName",
														"src": "21627:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21635:3:13",
														"nodeType": "YulTypedName",
														"src": "21635:3:13",
														"type": ""
													}
												],
												"src": "21493:366:13"
											},
											{
												"body": {
													"nativeSrc": "22036:248:13",
													"nodeType": "YulBlock",
													"src": "22036:248:13",
													"statements": [
														{
															"nativeSrc": "22046:26:13",
															"nodeType": "YulAssignment",
															"src": "22046:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22058:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22058:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22069:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22069:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22054:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22054:3:13"
																},
																"nativeSrc": "22054:18:13",
																"nodeType": "YulFunctionCall",
																"src": "22054:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22046:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22046:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22093:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22093:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22104:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22104:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22089:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22089:3:13"
																		},
																		"nativeSrc": "22089:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22089:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22112:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "22112:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22118:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22118:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22108:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22108:3:13"
																		},
																		"nativeSrc": "22108:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22108:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22082:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22082:6:13"
																},
																"nativeSrc": "22082:47:13",
																"nodeType": "YulFunctionCall",
																"src": "22082:47:13"
															},
															"nativeSrc": "22082:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "22082:47:13"
														},
														{
															"nativeSrc": "22138:139:13",
															"nodeType": "YulAssignment",
															"src": "22138:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22272:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "22272:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22146:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "22146:124:13"
																},
																"nativeSrc": "22146:131:13",
																"nodeType": "YulFunctionCall",
																"src": "22146:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22138:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22138:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21865:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22016:9:13",
														"nodeType": "YulTypedName",
														"src": "22016:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22031:4:13",
														"nodeType": "YulTypedName",
														"src": "22031:4:13",
														"type": ""
													}
												],
												"src": "21865:419:13"
											},
											{
												"body": {
													"nativeSrc": "22396:75:13",
													"nodeType": "YulBlock",
													"src": "22396:75:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22418:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "22418:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22426:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22426:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22414:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22414:3:13"
																		},
																		"nativeSrc": "22414:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22414:14:13"
																	},
																	{
																		"hexValue": "4661696c656420746f207472616e7366657220737461626c6520636f696e73",
																		"kind": "string",
																		"nativeSrc": "22430:33:13",
																		"nodeType": "YulLiteral",
																		"src": "22430:33:13",
																		"type": "",
																		"value": "Failed to transfer stable coins"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22407:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22407:6:13"
																},
																"nativeSrc": "22407:57:13",
																"nodeType": "YulFunctionCall",
																"src": "22407:57:13"
															},
															"nativeSrc": "22407:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "22407:57:13"
														}
													]
												},
												"name": "store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b",
												"nativeSrc": "22290:181:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22388:6:13",
														"nodeType": "YulTypedName",
														"src": "22388:6:13",
														"type": ""
													}
												],
												"src": "22290:181:13"
											},
											{
												"body": {
													"nativeSrc": "22623:220:13",
													"nodeType": "YulBlock",
													"src": "22623:220:13",
													"statements": [
														{
															"nativeSrc": "22633:74:13",
															"nodeType": "YulAssignment",
															"src": "22633:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22699:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22699:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22704:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22704:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22640:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "22640:58:13"
																},
																"nativeSrc": "22640:67:13",
																"nodeType": "YulFunctionCall",
																"src": "22640:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22633:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22633:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22805:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22805:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b",
																	"nativeSrc": "22716:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "22716:88:13"
																},
																"nativeSrc": "22716:93:13",
																"nodeType": "YulFunctionCall",
																"src": "22716:93:13"
															},
															"nativeSrc": "22716:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "22716:93:13"
														},
														{
															"nativeSrc": "22818:19:13",
															"nodeType": "YulAssignment",
															"src": "22818:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22829:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22829:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22834:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22834:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22825:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22825:3:13"
																},
																"nativeSrc": "22825:12:13",
																"nodeType": "YulFunctionCall",
																"src": "22825:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22818:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22818:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22477:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22611:3:13",
														"nodeType": "YulTypedName",
														"src": "22611:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22619:3:13",
														"nodeType": "YulTypedName",
														"src": "22619:3:13",
														"type": ""
													}
												],
												"src": "22477:366:13"
											},
											{
												"body": {
													"nativeSrc": "23020:248:13",
													"nodeType": "YulBlock",
													"src": "23020:248:13",
													"statements": [
														{
															"nativeSrc": "23030:26:13",
															"nodeType": "YulAssignment",
															"src": "23030:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23042:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23042:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23053:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23053:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23038:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23038:3:13"
																},
																"nativeSrc": "23038:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23038:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23030:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23030:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23077:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23077:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23088:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23088:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23073:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23073:3:13"
																		},
																		"nativeSrc": "23073:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23073:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23096:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "23096:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23102:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23102:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23092:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23092:3:13"
																		},
																		"nativeSrc": "23092:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23092:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23066:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23066:6:13"
																},
																"nativeSrc": "23066:47:13",
																"nodeType": "YulFunctionCall",
																"src": "23066:47:13"
															},
															"nativeSrc": "23066:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "23066:47:13"
														},
														{
															"nativeSrc": "23122:139:13",
															"nodeType": "YulAssignment",
															"src": "23122:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23256:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23256:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23130:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "23130:124:13"
																},
																"nativeSrc": "23130:131:13",
																"nodeType": "YulFunctionCall",
																"src": "23130:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23122:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23122:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22849:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23000:9:13",
														"nodeType": "YulTypedName",
														"src": "23000:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23015:4:13",
														"nodeType": "YulTypedName",
														"src": "23015:4:13",
														"type": ""
													}
												],
												"src": "22849:419:13"
											},
											{
												"body": {
													"nativeSrc": "23428:288:13",
													"nodeType": "YulBlock",
													"src": "23428:288:13",
													"statements": [
														{
															"nativeSrc": "23438:26:13",
															"nodeType": "YulAssignment",
															"src": "23438:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23450:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23450:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23461:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23461:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23446:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23446:3:13"
																},
																"nativeSrc": "23446:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23446:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23438:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23438:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23518:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23518:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23531:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23531:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23542:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23542:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23527:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23527:3:13"
																		},
																		"nativeSrc": "23527:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23527:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23474:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23474:43:13"
																},
																"nativeSrc": "23474:71:13",
																"nodeType": "YulFunctionCall",
																"src": "23474:71:13"
															},
															"nativeSrc": "23474:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "23474:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23599:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23599:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23612:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23612:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23623:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23623:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23608:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23608:3:13"
																		},
																		"nativeSrc": "23608:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23608:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23555:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23555:43:13"
																},
																"nativeSrc": "23555:72:13",
																"nodeType": "YulFunctionCall",
																"src": "23555:72:13"
															},
															"nativeSrc": "23555:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "23555:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23681:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23681:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23694:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23694:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23705:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23705:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23690:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23690:3:13"
																		},
																		"nativeSrc": "23690:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23690:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23637:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23637:43:13"
																},
																"nativeSrc": "23637:72:13",
																"nodeType": "YulFunctionCall",
																"src": "23637:72:13"
															},
															"nativeSrc": "23637:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "23637:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "23274:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23384:9:13",
														"nodeType": "YulTypedName",
														"src": "23384:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23396:6:13",
														"nodeType": "YulTypedName",
														"src": "23396:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23404:6:13",
														"nodeType": "YulTypedName",
														"src": "23404:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23412:6:13",
														"nodeType": "YulTypedName",
														"src": "23412:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23423:4:13",
														"nodeType": "YulTypedName",
														"src": "23423:4:13",
														"type": ""
													}
												],
												"src": "23274:442:13"
											},
											{
												"body": {
													"nativeSrc": "23848:206:13",
													"nodeType": "YulBlock",
													"src": "23848:206:13",
													"statements": [
														{
															"nativeSrc": "23858:26:13",
															"nodeType": "YulAssignment",
															"src": "23858:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23870:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23870:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23881:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23881:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23866:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23866:3:13"
																},
																"nativeSrc": "23866:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23866:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23858:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23858:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23938:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23938:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23951:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23951:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23962:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23962:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23947:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23947:3:13"
																		},
																		"nativeSrc": "23947:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23947:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23894:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23894:43:13"
																},
																"nativeSrc": "23894:71:13",
																"nodeType": "YulFunctionCall",
																"src": "23894:71:13"
															},
															"nativeSrc": "23894:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "23894:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24019:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24019:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24032:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24032:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24043:2:13",
																				"nodeType": "YulLiteral",
																				"src": "24043:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24028:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24028:3:13"
																		},
																		"nativeSrc": "24028:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24028:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "23975:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23975:43:13"
																},
																"nativeSrc": "23975:72:13",
																"nodeType": "YulFunctionCall",
																"src": "23975:72:13"
															},
															"nativeSrc": "23975:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "23975:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "23722:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23812:9:13",
														"nodeType": "YulTypedName",
														"src": "23812:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23824:6:13",
														"nodeType": "YulTypedName",
														"src": "23824:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23832:6:13",
														"nodeType": "YulTypedName",
														"src": "23832:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23843:4:13",
														"nodeType": "YulTypedName",
														"src": "23843:4:13",
														"type": ""
													}
												],
												"src": "23722:332:13"
											},
											{
												"body": {
													"nativeSrc": "24104:147:13",
													"nodeType": "YulBlock",
													"src": "24104:147:13",
													"statements": [
														{
															"nativeSrc": "24114:25:13",
															"nodeType": "YulAssignment",
															"src": "24114:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24137:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "24137:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24119:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "24119:17:13"
																},
																"nativeSrc": "24119:20:13",
																"nodeType": "YulFunctionCall",
																"src": "24119:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "24114:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "24114:1:13"
																}
															]
														},
														{
															"nativeSrc": "24148:25:13",
															"nodeType": "YulAssignment",
															"src": "24148:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "24171:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "24171:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24153:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "24153:17:13"
																},
																"nativeSrc": "24153:20:13",
																"nodeType": "YulFunctionCall",
																"src": "24153:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "24148:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "24148:1:13"
																}
															]
														},
														{
															"nativeSrc": "24182:16:13",
															"nodeType": "YulAssignment",
															"src": "24182:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24193:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "24193:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "24196:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "24196:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24189:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24189:3:13"
																},
																"nativeSrc": "24189:9:13",
																"nodeType": "YulFunctionCall",
																"src": "24189:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "24182:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24182:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24222:22:13",
																"nodeType": "YulBlock",
																"src": "24222:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "24224:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "24224:16:13"
																			},
																			"nativeSrc": "24224:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24224:18:13"
																		},
																		"nativeSrc": "24224:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "24224:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24214:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "24214:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "24217:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "24217:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24211:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "24211:2:13"
																},
																"nativeSrc": "24211:10:13",
																"nodeType": "YulFunctionCall",
																"src": "24211:10:13"
															},
															"nativeSrc": "24208:36:13",
															"nodeType": "YulIf",
															"src": "24208:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "24060:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "24091:1:13",
														"nodeType": "YulTypedName",
														"src": "24091:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "24094:1:13",
														"nodeType": "YulTypedName",
														"src": "24094:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "24100:3:13",
														"nodeType": "YulTypedName",
														"src": "24100:3:13",
														"type": ""
													}
												],
												"src": "24060:191:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stable coin transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bond token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token holders and amounts length\")\n\n        mstore(add(memPtr, 32), \" mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't claim zero coins\")\n\n    }\n\n    function abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15(memPtr) {\n\n        mstore(add(memPtr, 0), \"No investor funds available.\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to transfer stable coins\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1423": [
									{
										"length": 32,
										"start": 1784
									},
									{
										"length": 32,
										"start": 3425
									},
									{
										"length": 32,
										"start": 3791
									},
									{
										"length": 32,
										"start": 4098
									}
								],
								"1425": [
									{
										"length": 32,
										"start": 2890
									},
									{
										"length": 32,
										"start": 4708
									},
									{
										"length": 32,
										"start": 4786
									},
									{
										"length": 32,
										"start": 4846
									}
								],
								"1427": [
									{
										"length": 32,
										"start": 1846
									},
									{
										"length": 32,
										"start": 3501
									},
									{
										"length": 32,
										"start": 3852
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101e3575f3560e01c806379cc67901161010d578063a920260b116100a0578063dd62ed3e1161006f578063dd62ed3e14610543578063e091a39b14610573578063ec8eba1414610591578063f57d283e146105af576101e3565b8063a920260b146104e3578063ca19c11c14610501578063ced0550f1461051d578063d547741f14610527576101e3565b806395d89b41116100dc57806395d89b4114610459578063992642e514610477578063a217fddf14610495578063a9059cbb146104b3576101e3565b806379cc6790146103e75780638456cb5914610403578063904835c41461040d57806391d1485414610429576101e3565b80632a0acc6a116101855780633f4ba83a116101545780633f4ba83a1461037357806342966c681461037d5780635c975abb1461039957806370a08231146103b7576101e3565b80632a0acc6a146102ff5780632f2ff15d1461031d578063313ce5671461033957806336568abe14610357576101e3565b806310002dbd116101c157806310002dbd1461026557806318160ddd1461028157806323b872dd1461029f578063248a9ca3146102cf576101e3565b806301ffc9a7146101e757806306fdde0314610217578063095ea7b314610235575b5f80fd5b61020160048036038101906101fc9190611e27565b6105cb565b60405161020e9190611e6c565b60405180910390f35b61021f610644565b60405161022c9190611ef5565b60405180910390f35b61024f600480360381019061024a9190611fa2565b6106d4565b60405161025c9190611e6c565b60405180910390f35b61027f600480360381019061027a9190611fe0565b6106f6565b005b6102896108ba565b604051610296919061201a565b60405180910390f35b6102b960048036038101906102b49190612033565b6108c3565b6040516102c69190611e6c565b60405180910390f35b6102e960048036038101906102e491906120b6565b6108f1565b6040516102f691906120f0565b60405180910390f35b61030761090e565b60405161031491906120f0565b60405180910390f35b61033760048036038101906103329190612109565b610932565b005b610341610954565b60405161034e9190612162565b60405180910390f35b610371600480360381019061036c9190612109565b61095c565b005b61037b6109d7565b005b61039760048036038101906103929190611fe0565b610a0c565b005b6103a1610a20565b6040516103ae9190611e6c565b60405180910390f35b6103d160048036038101906103cc919061217b565b610a35565b6040516103de919061201a565b60405180910390f35b61040160048036038101906103fc9190611fa2565b610a7a565b005b61040b610a9a565b005b610427600480360381019061042291906123a6565b610acf565b005b610443600480360381019061043e9190612109565b610c6b565b6040516104509190611e6c565b60405180910390f35b610461610ccf565b60405161046e9190611ef5565b60405180910390f35b61047f610d5f565b60405161048c919061242b565b60405180910390f35b61049d610d83565b6040516104aa91906120f0565b60405180910390f35b6104cd60048036038101906104c89190611fa2565b610d89565b6040516104da9190611e6c565b60405180910390f35b6104eb610dab565b6040516104f8919061201a565b60405180910390f35b61051b60048036038101906105169190611fe0565b610dcf565b005b610525610fd5565b005b610541600480360381019061053c9190612109565b61119a565b005b61055d60048036038101906105589190612444565b6111bc565b60405161056a919061201a565b60405180910390f35b61057b61123e565b60405161058891906120f0565b60405180910390f35b610599611262565b6040516105a6919061242b565b60405180910390f35b6105c960048036038101906105c49190611fa2565b611286565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061063d575061063c826113b1565b5b9050919050565b606060038054610653906124af565b80601f016020809104026020016040519081016040528092919081815260200182805461067f906124af565b80156106ca5780601f106106a1576101008083540402835291602001916106ca565b820191905f5260205f20905b8154815290600101906020018083116106ad57829003601f168201915b5050505050905090565b5f806106de61141a565b90506106eb818585611421565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33307f000000000000000000000000000000000000000000000000000000000000000085610760919061250c565b6040518463ffffffff1660e01b815260040161077e9392919061254d565b6020604051808303815f875af115801561079a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107be91906125ac565b6107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f490612621565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161083892919061263f565b6020604051808303815f875af1158015610854573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061087891906125ac565b6108b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ae906126b0565b60405180910390fd5b50565b5f600254905090565b5f806108cd61141a565b90506108da858285611433565b6108e58585856114c5565b60019150509392505050565b5f60065f8381526020019081526020015f20600101549050919050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281565b61093b826108f1565b610944816115b5565b61094e83836115c9565b50505050565b5f6012905090565b61096461141a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109c8576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109d282826116b3565b505050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610a01816115b5565b610a0961179d565b50565b610a1d610a1761141a565b826117fe565b50565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610a8c82610a8661141a565b83611433565b610a9682826117fe565b5050565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610ac4816115b5565b610acc61187d565b50565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42610af9816115b5565b8151835114610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b349061273e565b60405180910390fd5b5f5b8351811015610c65577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd33868481518110610b9857610b9761275c565b5b6020026020010151868581518110610bb357610bb261275c565b5b60200260200101516040518463ffffffff1660e01b8152600401610bd99392919061254d565b6020604051808303815f875af1158015610bf5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c1991906125ac565b610c58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4f906127d3565b60405180910390fd5b8080600101915050610b3f565b50505050565b5f60065f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610cde906124af565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0a906124af565b8015610d555780601f10610d2c57610100808354040283529160200191610d55565b820191905f5260205f20905b815481529060010190602001808311610d3857829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f801b81565b5f80610d9361141a565b9050610da08185856114c5565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f8111610e11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e089061283b565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610e4e9392919061254d565b6020604051808303815f875af1158015610e6a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e8e91906125ac565b610ecd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec4906126b0565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb337f000000000000000000000000000000000000000000000000000000000000000084610f36919061250c565b6040518363ffffffff1660e01b8152600401610f5392919061263f565b6020604051808303815f875af1158015610f6f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f9391906125ac565b610fd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc990612621565b60405180910390fd5b50565b7ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7610fff816115b5565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611059919061242b565b602060405180830381865afa158015611074573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611098919061286d565b90505f81116110dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d3906128e2565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161111792919061263f565b6020604051808303815f875af1158015611133573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061115791906125ac565b611196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118d9061294a565b60405180910390fd5b5050565b6111a3826108f1565b6111ac816115b5565b6111b683836116b3565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b7ff877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b781565b7f000000000000000000000000000000000000000000000000000000000000000081565b7fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec426112b0816115b5565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd7f000000000000000000000000000000000000000000000000000000000000000085856040518463ffffffff1660e01b815260040161132d9392919061254d565b6020604051808303815f875af1158015611349573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061136d91906125ac565b6113ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a3906127d3565b60405180910390fd5b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b61142e83838360016118df565b505050565b5f61143e84846111bc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146114bf57818110156114b0578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016114a793929190612968565b60405180910390fd5b6114be84848484035f6118df565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611535575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161152c919061242b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115a5575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161159c919061242b565b60405180910390fd5b6115b0838383611aae565b505050565b6115c6816115c161141a565b611abe565b50565b5f6115d48383610c6b565b6116a957600160065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061164661141a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506116ad565b5f90505b92915050565b5f6116be8383610c6b565b15611793575f60065f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061173061141a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611797565b5f90505b92915050565b6117a5611b0f565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6117e761141a565b6040516117f4919061242b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361186e575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611865919061242b565b60405180910390fd5b611879825f83611aae565b5050565b611885611b4f565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118c861141a565b6040516118d5919061242b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361194f575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611946919061242b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119bf575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016119b6919061242b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611aa8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611a9f919061201a565b60405180910390a35b50505050565b611ab9838383611b90565b505050565b611ac88282610c6b565b611b0b5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611b0292919061299d565b60405180910390fd5b5050565b611b17610a20565b611b4d576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611b57610a20565b15611b8e576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611b98611b4f565b611ba3838383611ba8565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611bf8578060025f828254611bec91906129c4565b92505081905550611cc6565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611c81578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611c7893929190612968565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d0d578060025f8282540392505081905550611d57565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611db4919061201a565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611e0681611dd2565b8114611e10575f80fd5b50565b5f81359050611e2181611dfd565b92915050565b5f60208284031215611e3c57611e3b611dca565b5b5f611e4984828501611e13565b91505092915050565b5f8115159050919050565b611e6681611e52565b82525050565b5f602082019050611e7f5f830184611e5d565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611ec782611e85565b611ed18185611e8f565b9350611ee1818560208601611e9f565b611eea81611ead565b840191505092915050565b5f6020820190508181035f830152611f0d8184611ebd565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611f3e82611f15565b9050919050565b611f4e81611f34565b8114611f58575f80fd5b50565b5f81359050611f6981611f45565b92915050565b5f819050919050565b611f8181611f6f565b8114611f8b575f80fd5b50565b5f81359050611f9c81611f78565b92915050565b5f8060408385031215611fb857611fb7611dca565b5b5f611fc585828601611f5b565b9250506020611fd685828601611f8e565b9150509250929050565b5f60208284031215611ff557611ff4611dca565b5b5f61200284828501611f8e565b91505092915050565b61201481611f6f565b82525050565b5f60208201905061202d5f83018461200b565b92915050565b5f805f6060848603121561204a57612049611dca565b5b5f61205786828701611f5b565b935050602061206886828701611f5b565b925050604061207986828701611f8e565b9150509250925092565b5f819050919050565b61209581612083565b811461209f575f80fd5b50565b5f813590506120b08161208c565b92915050565b5f602082840312156120cb576120ca611dca565b5b5f6120d8848285016120a2565b91505092915050565b6120ea81612083565b82525050565b5f6020820190506121035f8301846120e1565b92915050565b5f806040838503121561211f5761211e611dca565b5b5f61212c858286016120a2565b925050602061213d85828601611f5b565b9150509250929050565b5f60ff82169050919050565b61215c81612147565b82525050565b5f6020820190506121755f830184612153565b92915050565b5f602082840312156121905761218f611dca565b5b5f61219d84828501611f5b565b91505092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6121e082611ead565b810181811067ffffffffffffffff821117156121ff576121fe6121aa565b5b80604052505050565b5f612211611dc1565b905061221d82826121d7565b919050565b5f67ffffffffffffffff82111561223c5761223b6121aa565b5b602082029050602081019050919050565b5f80fd5b5f61226361225e84612222565b612208565b905080838252602082019050602084028301858111156122865761228561224d565b5b835b818110156122af578061229b8882611f5b565b845260208401935050602081019050612288565b5050509392505050565b5f82601f8301126122cd576122cc6121a6565b5b81356122dd848260208601612251565b91505092915050565b5f67ffffffffffffffff821115612300576122ff6121aa565b5b602082029050602081019050919050565b5f61232361231e846122e6565b612208565b905080838252602082019050602084028301858111156123465761234561224d565b5b835b8181101561236f578061235b8882611f8e565b845260208401935050602081019050612348565b5050509392505050565b5f82601f83011261238d5761238c6121a6565b5b813561239d848260208601612311565b91505092915050565b5f80604083850312156123bc576123bb611dca565b5b5f83013567ffffffffffffffff8111156123d9576123d8611dce565b5b6123e5858286016122b9565b925050602083013567ffffffffffffffff81111561240657612405611dce565b5b61241285828601612379565b9150509250929050565b61242581611f34565b82525050565b5f60208201905061243e5f83018461241c565b92915050565b5f806040838503121561245a57612459611dca565b5b5f61246785828601611f5b565b925050602061247885828601611f5b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806124c657607f821691505b6020821081036124d9576124d8612482565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61251682611f6f565b915061252183611f6f565b925082820261252f81611f6f565b91508282048414831517612546576125456124df565b5b5092915050565b5f6060820190506125605f83018661241c565b61256d602083018561241c565b61257a604083018461200b565b949350505050565b61258b81611e52565b8114612595575f80fd5b50565b5f815190506125a681612582565b92915050565b5f602082840312156125c1576125c0611dca565b5b5f6125ce84828501612598565b91505092915050565b7f537461626c6520636f696e207472616e73666572206661696c656400000000005f82015250565b5f61260b601b83611e8f565b9150612616826125d7565b602082019050919050565b5f6020820190508181035f830152612638816125ff565b9050919050565b5f6040820190506126525f83018561241c565b61265f602083018461200b565b9392505050565b7f426f6e6420746f6b656e207472616e73666572206661696c65640000000000005f82015250565b5f61269a601a83611e8f565b91506126a582612666565b602082019050919050565b5f6020820190508181035f8301526126c78161268e565b9050919050565b7f546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e6774685f8201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b5f612728602983611e8f565b9150612733826126ce565b604082019050919050565b5f6020820190508181035f8301526127558161271c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f6127bd600f83611e8f565b91506127c882612789565b602082019050919050565b5f6020820190508181035f8301526127ea816127b1565b9050919050565b7f43616e277420636c61696d207a65726f20636f696e73000000000000000000005f82015250565b5f612825601683611e8f565b9150612830826127f1565b602082019050919050565b5f6020820190508181035f83015261285281612819565b9050919050565b5f8151905061286781611f78565b92915050565b5f6020828403121561288257612881611dca565b5b5f61288f84828501612859565b91505092915050565b7f4e6f20696e766573746f722066756e647320617661696c61626c652e000000005f82015250565b5f6128cc601c83611e8f565b91506128d782612898565b602082019050919050565b5f6020820190508181035f8301526128f9816128c0565b9050919050565b7f4661696c656420746f207472616e7366657220737461626c6520636f696e73005f82015250565b5f612934601f83611e8f565b915061293f82612900565b602082019050919050565b5f6020820190508181035f83015261296181612928565b9050919050565b5f60608201905061297b5f83018661241c565b612988602083018561200b565b612995604083018461200b565b949350505050565b5f6040820190506129b05f83018561241c565b6129bd60208301846120e1565b9392505050565b5f6129ce82611f6f565b91506129d983611f6f565b92508282019050808211156129f1576129f06124df565b5b9291505056fea2646970667358221220e1d951ad24e5b242d59fbe09145cfe04ae4ea37f3a54f755a9e941cd3b583f7464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xA920260B GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xE091A39B EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0xEC8EBA14 EQ PUSH2 0x591 JUMPI DUP1 PUSH4 0xF57D283E EQ PUSH2 0x5AF JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0xA920260B EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0xCA19C11C EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xCED0550F EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x527 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x992642E5 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B3 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x904835C4 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x429 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x2A0ACC6A GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B7 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x2A0ACC6A EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x357 JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x10002DBD GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x10002DBD EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2CF JUMPI PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x235 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH2 0x644 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x289 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x201A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x341 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x2162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x95C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37B PUSH2 0x9D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0xA0C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A1 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x217B JUMP JUMPDEST PUSH2 0xA35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x201A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40B PUSH2 0xA9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x443 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x461 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49D PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DA SWAP2 SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EB PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x201A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x1FE0 JUMP JUMPDEST PUSH2 0xDCF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x525 PUSH2 0xFD5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x541 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x119A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x2444 JUMP JUMPDEST PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x201A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57B PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x588 SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x599 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A6 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x1286 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x63D JUMPI POP PUSH2 0x63C DUP3 PUSH2 0x13B1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x653 SWAP1 PUSH2 0x24AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67F SWAP1 PUSH2 0x24AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6DE PUSH2 0x141A JUMP JUMPDEST SWAP1 POP PUSH2 0x6EB DUP2 DUP6 DUP6 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS PUSH32 0x0 DUP6 PUSH2 0x760 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x79A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BE SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F4 SWAP1 PUSH2 0x2621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x838 SWAP3 SWAP2 SWAP1 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x854 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x878 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AE SWAP1 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8CD PUSH2 0x141A JUMP JUMPDEST SWAP1 POP PUSH2 0x8DA DUP6 DUP3 DUP6 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x8E5 DUP6 DUP6 DUP6 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 DUP2 JUMP JUMPDEST PUSH2 0x93B DUP3 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x944 DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x94E DUP4 DUP4 PUSH2 0x15C9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x964 PUSH2 0x141A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D2 DUP3 DUP3 PUSH2 0x16B3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xA01 DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0xA09 PUSH2 0x179D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA1D PUSH2 0xA17 PUSH2 0x141A JUMP JUMPDEST DUP3 PUSH2 0x17FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA8C DUP3 PUSH2 0xA86 PUSH2 0x141A JUMP JUMPDEST DUP4 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0xA96 DUP3 DUP3 PUSH2 0x17FE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xAC4 DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0xACC PUSH2 0x187D JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0xAF9 DUP2 PUSH2 0x15B5 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB34 SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC65 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xB98 JUMPI PUSH2 0xB97 PUSH2 0x275C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xBB3 JUMPI PUSH2 0xBB2 PUSH2 0x275C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC19 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0xC58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4F SWAP1 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xB3F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xCDE SWAP1 PUSH2 0x24AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD0A SWAP1 PUSH2 0x24AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD55 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD2C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD55 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD38 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD93 PUSH2 0x141A JUMP JUMPDEST SWAP1 POP PUSH2 0xDA0 DUP2 DUP6 DUP6 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE08 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE6A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE8E SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0xECD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC4 SWAP1 PUSH2 0x26B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH32 0x0 DUP5 PUSH2 0xF36 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF53 SWAP3 SWAP2 SWAP1 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF6F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0xFD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC9 SWAP1 PUSH2 0x2621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 PUSH2 0xFFF DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1059 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1074 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1098 SWAP2 SWAP1 PUSH2 0x286D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D3 SWAP1 PUSH2 0x28E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1117 SWAP3 SWAP2 SWAP1 PUSH2 0x263F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1133 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1157 SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0x1196 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118D SWAP1 PUSH2 0x294A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11A3 DUP3 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x11AC DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH2 0x11B6 DUP4 DUP4 PUSH2 0x16B3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH2 0x12B0 DUP2 PUSH2 0x15B5 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH32 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x132D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x254D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1349 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136D SWAP2 SWAP1 PUSH2 0x25AC JUMP JUMPDEST PUSH2 0x13AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A3 SWAP1 PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x142E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x18DF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x143E DUP5 DUP5 PUSH2 0x11BC JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x14BF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x14B0 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2968 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14BE DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x18DF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1535 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152C SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15A5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159C SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15B0 DUP4 DUP4 DUP4 PUSH2 0x1AAE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x15C6 DUP2 PUSH2 0x15C1 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x1ABE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x15D4 DUP4 DUP4 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x16A9 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1646 PUSH2 0x141A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x16AD JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16BE DUP4 DUP4 PUSH2 0xC6B JUMP JUMPDEST ISZERO PUSH2 0x1793 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1730 PUSH2 0x141A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1797 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17A5 PUSH2 0x1B0F JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x17E7 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F4 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x186E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1865 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1879 DUP3 PUSH0 DUP4 PUSH2 0x1AAE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1885 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x18C8 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D5 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x194F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1946 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19BF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B6 SWAP2 SWAP1 PUSH2 0x242B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1AA8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A9F SWAP2 SWAP1 PUSH2 0x201A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1AB9 DUP4 DUP4 DUP4 PUSH2 0x1B90 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1AC8 DUP3 DUP3 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x1B0B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B02 SWAP3 SWAP2 SWAP1 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1B17 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x1B4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1B57 PUSH2 0xA20 JUMP JUMPDEST ISZERO PUSH2 0x1B8E JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1B98 PUSH2 0x1B4F JUMP JUMPDEST PUSH2 0x1BA3 DUP4 DUP4 DUP4 PUSH2 0x1BA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BF8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1BEC SWAP2 SWAP1 PUSH2 0x29C4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1CC6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1C81 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C78 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2968 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D0D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D57 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DB4 SWAP2 SWAP1 PUSH2 0x201A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E06 DUP2 PUSH2 0x1DD2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E21 DUP2 PUSH2 0x1DFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3C JUMPI PUSH2 0x1E3B PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E49 DUP5 DUP3 DUP6 ADD PUSH2 0x1E13 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E66 DUP2 PUSH2 0x1E52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E7F PUSH0 DUP4 ADD DUP5 PUSH2 0x1E5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC7 DUP3 PUSH2 0x1E85 JUMP JUMPDEST PUSH2 0x1ED1 DUP2 DUP6 PUSH2 0x1E8F JUMP JUMPDEST SWAP4 POP PUSH2 0x1EE1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x1EEA DUP2 PUSH2 0x1EAD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F0D DUP2 DUP5 PUSH2 0x1EBD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F3E DUP3 PUSH2 0x1F15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F4E DUP2 PUSH2 0x1F34 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F69 DUP2 PUSH2 0x1F45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F81 DUP2 PUSH2 0x1F6F JUMP JUMPDEST DUP2 EQ PUSH2 0x1F8B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F9C DUP2 PUSH2 0x1F78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB8 JUMPI PUSH2 0x1FB7 PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FC5 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FD6 DUP6 DUP3 DUP7 ADD PUSH2 0x1F8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FF5 JUMPI PUSH2 0x1FF4 PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2002 DUP5 DUP3 DUP6 ADD PUSH2 0x1F8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2014 DUP2 PUSH2 0x1F6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x202D PUSH0 DUP4 ADD DUP5 PUSH2 0x200B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x204A JUMPI PUSH2 0x2049 PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2057 DUP7 DUP3 DUP8 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2068 DUP7 DUP3 DUP8 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2079 DUP7 DUP3 DUP8 ADD PUSH2 0x1F8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2095 DUP2 PUSH2 0x2083 JUMP JUMPDEST DUP2 EQ PUSH2 0x209F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20B0 DUP2 PUSH2 0x208C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20CB JUMPI PUSH2 0x20CA PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20D8 DUP5 DUP3 DUP6 ADD PUSH2 0x20A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20EA DUP2 PUSH2 0x2083 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2103 PUSH0 DUP4 ADD DUP5 PUSH2 0x20E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x211F JUMPI PUSH2 0x211E PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x212C DUP6 DUP3 DUP7 ADD PUSH2 0x20A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x213D DUP6 DUP3 DUP7 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x215C DUP2 PUSH2 0x2147 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2175 PUSH0 DUP4 ADD DUP5 PUSH2 0x2153 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2190 JUMPI PUSH2 0x218F PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x219D DUP5 DUP3 DUP6 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x21E0 DUP3 PUSH2 0x1EAD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21FF JUMPI PUSH2 0x21FE PUSH2 0x21AA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2211 PUSH2 0x1DC1 JUMP JUMPDEST SWAP1 POP PUSH2 0x221D DUP3 DUP3 PUSH2 0x21D7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x223C JUMPI PUSH2 0x223B PUSH2 0x21AA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x2263 PUSH2 0x225E DUP5 PUSH2 0x2222 JUMP JUMPDEST PUSH2 0x2208 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2286 JUMPI PUSH2 0x2285 PUSH2 0x224D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22AF JUMPI DUP1 PUSH2 0x229B DUP9 DUP3 PUSH2 0x1F5B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2288 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22CD JUMPI PUSH2 0x22CC PUSH2 0x21A6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22DD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2251 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2300 JUMPI PUSH2 0x22FF PUSH2 0x21AA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2323 PUSH2 0x231E DUP5 PUSH2 0x22E6 JUMP JUMPDEST PUSH2 0x2208 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2346 JUMPI PUSH2 0x2345 PUSH2 0x224D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x236F JUMPI DUP1 PUSH2 0x235B DUP9 DUP3 PUSH2 0x1F8E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2348 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x238D JUMPI PUSH2 0x238C PUSH2 0x21A6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x239D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2311 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23BC JUMPI PUSH2 0x23BB PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23D9 JUMPI PUSH2 0x23D8 PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST PUSH2 0x23E5 DUP6 DUP3 DUP7 ADD PUSH2 0x22B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2406 JUMPI PUSH2 0x2405 PUSH2 0x1DCE JUMP JUMPDEST JUMPDEST PUSH2 0x2412 DUP6 DUP3 DUP7 ADD PUSH2 0x2379 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2425 DUP2 PUSH2 0x1F34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x243E PUSH0 DUP4 ADD DUP5 PUSH2 0x241C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x245A JUMPI PUSH2 0x2459 PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2467 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2478 DUP6 DUP3 DUP7 ADD PUSH2 0x1F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24C6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24D9 JUMPI PUSH2 0x24D8 PUSH2 0x2482 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2516 DUP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP2 POP PUSH2 0x2521 DUP4 PUSH2 0x1F6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x252F DUP2 PUSH2 0x1F6F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2546 JUMPI PUSH2 0x2545 PUSH2 0x24DF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2560 PUSH0 DUP4 ADD DUP7 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x256D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x257A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x200B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x258B DUP2 PUSH2 0x1E52 JUMP JUMPDEST DUP2 EQ PUSH2 0x2595 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25A6 DUP2 PUSH2 0x2582 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C1 JUMPI PUSH2 0x25C0 PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25CE DUP5 DUP3 DUP6 ADD PUSH2 0x2598 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537461626C6520636F696E207472616E73666572206661696C65640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x260B PUSH1 0x1B DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x2616 DUP3 PUSH2 0x25D7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2638 DUP2 PUSH2 0x25FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2652 PUSH0 DUP4 ADD DUP6 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x265F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x200B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x426F6E6420746F6B656E207472616E73666572206661696C6564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x269A PUSH1 0x1A DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x26A5 DUP3 PUSH2 0x2666 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26C7 DUP2 PUSH2 0x268E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20686F6C6465727320616E6420616D6F756E7473206C656E677468 PUSH0 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2728 PUSH1 0x29 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x2733 DUP3 PUSH2 0x26CE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2755 DUP2 PUSH2 0x271C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27BD PUSH1 0xF DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x27C8 DUP3 PUSH2 0x2789 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27EA DUP2 PUSH2 0x27B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E277420636C61696D207A65726F20636F696E7300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2825 PUSH1 0x16 DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x2830 DUP3 PUSH2 0x27F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2852 DUP2 PUSH2 0x2819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2867 DUP2 PUSH2 0x1F78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2882 JUMPI PUSH2 0x2881 PUSH2 0x1DCA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x288F DUP5 DUP3 DUP6 ADD PUSH2 0x2859 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20696E766573746F722066756E647320617661696C61626C652E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28CC PUSH1 0x1C DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x28D7 DUP3 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28F9 DUP2 PUSH2 0x28C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661696C656420746F207472616E7366657220737461626C6520636F696E7300 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2934 PUSH1 0x1F DUP4 PUSH2 0x1E8F JUMP JUMPDEST SWAP2 POP PUSH2 0x293F DUP3 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2961 DUP2 PUSH2 0x2928 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x297B PUSH0 DUP4 ADD DUP7 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x2988 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x200B JUMP JUMPDEST PUSH2 0x2995 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x200B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x29B0 PUSH0 DUP4 ADD DUP6 PUSH2 0x241C JUMP JUMPDEST PUSH2 0x29BD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29CE DUP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP2 POP PUSH2 0x29D9 DUP4 PUSH2 0x1F6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x29F1 JUMPI PUSH2 0x29F0 PUSH2 0x24DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xD9 MLOAD 0xAD 0x24 0xE5 0xB2 TIMESTAMP 0xD5 SWAP16 0xBE MULMOD EQ TLOAD INVALID DIV 0xAE 0x4E LOG3 PUSH32 0x3A54F755A9E941CD3B583F7464736F6C634300081A0033000000000000000000 ",
							"sourceMap": "373:2859:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1392:273:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3144:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;462:50:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1318:69:12;;;:::i;:::-;;618:87:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1850:84:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:158:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1247:65:12;;;:::i;:::-;;1872:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;586:35:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;670:33:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2614:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2282:326;;;:::i;:::-;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;518:62:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;627:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1671:196;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2074:89:3:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;1392:273:12:-;1462:10;1455:31;;;1487:10;1506:4;1525:8;1512:12;:21;;;;:::i;:::-;1455:79;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1447:118;;;;;;;;;;;;:::i;:::-;;;;;;;;;1589:4;1583:20;;;1604:10;1615:12;1583:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1575:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1392:273;:::o;3144:97:3:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;462:50:12:-;494:18;462:50;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;3002:82:3:-;3051:5;3075:2;3068:9;;3002:82;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1318:69:12:-;494:18;2464:16:0;2475:4;2464:10;:16::i;:::-;1370:10:12::1;:8;:10::i;:::-;1318:69:::0;:::o;618:87:5:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;1850:84:9:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;1021:158:5:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1247:65:12:-;494:18;2464:16:0;2475:4;2464:10;:16::i;:::-;1297:8:12::1;:6;:8::i;:::-;1247:65:::0;:::o;1872:405::-;494:18;2464:16:0;2475:4;2464:10;:16::i;:::-;2024:7:12::1;:14;2001:12;:19;:37;1993:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;2099:9;2094:177;2118:12;:19;2114:1;:23;2094:177;;;2173:12;2166:33;;;2200:10;2212:12;2225:1;2212:15;;;;;;;;:::i;:::-;;;;;;;;2229:7;2237:1;2229:10;;;;;;;;:::i;:::-;;;;;;;;2166:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2158:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;2139:3;;;;;;;2094:177;;;;1872:405:::0;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;586:35:12:-;;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3610:178:3:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;670:33:12:-;;;:::o;2614:340::-;2699:1;2684:12;:16;2676:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2750:4;2744:24;;;2769:10;2788:4;2794:12;2744:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2736:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;2862:10;2855:27;;;2883:10;2907:8;2894:12;:21;;;;:::i;:::-;2855:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2847:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;2614:340;:::o;2282:326::-;556:24;2464:16:0;2475:4;2464:10;:16::i;:::-;2350:27:12::1;2387:10;2380:28;;;2417:4;2380:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2350:73;;2463:1;2441:19;:23;2433:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2520:4;2514:20;;;2535:10;2546:19;2514:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2506:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2340:268;2282:326:::0;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;518:62:12:-;556:24;518:62;:::o;627:37::-;;;:::o;1671:196::-;494:18;2464:16:0;2475:4;2464:10;:16::i;:::-;1782:12:12::1;1775:33;;;1809:12;1822:11;1834:6;1775:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1767:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;1671:196:::0;;;:::o;762:146:10:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;2710:117:9:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;8247:206:3:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2463:115:9:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;9949:432:3:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;3065:165:12:-;3193:30;3207:4;3213:2;3217:5;3193:13;:30::i;:::-;3065:165;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;2202:126:9:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;2002:128::-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;1112:145:6:-;1474:19:9;:17;:19::i;:::-;1220:30:6::1;1234:4;1240:2;1244:5;1220:13;:30::i;:::-;1112:145:::0;;;:::o;6271:1107:3:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:329::-;4155:6;4204:2;4192:9;4183:7;4179:23;4175:32;4172:119;;;4210:79;;:::i;:::-;4172:119;4330:1;4355:53;4400:7;4391:6;4380:9;4376:22;4355:53;:::i;:::-;4345:63;;4301:117;4096:329;;;;:::o;4431:118::-;4518:24;4536:5;4518:24;:::i;:::-;4513:3;4506:37;4431:118;;:::o;4555:222::-;4648:4;4686:2;4675:9;4671:18;4663:26;;4699:71;4767:1;4756:9;4752:17;4743:6;4699:71;:::i;:::-;4555:222;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:77::-;5445:7;5474:5;5463:16;;5408:77;;;:::o;5491:122::-;5564:24;5582:5;5564:24;:::i;:::-;5557:5;5554:35;5544:63;;5603:1;5600;5593:12;5544:63;5491:122;:::o;5619:139::-;5665:5;5703:6;5690:20;5681:29;;5719:33;5746:5;5719:33;:::i;:::-;5619:139;;;;:::o;5764:329::-;5823:6;5872:2;5860:9;5851:7;5847:23;5843:32;5840:119;;;5878:79;;:::i;:::-;5840:119;5998:1;6023:53;6068:7;6059:6;6048:9;6044:22;6023:53;:::i;:::-;6013:63;;5969:117;5764:329;;;;:::o;6099:118::-;6186:24;6204:5;6186:24;:::i;:::-;6181:3;6174:37;6099:118;;:::o;6223:222::-;6316:4;6354:2;6343:9;6339:18;6331:26;;6367:71;6435:1;6424:9;6420:17;6411:6;6367:71;:::i;:::-;6223:222;;;;:::o;6451:474::-;6519:6;6527;6576:2;6564:9;6555:7;6551:23;6547:32;6544:119;;;6582:79;;:::i;:::-;6544:119;6702:1;6727:53;6772:7;6763:6;6752:9;6748:22;6727:53;:::i;:::-;6717:63;;6673:117;6829:2;6855:53;6900:7;6891:6;6880:9;6876:22;6855:53;:::i;:::-;6845:63;;6800:118;6451:474;;;;;:::o;6931:86::-;6966:7;7006:4;6999:5;6995:16;6984:27;;6931:86;;;:::o;7023:112::-;7106:22;7122:5;7106:22;:::i;:::-;7101:3;7094:35;7023:112;;:::o;7141:214::-;7230:4;7268:2;7257:9;7253:18;7245:26;;7281:67;7345:1;7334:9;7330:17;7321:6;7281:67;:::i;:::-;7141:214;;;;:::o;7361:329::-;7420:6;7469:2;7457:9;7448:7;7444:23;7440:32;7437:119;;;7475:79;;:::i;:::-;7437:119;7595:1;7620:53;7665:7;7656:6;7645:9;7641:22;7620:53;:::i;:::-;7610:63;;7566:117;7361:329;;;;:::o;7696:117::-;7805:1;7802;7795:12;7819:180;7867:77;7864:1;7857:88;7964:4;7961:1;7954:15;7988:4;7985:1;7978:15;8005:281;8088:27;8110:4;8088:27;:::i;:::-;8080:6;8076:40;8218:6;8206:10;8203:22;8182:18;8170:10;8167:34;8164:62;8161:88;;;8229:18;;:::i;:::-;8161:88;8269:10;8265:2;8258:22;8048:238;8005:281;;:::o;8292:129::-;8326:6;8353:20;;:::i;:::-;8343:30;;8382:33;8410:4;8402:6;8382:33;:::i;:::-;8292:129;;;:::o;8427:311::-;8504:4;8594:18;8586:6;8583:30;8580:56;;;8616:18;;:::i;:::-;8580:56;8666:4;8658:6;8654:17;8646:25;;8726:4;8720;8716:15;8708:23;;8427:311;;;:::o;8744:117::-;8853:1;8850;8843:12;8884:710;8980:5;9005:81;9021:64;9078:6;9021:64;:::i;:::-;9005:81;:::i;:::-;8996:90;;9106:5;9135:6;9128:5;9121:21;9169:4;9162:5;9158:16;9151:23;;9222:4;9214:6;9210:17;9202:6;9198:30;9251:3;9243:6;9240:15;9237:122;;;9270:79;;:::i;:::-;9237:122;9385:6;9368:220;9402:6;9397:3;9394:15;9368:220;;;9477:3;9506:37;9539:3;9527:10;9506:37;:::i;:::-;9501:3;9494:50;9573:4;9568:3;9564:14;9557:21;;9444:144;9428:4;9423:3;9419:14;9412:21;;9368:220;;;9372:21;8986:608;;8884:710;;;;;:::o;9617:370::-;9688:5;9737:3;9730:4;9722:6;9718:17;9714:27;9704:122;;9745:79;;:::i;:::-;9704:122;9862:6;9849:20;9887:94;9977:3;9969:6;9962:4;9954:6;9950:17;9887:94;:::i;:::-;9878:103;;9694:293;9617:370;;;;:::o;9993:311::-;10070:4;10160:18;10152:6;10149:30;10146:56;;;10182:18;;:::i;:::-;10146:56;10232:4;10224:6;10220:17;10212:25;;10292:4;10286;10282:15;10274:23;;9993:311;;;:::o;10327:710::-;10423:5;10448:81;10464:64;10521:6;10464:64;:::i;:::-;10448:81;:::i;:::-;10439:90;;10549:5;10578:6;10571:5;10564:21;10612:4;10605:5;10601:16;10594:23;;10665:4;10657:6;10653:17;10645:6;10641:30;10694:3;10686:6;10683:15;10680:122;;;10713:79;;:::i;:::-;10680:122;10828:6;10811:220;10845:6;10840:3;10837:15;10811:220;;;10920:3;10949:37;10982:3;10970:10;10949:37;:::i;:::-;10944:3;10937:50;11016:4;11011:3;11007:14;11000:21;;10887:144;10871:4;10866:3;10862:14;10855:21;;10811:220;;;10815:21;10429:608;;10327:710;;;;;:::o;11060:370::-;11131:5;11180:3;11173:4;11165:6;11161:17;11157:27;11147:122;;11188:79;;:::i;:::-;11147:122;11305:6;11292:20;11330:94;11420:3;11412:6;11405:4;11397:6;11393:17;11330:94;:::i;:::-;11321:103;;11137:293;11060:370;;;;:::o;11436:894::-;11554:6;11562;11611:2;11599:9;11590:7;11586:23;11582:32;11579:119;;;11617:79;;:::i;:::-;11579:119;11765:1;11754:9;11750:17;11737:31;11795:18;11787:6;11784:30;11781:117;;;11817:79;;:::i;:::-;11781:117;11922:78;11992:7;11983:6;11972:9;11968:22;11922:78;:::i;:::-;11912:88;;11708:302;12077:2;12066:9;12062:18;12049:32;12108:18;12100:6;12097:30;12094:117;;;12130:79;;:::i;:::-;12094:117;12235:78;12305:7;12296:6;12285:9;12281:22;12235:78;:::i;:::-;12225:88;;12020:303;11436:894;;;;;:::o;12336:118::-;12423:24;12441:5;12423:24;:::i;:::-;12418:3;12411:37;12336:118;;:::o;12460:222::-;12553:4;12591:2;12580:9;12576:18;12568:26;;12604:71;12672:1;12661:9;12657:17;12648:6;12604:71;:::i;:::-;12460:222;;;;:::o;12688:474::-;12756:6;12764;12813:2;12801:9;12792:7;12788:23;12784:32;12781:119;;;12819:79;;:::i;:::-;12781:119;12939:1;12964:53;13009:7;13000:6;12989:9;12985:22;12964:53;:::i;:::-;12954:63;;12910:117;13066:2;13092:53;13137:7;13128:6;13117:9;13113:22;13092:53;:::i;:::-;13082:63;;13037:118;12688:474;;;;;:::o;13168:180::-;13216:77;13213:1;13206:88;13313:4;13310:1;13303:15;13337:4;13334:1;13327:15;13354:320;13398:6;13435:1;13429:4;13425:12;13415:22;;13482:1;13476:4;13472:12;13503:18;13493:81;;13559:4;13551:6;13547:17;13537:27;;13493:81;13621:2;13613:6;13610:14;13590:18;13587:38;13584:84;;13640:18;;:::i;:::-;13584:84;13405:269;13354:320;;;:::o;13680:180::-;13728:77;13725:1;13718:88;13825:4;13822:1;13815:15;13849:4;13846:1;13839:15;13866:410;13906:7;13929:20;13947:1;13929:20;:::i;:::-;13924:25;;13963:20;13981:1;13963:20;:::i;:::-;13958:25;;14018:1;14015;14011:9;14040:30;14058:11;14040:30;:::i;:::-;14029:41;;14219:1;14210:7;14206:15;14203:1;14200:22;14180:1;14173:9;14153:83;14130:139;;14249:18;;:::i;:::-;14130:139;13914:362;13866:410;;;;:::o;14282:442::-;14431:4;14469:2;14458:9;14454:18;14446:26;;14482:71;14550:1;14539:9;14535:17;14526:6;14482:71;:::i;:::-;14563:72;14631:2;14620:9;14616:18;14607:6;14563:72;:::i;:::-;14645;14713:2;14702:9;14698:18;14689:6;14645:72;:::i;:::-;14282:442;;;;;;:::o;14730:116::-;14800:21;14815:5;14800:21;:::i;:::-;14793:5;14790:32;14780:60;;14836:1;14833;14826:12;14780:60;14730:116;:::o;14852:137::-;14906:5;14937:6;14931:13;14922:22;;14953:30;14977:5;14953:30;:::i;:::-;14852:137;;;;:::o;14995:345::-;15062:6;15111:2;15099:9;15090:7;15086:23;15082:32;15079:119;;;15117:79;;:::i;:::-;15079:119;15237:1;15262:61;15315:7;15306:6;15295:9;15291:22;15262:61;:::i;:::-;15252:71;;15208:125;14995:345;;;;:::o;15346:177::-;15486:29;15482:1;15474:6;15470:14;15463:53;15346:177;:::o;15529:366::-;15671:3;15692:67;15756:2;15751:3;15692:67;:::i;:::-;15685:74;;15768:93;15857:3;15768:93;:::i;:::-;15886:2;15881:3;15877:12;15870:19;;15529:366;;;:::o;15901:419::-;16067:4;16105:2;16094:9;16090:18;16082:26;;16154:9;16148:4;16144:20;16140:1;16129:9;16125:17;16118:47;16182:131;16308:4;16182:131;:::i;:::-;16174:139;;15901:419;;;:::o;16326:332::-;16447:4;16485:2;16474:9;16470:18;16462:26;;16498:71;16566:1;16555:9;16551:17;16542:6;16498:71;:::i;:::-;16579:72;16647:2;16636:9;16632:18;16623:6;16579:72;:::i;:::-;16326:332;;;;;:::o;16664:176::-;16804:28;16800:1;16792:6;16788:14;16781:52;16664:176;:::o;16846:366::-;16988:3;17009:67;17073:2;17068:3;17009:67;:::i;:::-;17002:74;;17085:93;17174:3;17085:93;:::i;:::-;17203:2;17198:3;17194:12;17187:19;;16846:366;;;:::o;17218:419::-;17384:4;17422:2;17411:9;17407:18;17399:26;;17471:9;17465:4;17461:20;17457:1;17446:9;17442:17;17435:47;17499:131;17625:4;17499:131;:::i;:::-;17491:139;;17218:419;;;:::o;17643:228::-;17783:34;17779:1;17771:6;17767:14;17760:58;17852:11;17847:2;17839:6;17835:15;17828:36;17643:228;:::o;17877:366::-;18019:3;18040:67;18104:2;18099:3;18040:67;:::i;:::-;18033:74;;18116:93;18205:3;18116:93;:::i;:::-;18234:2;18229:3;18225:12;18218:19;;17877:366;;;:::o;18249:419::-;18415:4;18453:2;18442:9;18438:18;18430:26;;18502:9;18496:4;18492:20;18488:1;18477:9;18473:17;18466:47;18530:131;18656:4;18530:131;:::i;:::-;18522:139;;18249:419;;;:::o;18674:180::-;18722:77;18719:1;18712:88;18819:4;18816:1;18809:15;18843:4;18840:1;18833:15;18860:165;19000:17;18996:1;18988:6;18984:14;18977:41;18860:165;:::o;19031:366::-;19173:3;19194:67;19258:2;19253:3;19194:67;:::i;:::-;19187:74;;19270:93;19359:3;19270:93;:::i;:::-;19388:2;19383:3;19379:12;19372:19;;19031:366;;;:::o;19403:419::-;19569:4;19607:2;19596:9;19592:18;19584:26;;19656:9;19650:4;19646:20;19642:1;19631:9;19627:17;19620:47;19684:131;19810:4;19684:131;:::i;:::-;19676:139;;19403:419;;;:::o;19828:172::-;19968:24;19964:1;19956:6;19952:14;19945:48;19828:172;:::o;20006:366::-;20148:3;20169:67;20233:2;20228:3;20169:67;:::i;:::-;20162:74;;20245:93;20334:3;20245:93;:::i;:::-;20363:2;20358:3;20354:12;20347:19;;20006:366;;;:::o;20378:419::-;20544:4;20582:2;20571:9;20567:18;20559:26;;20631:9;20625:4;20621:20;20617:1;20606:9;20602:17;20595:47;20659:131;20785:4;20659:131;:::i;:::-;20651:139;;20378:419;;;:::o;20803:143::-;20860:5;20891:6;20885:13;20876:22;;20907:33;20934:5;20907:33;:::i;:::-;20803:143;;;;:::o;20952:351::-;21022:6;21071:2;21059:9;21050:7;21046:23;21042:32;21039:119;;;21077:79;;:::i;:::-;21039:119;21197:1;21222:64;21278:7;21269:6;21258:9;21254:22;21222:64;:::i;:::-;21212:74;;21168:128;20952:351;;;;:::o;21309:178::-;21449:30;21445:1;21437:6;21433:14;21426:54;21309:178;:::o;21493:366::-;21635:3;21656:67;21720:2;21715:3;21656:67;:::i;:::-;21649:74;;21732:93;21821:3;21732:93;:::i;:::-;21850:2;21845:3;21841:12;21834:19;;21493:366;;;:::o;21865:419::-;22031:4;22069:2;22058:9;22054:18;22046:26;;22118:9;22112:4;22108:20;22104:1;22093:9;22089:17;22082:47;22146:131;22272:4;22146:131;:::i;:::-;22138:139;;21865:419;;;:::o;22290:181::-;22430:33;22426:1;22418:6;22414:14;22407:57;22290:181;:::o;22477:366::-;22619:3;22640:67;22704:2;22699:3;22640:67;:::i;:::-;22633:74;;22716:93;22805:3;22716:93;:::i;:::-;22834:2;22829:3;22825:12;22818:19;;22477:366;;;:::o;22849:419::-;23015:4;23053:2;23042:9;23038:18;23030:26;;23102:9;23096:4;23092:20;23088:1;23077:9;23073:17;23066:47;23130:131;23256:4;23130:131;:::i;:::-;23122:139;;22849:419;;;:::o;23274:442::-;23423:4;23461:2;23450:9;23446:18;23438:26;;23474:71;23542:1;23531:9;23527:17;23518:6;23474:71;:::i;:::-;23555:72;23623:2;23612:9;23608:18;23599:6;23555:72;:::i;:::-;23637;23705:2;23694:9;23690:18;23681:6;23637:72;:::i;:::-;23274:442;;;;;;:::o;23722:332::-;23843:4;23881:2;23870:9;23866:18;23858:26;;23894:71;23962:1;23951:9;23947:17;23938:6;23894:71;:::i;:::-;23975:72;24043:2;24032:9;24028:18;24019:6;23975:72;:::i;:::-;23722:332;;;;;:::o;24060:191::-;24100:3;24119:20;24137:1;24119:20;:::i;:::-;24114:25;;24153:20;24171:1;24153:20;:::i;:::-;24148:25;;24196:1;24193;24189:9;24182:16;;24217:3;24214:1;24211:10;24208:36;;;24224:18;;:::i;:::-;24208:36;24060:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2159400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN()": "371",
								"BOND_ISSUER()": "391",
								"DEFAULT_ADMIN_ROLE()": "419",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"buyBond(uint256)": "infinite",
								"claimFaceValue(uint256)": "infinite",
								"claimInvestorFunds()": "infinite",
								"decimals()": "428",
								"distributeInterest(address,uint256)": "infinite",
								"distributeInterestAll(address[],uint256[])": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3234",
								"interestCoin()": "infinite",
								"name()": "infinite",
								"pause()": "infinite",
								"paused()": "2562",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"stableCoin()": "infinite",
								"supportsInterface(bytes4)": "764",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unitSize()": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 373,
									"end": 3232,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 709,
									"end": 1241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "426F6E4465466920546F6B656E205369656D656E730000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "42445349454D0000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 984,
									"end": 1016,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 494,
									"end": 512,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
								},
								{
									"begin": 1002,
									"end": 1015,
									"modifierDepth": 1,
									"name": "DUP11",
									"source": 12
								},
								{
									"begin": 984,
									"end": 994,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 984,
									"end": 994,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 984,
									"end": 994,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1016,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 984,
									"end": 1016,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1016,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1016,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 984,
									"end": 1016,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 984,
									"end": 1016,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1026,
									"end": 1061,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 556,
									"end": 580,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "F877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7"
								},
								{
									"begin": 1050,
									"end": 1060,
									"modifierDepth": 1,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 1026,
									"end": 1036,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 1026,
									"end": 1036,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1026,
									"end": 1036,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1026,
									"end": 1061,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1026,
									"end": 1061,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1026,
									"end": 1061,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1026,
									"end": 1061,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1026,
									"end": 1061,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1026,
									"end": 1061,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1084,
									"end": 1095,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1071,
									"end": 1095,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1071,
									"end": 1095,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1071,
									"end": 1095,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1071,
									"end": 1095,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1071,
									"end": 1095,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1071,
									"end": 1095,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1071,
									"end": 1095,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1071,
									"end": 1095,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1071,
									"end": 1095,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1071,
									"end": 1095,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1120,
									"end": 1133,
									"modifierDepth": 1,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1105,
									"end": 1133,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 1105,
									"end": 1133,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1105,
									"end": 1133,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1133,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1133,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1133,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1133,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1154,
									"end": 1163,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1143,
									"end": 1163,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 1143,
									"end": 1163,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1143,
									"end": 1163,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1143,
									"end": 1163,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1143,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1143,
									"end": 1163,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1173,
									"end": 1234,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1179,
									"end": 1189,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 1223,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1223,
									"end": 1231,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1223,
									"end": 1231,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1223,
									"end": 1231,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1223,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1223,
									"end": 1233,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1223,
									"end": 1233,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1223,
									"end": 1233,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1223,
									"end": 1233,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1217,
									"end": 1219,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 1217,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1217,
									"end": 1233,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1217,
									"end": 1233,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1217,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1217,
									"end": 1233,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1217,
									"end": 1233,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1217,
									"end": 1233,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1204,
									"end": 1213,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1192,
									"end": 1201,
									"modifierDepth": 1,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1192,
									"end": 1213,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1192,
									"end": 1213,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1192,
									"end": 1213,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1192,
									"end": 1213,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1192,
									"end": 1213,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1192,
									"end": 1213,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1192,
									"end": 1213,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1191,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1191,
									"end": 1233,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1191,
									"end": 1233,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1191,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1191,
									"end": 1233,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1191,
									"end": 1233,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 1191,
									"end": 1233,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1173,
									"end": 1178,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 1173,
									"end": 1178,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1173,
									"end": 1178,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1173,
									"end": 1234,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1173,
									"end": 1234,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1173,
									"end": 1234,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1173,
									"end": 1234,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1173,
									"end": 1234,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 709,
									"end": 1241,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3002,
									"end": 3084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3065,
									"end": 3230,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3065,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3193,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3207,
									"end": 3211,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3213,
									"end": 3215,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3217,
									"end": 3222,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3193,
									"end": 3206,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 3193,
									"end": 3206,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3193,
									"end": 3206,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3193,
									"end": 3223,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3193,
									"end": 3223,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3193,
									"end": 3223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3193,
									"end": 3223,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3193,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3065,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3065,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3065,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3065,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1234,
									"end": 1238,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1240,
									"end": 1242,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1244,
									"end": 1249,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1220,
									"end": 1250,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2002,
									"end": 2130,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2002,
									"end": 2130,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2075,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 9,
									"value": "D93C066500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2002,
									"end": 2130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "67"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 3,
									"value": "66"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1897,
									"end": 1901,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1913,
									"end": 1927,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1913,
									"end": 1927,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1850,
									"end": 1934,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2810,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2810,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1347,
									"end": 1353,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1355,
									"end": 1361,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1363,
									"end": 1369,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1377,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1379,
									"end": 1385,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1387,
									"end": 1393,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1395,
									"end": 1401,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 1409,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1411,
									"end": 1417,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1460,
									"end": 1463,
									"name": "PUSH",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 1439,
									"end": 1446,
									"name": "DUP13",
									"source": 13
								},
								{
									"begin": 1435,
									"end": 1458,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1431,
									"end": 1464,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1428,
									"end": 1548,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1428,
									"end": 1548,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 1428,
									"end": 1548,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1467,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 1467,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 1467,
									"end": 1546,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1467,
									"end": 1546,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 1467,
									"end": 1546,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1428,
									"end": 1548,
									"name": "tag",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 1428,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1587,
									"end": 1588,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1612,
									"end": 1676,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 1668,
									"end": 1675,
									"name": "DUP13",
									"source": 13
								},
								{
									"begin": 1659,
									"end": 1665,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1648,
									"end": 1657,
									"name": "DUP14",
									"source": 13
								},
								{
									"begin": 1644,
									"end": 1666,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1612,
									"end": 1676,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 1612,
									"end": 1676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1612,
									"end": 1676,
									"name": "tag",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 1612,
									"end": 1676,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1602,
									"end": 1676,
									"name": "SWAP10",
									"source": 13
								},
								{
									"begin": 1602,
									"end": 1676,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1558,
									"end": 1686,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1725,
									"end": 1727,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1751,
									"end": 1815,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 1807,
									"end": 1814,
									"name": "DUP13",
									"source": 13
								},
								{
									"begin": 1798,
									"end": 1804,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1787,
									"end": 1796,
									"name": "DUP14",
									"source": 13
								},
								{
									"begin": 1783,
									"end": 1805,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1751,
									"end": 1815,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 1751,
									"end": 1815,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1751,
									"end": 1815,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 1751,
									"end": 1815,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1741,
									"end": 1815,
									"name": "SWAP9",
									"source": 13
								},
								{
									"begin": 1741,
									"end": 1815,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1696,
									"end": 1825,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1864,
									"end": 1866,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1890,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 1946,
									"end": 1953,
									"name": "DUP13",
									"source": 13
								},
								{
									"begin": 1937,
									"end": 1943,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1926,
									"end": 1935,
									"name": "DUP14",
									"source": 13
								},
								{
									"begin": 1922,
									"end": 1944,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 1890,
									"end": 1954,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1954,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 1890,
									"end": 1954,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1880,
									"end": 1954,
									"name": "SWAP8",
									"source": 13
								},
								{
									"begin": 1880,
									"end": 1954,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1835,
									"end": 1964,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2003,
									"end": 2005,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 2029,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 2085,
									"end": 2092,
									"name": "DUP13",
									"source": 13
								},
								{
									"begin": 2076,
									"end": 2082,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2065,
									"end": 2074,
									"name": "DUP14",
									"source": 13
								},
								{
									"begin": 2061,
									"end": 2083,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2029,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2029,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2029,
									"end": 2093,
									"name": "tag",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 2029,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2019,
									"end": 2093,
									"name": "SWAP7",
									"source": 13
								},
								{
									"begin": 2019,
									"end": 2093,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1974,
									"end": 2103,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2142,
									"end": 2145,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2169,
									"end": 2233,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 2225,
									"end": 2232,
									"name": "DUP13",
									"source": 13
								},
								{
									"begin": 2216,
									"end": 2222,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2205,
									"end": 2214,
									"name": "DUP14",
									"source": 13
								},
								{
									"begin": 2201,
									"end": 2223,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2169,
									"end": 2233,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2169,
									"end": 2233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2169,
									"end": 2233,
									"name": "tag",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 2169,
									"end": 2233,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2159,
									"end": 2233,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 2159,
									"end": 2233,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2113,
									"end": 2243,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2282,
									"end": 2285,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 2309,
									"end": 2373,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 2365,
									"end": 2372,
									"name": "DUP13",
									"source": 13
								},
								{
									"begin": 2356,
									"end": 2362,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2345,
									"end": 2354,
									"name": "DUP14",
									"source": 13
								},
								{
									"begin": 2341,
									"end": 2363,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2309,
									"end": 2373,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2309,
									"end": 2373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2309,
									"end": 2373,
									"name": "tag",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 2309,
									"end": 2373,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2373,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 2299,
									"end": 2373,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2253,
									"end": 2383,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2422,
									"end": 2425,
									"name": "PUSH",
									"source": 13,
									"value": "C0"
								},
								{
									"begin": 2449,
									"end": 2513,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 2505,
									"end": 2512,
									"name": "DUP13",
									"source": 13
								},
								{
									"begin": 2496,
									"end": 2502,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2485,
									"end": 2494,
									"name": "DUP14",
									"source": 13
								},
								{
									"begin": 2481,
									"end": 2503,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2449,
									"end": 2513,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2449,
									"end": 2513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2449,
									"end": 2513,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 2449,
									"end": 2513,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2439,
									"end": 2513,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2439,
									"end": 2513,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2393,
									"end": 2523,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2562,
									"end": 2565,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 2589,
									"end": 2653,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 2645,
									"end": 2652,
									"name": "DUP13",
									"source": 13
								},
								{
									"begin": 2636,
									"end": 2642,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2625,
									"end": 2634,
									"name": "DUP14",
									"source": 13
								},
								{
									"begin": 2621,
									"end": 2643,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2589,
									"end": 2653,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2589,
									"end": 2653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2589,
									"end": 2653,
									"name": "tag",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 2589,
									"end": 2653,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2653,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2653,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2533,
									"end": 2663,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2702,
									"end": 2705,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 2729,
									"end": 2793,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 2785,
									"end": 2792,
									"name": "DUP13",
									"source": 13
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2765,
									"end": 2774,
									"name": "DUP14",
									"source": 13
								},
								{
									"begin": 2761,
									"end": 2783,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2729,
									"end": 2793,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2729,
									"end": 2793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2729,
									"end": 2793,
									"name": "tag",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 2729,
									"end": 2793,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2719,
									"end": 2793,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2719,
									"end": 2793,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2673,
									"end": 2803,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2810,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2810,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2810,
									"name": "SWAP9",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2810,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2810,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2810,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2810,
									"name": "SWAP9",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2810,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2810,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2810,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2810,
									"name": "SWAP9",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 2810,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2816,
									"end": 2915,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2816,
									"end": 2915,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2868,
									"end": 2874,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2902,
									"end": 2907,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2896,
									"end": 2908,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2886,
									"end": 2908,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2886,
									"end": 2908,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2816,
									"end": 2915,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2816,
									"end": 2915,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2816,
									"end": 2915,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2816,
									"end": 2915,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2921,
									"end": 3101,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 2921,
									"end": 3101,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2969,
									"end": 3046,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2966,
									"end": 2967,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2959,
									"end": 3047,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3066,
									"end": 3070,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 3063,
									"end": 3064,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 3056,
									"end": 3071,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3090,
									"end": 3094,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3087,
									"end": 3088,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3080,
									"end": 3095,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 3107,
									"end": 3287,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3107,
									"end": 3287,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3155,
									"end": 3232,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3152,
									"end": 3153,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3145,
									"end": 3233,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3252,
									"end": 3256,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 3249,
									"end": 3250,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 3242,
									"end": 3257,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3276,
									"end": 3280,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3266,
									"end": 3281,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 3293,
									"end": 3613,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3293,
									"end": 3613,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3337,
									"end": 3343,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3374,
									"end": 3375,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3368,
									"end": 3372,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3364,
									"end": 3376,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 3354,
									"end": 3376,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3354,
									"end": 3376,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3421,
									"end": 3422,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3415,
									"end": 3419,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3411,
									"end": 3423,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3442,
									"end": 3460,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3432,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 3432,
									"end": 3513,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3498,
									"end": 3502,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 3490,
									"end": 3496,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3486,
									"end": 3503,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3476,
									"end": 3503,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3476,
									"end": 3503,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3432,
									"end": 3513,
									"name": "tag",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 3432,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3560,
									"end": 3562,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3552,
									"end": 3558,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3549,
									"end": 3563,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3529,
									"end": 3547,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3526,
									"end": 3564,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3523,
									"end": 3607,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 3523,
									"end": 3607,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3579,
									"end": 3597,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 3579,
									"end": 3597,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3579,
									"end": 3597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3579,
									"end": 3597,
									"name": "tag",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 3579,
									"end": 3597,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3523,
									"end": 3607,
									"name": "tag",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 3523,
									"end": 3607,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3344,
									"end": 3613,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3293,
									"end": 3613,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3293,
									"end": 3613,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3293,
									"end": 3613,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3293,
									"end": 3613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3619,
									"end": 3760,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 3619,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3668,
									"end": 3672,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3691,
									"end": 3694,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3683,
									"end": 3694,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3683,
									"end": 3694,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3714,
									"end": 3717,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3711,
									"end": 3712,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3704,
									"end": 3718,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3748,
									"end": 3752,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3745,
									"end": 3746,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3735,
									"end": 3753,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 3727,
									"end": 3753,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3727,
									"end": 3753,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3619,
									"end": 3760,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3619,
									"end": 3760,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3619,
									"end": 3760,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3619,
									"end": 3760,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3766,
									"end": 3859,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 3766,
									"end": 3859,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3803,
									"end": 3809,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3850,
									"end": 3852,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3845,
									"end": 3847,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3838,
									"end": 3843,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3834,
									"end": 3848,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3830,
									"end": 3853,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 3820,
									"end": 3853,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3820,
									"end": 3853,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3766,
									"end": 3859,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3766,
									"end": 3859,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3766,
									"end": 3859,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3766,
									"end": 3859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3865,
									"end": 3972,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3865,
									"end": 3972,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3909,
									"end": 3917,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3959,
									"end": 3964,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3953,
									"end": 3957,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3949,
									"end": 3965,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3928,
									"end": 3965,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3928,
									"end": 3965,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3865,
									"end": 3972,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3865,
									"end": 3972,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3865,
									"end": 3972,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3865,
									"end": 3972,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3865,
									"end": 3972,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3978,
									"end": 4371,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3978,
									"end": 4371,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4047,
									"end": 4053,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4097,
									"end": 4098,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 4085,
									"end": 4095,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4081,
									"end": 4099,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4120,
									"end": 4217,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 4150,
									"end": 4216,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4139,
									"end": 4148,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4120,
									"end": 4217,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 4120,
									"end": 4217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4120,
									"end": 4217,
									"name": "tag",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 4120,
									"end": 4217,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4238,
									"end": 4277,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 4268,
									"end": 4276,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4257,
									"end": 4266,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4238,
									"end": 4277,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 4238,
									"end": 4277,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4238,
									"end": 4277,
									"name": "tag",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 4238,
									"end": 4277,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4226,
									"end": 4277,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 4226,
									"end": 4277,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4310,
									"end": 4314,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4306,
									"end": 4315,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4299,
									"end": 4304,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4295,
									"end": 4316,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4286,
									"end": 4316,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 4286,
									"end": 4316,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4359,
									"end": 4363,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4349,
									"end": 4357,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4345,
									"end": 4364,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4338,
									"end": 4343,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 4365,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4325,
									"end": 4365,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4325,
									"end": 4365,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4054,
									"end": 4371,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4054,
									"end": 4371,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3978,
									"end": 4371,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 3978,
									"end": 4371,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3978,
									"end": 4371,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3978,
									"end": 4371,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3978,
									"end": 4371,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3978,
									"end": 4371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4377,
									"end": 4437,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 4377,
									"end": 4437,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4405,
									"end": 4408,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4426,
									"end": 4431,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4419,
									"end": 4431,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4419,
									"end": 4431,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4377,
									"end": 4437,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4377,
									"end": 4437,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4377,
									"end": 4437,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4377,
									"end": 4437,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4443,
									"end": 4585,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 4443,
									"end": 4585,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4493,
									"end": 4502,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4526,
									"end": 4579,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 4544,
									"end": 4578,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 4553,
									"end": 4577,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "153"
								},
								{
									"begin": 4571,
									"end": 4576,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4553,
									"end": 4577,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 4553,
									"end": 4577,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4553,
									"end": 4577,
									"name": "tag",
									"source": 13,
									"value": "153"
								},
								{
									"begin": 4553,
									"end": 4577,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4544,
									"end": 4578,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 4544,
									"end": 4578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4544,
									"end": 4578,
									"name": "tag",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 4544,
									"end": 4578,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4526,
									"end": 4579,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 4526,
									"end": 4579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4526,
									"end": 4579,
									"name": "tag",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 4526,
									"end": 4579,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4513,
									"end": 4579,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4513,
									"end": 4579,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4443,
									"end": 4585,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4443,
									"end": 4585,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4443,
									"end": 4585,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4443,
									"end": 4585,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4591,
									"end": 4666,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 4591,
									"end": 4666,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4634,
									"end": 4637,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4655,
									"end": 4660,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4648,
									"end": 4660,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4648,
									"end": 4660,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4591,
									"end": 4666,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4591,
									"end": 4666,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4591,
									"end": 4666,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4591,
									"end": 4666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4672,
									"end": 4941,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 4672,
									"end": 4941,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4782,
									"end": 4821,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 4813,
									"end": 4820,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4782,
									"end": 4821,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 4782,
									"end": 4821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4782,
									"end": 4821,
									"name": "tag",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 4782,
									"end": 4821,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4843,
									"end": 4934,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 4892,
									"end": 4933,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "158"
								},
								{
									"begin": 4916,
									"end": 4932,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4892,
									"end": 4933,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 4892,
									"end": 4933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4892,
									"end": 4933,
									"name": "tag",
									"source": 13,
									"value": "158"
								},
								{
									"begin": 4892,
									"end": 4933,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4884,
									"end": 4890,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4877,
									"end": 4881,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4871,
									"end": 4882,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4843,
									"end": 4934,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 4843,
									"end": 4934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4843,
									"end": 4934,
									"name": "tag",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 4843,
									"end": 4934,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4837,
									"end": 4841,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4830,
									"end": 4935,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4748,
									"end": 4941,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4672,
									"end": 4941,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4672,
									"end": 4941,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4672,
									"end": 4941,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4672,
									"end": 4941,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4947,
									"end": 5020,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 4947,
									"end": 5020,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4992,
									"end": 4995,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4947,
									"end": 5020,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4947,
									"end": 5020,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5026,
									"end": 5215,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 5026,
									"end": 5215,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5103,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 5103,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 5103,
									"end": 5135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5103,
									"end": 5135,
									"name": "tag",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 5103,
									"end": 5135,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5209,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 5202,
									"end": 5208,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5194,
									"end": 5200,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5188,
									"end": 5192,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5209,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 5144,
									"end": 5209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5209,
									"name": "tag",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 5144,
									"end": 5209,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5079,
									"end": 5215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5026,
									"end": 5215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5026,
									"end": 5215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5026,
									"end": 5215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5221,
									"end": 5407,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 5221,
									"end": 5407,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5281,
									"end": 5401,
									"name": "tag",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 5281,
									"end": 5401,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5298,
									"end": 5301,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5291,
									"end": 5296,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5288,
									"end": 5302,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5281,
									"end": 5401,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5281,
									"end": 5401,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 5281,
									"end": 5401,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5352,
									"end": 5391,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 5389,
									"end": 5390,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5382,
									"end": 5387,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5352,
									"end": 5391,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 5352,
									"end": 5391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5352,
									"end": 5391,
									"name": "tag",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 5352,
									"end": 5391,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5325,
									"end": 5326,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5318,
									"end": 5323,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5314,
									"end": 5327,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5305,
									"end": 5327,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5305,
									"end": 5327,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5281,
									"end": 5401,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 5281,
									"end": 5401,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5281,
									"end": 5401,
									"name": "tag",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 5281,
									"end": 5401,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5221,
									"end": 5407,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5221,
									"end": 5407,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5221,
									"end": 5407,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5413,
									"end": 5956,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 5413,
									"end": 5956,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5514,
									"end": 5516,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5509,
									"end": 5512,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5506,
									"end": 5517,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5503,
									"end": 5949,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5503,
									"end": 5949,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "169"
								},
								{
									"begin": 5503,
									"end": 5949,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5548,
									"end": 5586,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 5580,
									"end": 5585,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5548,
									"end": 5586,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 5548,
									"end": 5586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5548,
									"end": 5586,
									"name": "tag",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 5548,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5632,
									"end": 5661,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "171"
								},
								{
									"begin": 5650,
									"end": 5660,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5632,
									"end": 5661,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 5632,
									"end": 5661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5632,
									"end": 5661,
									"name": "tag",
									"source": 13,
									"value": "171"
								},
								{
									"begin": 5632,
									"end": 5661,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5622,
									"end": 5630,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5618,
									"end": 5662,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5815,
									"end": 5817,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5803,
									"end": 5813,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5800,
									"end": 5818,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5797,
									"end": 5846,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5797,
									"end": 5846,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "172"
								},
								{
									"begin": 5797,
									"end": 5846,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5836,
									"end": 5844,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5821,
									"end": 5844,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5821,
									"end": 5844,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5797,
									"end": 5846,
									"name": "tag",
									"source": 13,
									"value": "172"
								},
								{
									"begin": 5797,
									"end": 5846,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5859,
									"end": 5939,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "173"
								},
								{
									"begin": 5915,
									"end": 5937,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "174"
								},
								{
									"begin": 5933,
									"end": 5936,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5915,
									"end": 5937,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 5915,
									"end": 5937,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5915,
									"end": 5937,
									"name": "tag",
									"source": 13,
									"value": "174"
								},
								{
									"begin": 5915,
									"end": 5937,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5905,
									"end": 5913,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5901,
									"end": 5938,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5888,
									"end": 5899,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5859,
									"end": 5939,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 5859,
									"end": 5939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5859,
									"end": 5939,
									"name": "tag",
									"source": 13,
									"value": "173"
								},
								{
									"begin": 5859,
									"end": 5939,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5518,
									"end": 5949,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5518,
									"end": 5949,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5503,
									"end": 5949,
									"name": "tag",
									"source": 13,
									"value": "169"
								},
								{
									"begin": 5503,
									"end": 5949,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5413,
									"end": 5956,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5413,
									"end": 5956,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5413,
									"end": 5956,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5413,
									"end": 5956,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5962,
									"end": 6079,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 5962,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6016,
									"end": 6024,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6066,
									"end": 6071,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6060,
									"end": 6064,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6056,
									"end": 6072,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 6035,
									"end": 6072,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6035,
									"end": 6072,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5962,
									"end": 6079,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5962,
									"end": 6079,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5962,
									"end": 6079,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5962,
									"end": 6079,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5962,
									"end": 6079,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6085,
									"end": 6254,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 6085,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6129,
									"end": 6135,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6162,
									"end": 6213,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "177"
								},
								{
									"begin": 6210,
									"end": 6211,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6206,
									"end": 6212,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 6198,
									"end": 6203,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6195,
									"end": 6196,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 6191,
									"end": 6204,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6162,
									"end": 6213,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 6162,
									"end": 6213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6162,
									"end": 6213,
									"name": "tag",
									"source": 13,
									"value": "177"
								},
								{
									"begin": 6162,
									"end": 6213,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6158,
									"end": 6214,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 6243,
									"end": 6247,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 6237,
									"end": 6241,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6233,
									"end": 6248,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6223,
									"end": 6248,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6223,
									"end": 6248,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6136,
									"end": 6254,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6085,
									"end": 6254,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6085,
									"end": 6254,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6085,
									"end": 6254,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6085,
									"end": 6254,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6085,
									"end": 6254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6259,
									"end": 6554,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 6259,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6335,
									"end": 6339,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6481,
									"end": 6510,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "179"
								},
								{
									"begin": 6506,
									"end": 6509,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6500,
									"end": 6504,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6481,
									"end": 6510,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 6481,
									"end": 6510,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6481,
									"end": 6510,
									"name": "tag",
									"source": 13,
									"value": "179"
								},
								{
									"begin": 6481,
									"end": 6510,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6473,
									"end": 6510,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6473,
									"end": 6510,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6543,
									"end": 6546,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6540,
									"end": 6541,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 6536,
									"end": 6547,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6530,
									"end": 6534,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6527,
									"end": 6548,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 6519,
									"end": 6548,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6519,
									"end": 6548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6259,
									"end": 6554,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6259,
									"end": 6554,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6259,
									"end": 6554,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6259,
									"end": 6554,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6259,
									"end": 6554,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6559,
									"end": 7954,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 6559,
									"end": 7954,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6676,
									"end": 6713,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "181"
								},
								{
									"begin": 6709,
									"end": 6712,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6676,
									"end": 6713,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 6676,
									"end": 6713,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6676,
									"end": 6713,
									"name": "tag",
									"source": 13,
									"value": "181"
								},
								{
									"begin": 6676,
									"end": 6713,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6778,
									"end": 6796,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6770,
									"end": 6776,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6767,
									"end": 6797,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 6764,
									"end": 6820,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6764,
									"end": 6820,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "182"
								},
								{
									"begin": 6764,
									"end": 6820,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6800,
									"end": 6818,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 6800,
									"end": 6818,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 6800,
									"end": 6818,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6800,
									"end": 6818,
									"name": "tag",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 6800,
									"end": 6818,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6764,
									"end": 6820,
									"name": "tag",
									"source": 13,
									"value": "182"
								},
								{
									"begin": 6764,
									"end": 6820,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6844,
									"end": 6882,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "184"
								},
								{
									"begin": 6876,
									"end": 6880,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6870,
									"end": 6881,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 6844,
									"end": 6882,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 6844,
									"end": 6882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6844,
									"end": 6882,
									"name": "tag",
									"source": 13,
									"value": "184"
								},
								{
									"begin": 6844,
									"end": 6882,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6929,
									"end": 6996,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "185"
								},
								{
									"begin": 6989,
									"end": 6995,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6981,
									"end": 6987,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6975,
									"end": 6979,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6929,
									"end": 6996,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 6929,
									"end": 6996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6929,
									"end": 6996,
									"name": "tag",
									"source": 13,
									"value": "185"
								},
								{
									"begin": 6929,
									"end": 6996,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7023,
									"end": 7024,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7047,
									"end": 7051,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7034,
									"end": 7051,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7034,
									"end": 7051,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7071,
									"end": 7077,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7068,
									"end": 7082,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7096,
									"end": 7097,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7091,
									"end": 7709,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7091,
									"end": 7709,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 7091,
									"end": 7709,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 7091,
									"end": 7709,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7753,
									"end": 7754,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7770,
									"end": 7776,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7767,
									"end": 7844,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7767,
									"end": 7844,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "188"
								},
								{
									"begin": 7767,
									"end": 7844,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7819,
									"end": 7828,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7814,
									"end": 7817,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 7810,
									"end": 7829,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7804,
									"end": 7830,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7795,
									"end": 7830,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7795,
									"end": 7830,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7767,
									"end": 7844,
									"name": "tag",
									"source": 13,
									"value": "188"
								},
								{
									"begin": 7767,
									"end": 7844,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7870,
									"end": 7937,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "189"
								},
								{
									"begin": 7930,
									"end": 7936,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7923,
									"end": 7928,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7870,
									"end": 7937,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 7870,
									"end": 7937,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7870,
									"end": 7937,
									"name": "tag",
									"source": 13,
									"value": "189"
								},
								{
									"begin": 7870,
									"end": 7937,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7864,
									"end": 7868,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7857,
									"end": 7938,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7726,
									"end": 7948,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7061,
									"end": 7948,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "186"
								},
								{
									"begin": 7061,
									"end": 7948,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7091,
									"end": 7709,
									"name": "tag",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 7091,
									"end": 7709,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7143,
									"end": 7147,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7139,
									"end": 7148,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 7131,
									"end": 7137,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7127,
									"end": 7149,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7177,
									"end": 7214,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "190"
								},
								{
									"begin": 7209,
									"end": 7213,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7177,
									"end": 7214,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 7177,
									"end": 7214,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7177,
									"end": 7214,
									"name": "tag",
									"source": 13,
									"value": "190"
								},
								{
									"begin": 7177,
									"end": 7214,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7236,
									"end": 7237,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7250,
									"end": 7458,
									"name": "tag",
									"source": 13,
									"value": "191"
								},
								{
									"begin": 7250,
									"end": 7458,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7264,
									"end": 7271,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7261,
									"end": 7262,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7258,
									"end": 7272,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 7250,
									"end": 7458,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7250,
									"end": 7458,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "193"
								},
								{
									"begin": 7250,
									"end": 7458,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7343,
									"end": 7352,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7338,
									"end": 7341,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 7334,
									"end": 7353,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7328,
									"end": 7354,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7320,
									"end": 7326,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7313,
									"end": 7355,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7394,
									"end": 7395,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7386,
									"end": 7392,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7382,
									"end": 7396,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7372,
									"end": 7396,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7372,
									"end": 7396,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7441,
									"end": 7443,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7430,
									"end": 7439,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7426,
									"end": 7444,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7413,
									"end": 7444,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7413,
									"end": 7444,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7287,
									"end": 7291,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7285,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7280,
									"end": 7292,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7275,
									"end": 7292,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7275,
									"end": 7292,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7250,
									"end": 7458,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "191"
								},
								{
									"begin": 7250,
									"end": 7458,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7250,
									"end": 7458,
									"name": "tag",
									"source": 13,
									"value": "193"
								},
								{
									"begin": 7250,
									"end": 7458,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7486,
									"end": 7492,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7477,
									"end": 7484,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7474,
									"end": 7493,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 7471,
									"end": 7650,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7471,
									"end": 7650,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "194"
								},
								{
									"begin": 7471,
									"end": 7650,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7544,
									"end": 7553,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7539,
									"end": 7542,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 7535,
									"end": 7554,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7529,
									"end": 7555,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7587,
									"end": 7635,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "195"
								},
								{
									"begin": 7629,
									"end": 7633,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7621,
									"end": 7627,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 7617,
									"end": 7634,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7606,
									"end": 7615,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7587,
									"end": 7635,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 7587,
									"end": 7635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7587,
									"end": 7635,
									"name": "tag",
									"source": 13,
									"value": "195"
								},
								{
									"begin": 7587,
									"end": 7635,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7579,
									"end": 7585,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7572,
									"end": 7636,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7494,
									"end": 7650,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7471,
									"end": 7650,
									"name": "tag",
									"source": 13,
									"value": "194"
								},
								{
									"begin": 7471,
									"end": 7650,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7696,
									"end": 7697,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7692,
									"end": 7693,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 7684,
									"end": 7690,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 7680,
									"end": 7694,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7676,
									"end": 7698,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7670,
									"end": 7674,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 7663,
									"end": 7699,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7098,
									"end": 7709,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7098,
									"end": 7709,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7098,
									"end": 7709,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7061,
									"end": 7948,
									"name": "tag",
									"source": 13,
									"value": "186"
								},
								{
									"begin": 7061,
									"end": 7948,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7061,
									"end": 7948,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6651,
									"end": 7954,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6651,
									"end": 7954,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6651,
									"end": 7954,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6559,
									"end": 7954,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6559,
									"end": 7954,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6559,
									"end": 7954,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7960,
									"end": 8140,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 7960,
									"end": 8140,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8008,
									"end": 8085,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8005,
									"end": 8006,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7998,
									"end": 8086,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 8105,
									"end": 8109,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 8102,
									"end": 8103,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 8095,
									"end": 8110,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 8129,
									"end": 8133,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 8126,
									"end": 8127,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8119,
									"end": 8134,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 8146,
									"end": 8248,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 8146,
									"end": 8248,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8188,
									"end": 8196,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8235,
									"end": 8240,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8232,
									"end": 8233,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8228,
									"end": 8241,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 8207,
									"end": 8241,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8207,
									"end": 8241,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8146,
									"end": 8248,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8146,
									"end": 8248,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8146,
									"end": 8248,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8146,
									"end": 8248,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8254,
									"end": 9102,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 8254,
									"end": 9102,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8315,
									"end": 8320,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8322,
									"end": 8326,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 8346,
									"end": 8352,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8337,
									"end": 8352,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8337,
									"end": 8352,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8370,
									"end": 8375,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8361,
									"end": 8375,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8361,
									"end": 8375,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8384,
									"end": 9096,
									"name": "tag",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 8384,
									"end": 9096,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8405,
									"end": 8406,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8395,
									"end": 8403,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8392,
									"end": 8407,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8384,
									"end": 9096,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8384,
									"end": 9096,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "201"
								},
								{
									"begin": 8384,
									"end": 9096,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8500,
									"end": 8504,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 8495,
									"end": 8498,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8491,
									"end": 8505,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 8485,
									"end": 8489,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8482,
									"end": 8506,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8479,
									"end": 8529,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8479,
									"end": 8529,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "202"
								},
								{
									"begin": 8479,
									"end": 8529,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8509,
									"end": 8527,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "203"
								},
								{
									"begin": 8509,
									"end": 8527,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 8509,
									"end": 8527,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8509,
									"end": 8527,
									"name": "tag",
									"source": 13,
									"value": "203"
								},
								{
									"begin": 8509,
									"end": 8527,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8479,
									"end": 8529,
									"name": "tag",
									"source": 13,
									"value": "202"
								},
								{
									"begin": 8479,
									"end": 8529,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8559,
									"end": 8560,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8549,
									"end": 8557,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8545,
									"end": 8561,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8542,
									"end": 8993,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8542,
									"end": 8993,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "204"
								},
								{
									"begin": 8542,
									"end": 8993,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8974,
									"end": 8978,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 8967,
									"end": 8972,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8963,
									"end": 8979,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 8954,
									"end": 8979,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8954,
									"end": 8979,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8542,
									"end": 8993,
									"name": "tag",
									"source": 13,
									"value": "204"
								},
								{
									"begin": 8542,
									"end": 8993,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9024,
									"end": 9028,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 9018,
									"end": 9022,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9014,
									"end": 9029,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 9006,
									"end": 9029,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9006,
									"end": 9029,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9054,
									"end": 9086,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "205"
								},
								{
									"begin": 9077,
									"end": 9085,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 9054,
									"end": 9086,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 9054,
									"end": 9086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9054,
									"end": 9086,
									"name": "tag",
									"source": 13,
									"value": "205"
								},
								{
									"begin": 9054,
									"end": 9086,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9042,
									"end": 9086,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 9042,
									"end": 9086,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8384,
									"end": 9096,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 8384,
									"end": 9096,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8384,
									"end": 9096,
									"name": "tag",
									"source": 13,
									"value": "201"
								},
								{
									"begin": 8384,
									"end": 9096,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8254,
									"end": 9102,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 8254,
									"end": 9102,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8254,
									"end": 9102,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 8254,
									"end": 9102,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 8254,
									"end": 9102,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8254,
									"end": 9102,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8254,
									"end": 9102,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8254,
									"end": 9102,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9108,
									"end": 10181,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 9108,
									"end": 10181,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9162,
									"end": 9167,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9353,
									"end": 9361,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9343,
									"end": 9383,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "207"
								},
								{
									"begin": 9343,
									"end": 9383,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9374,
									"end": 9375,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 9365,
									"end": 9375,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9365,
									"end": 9375,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9376,
									"end": 9381,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 9376,
									"end": 9381,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9343,
									"end": 9383,
									"name": "tag",
									"source": 13,
									"value": "207"
								},
								{
									"begin": 9343,
									"end": 9383,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9402,
									"end": 9406,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9392,
									"end": 9428,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "208"
								},
								{
									"begin": 9392,
									"end": 9428,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9419,
									"end": 9420,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9410,
									"end": 9420,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9410,
									"end": 9420,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9421,
									"end": 9426,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 9421,
									"end": 9426,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9392,
									"end": 9428,
									"name": "tag",
									"source": 13,
									"value": "208"
								},
								{
									"begin": 9392,
									"end": 9428,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9488,
									"end": 9492,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9536,
									"end": 9537,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 9531,
									"end": 9558,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9531,
									"end": 9558,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 9531,
									"end": 9558,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 9531,
									"end": 9558,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9572,
									"end": 9573,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 9567,
									"end": 9758,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9567,
									"end": 9758,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 9567,
									"end": 9758,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "211"
								},
								{
									"begin": 9567,
									"end": 9758,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9481,
									"end": 9758,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "209"
								},
								{
									"begin": 9481,
									"end": 9758,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9531,
									"end": 9558,
									"name": "tag",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 9531,
									"end": 9558,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9549,
									"end": 9550,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 9540,
									"end": 9550,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9540,
									"end": 9550,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9551,
									"end": 9556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9551,
									"end": 9556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 9551,
									"end": 9556,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9567,
									"end": 9758,
									"name": "tag",
									"source": 13,
									"value": "211"
								},
								{
									"begin": 9567,
									"end": 9758,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9612,
									"end": 9615,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 9602,
									"end": 9610,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9599,
									"end": 9616,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9596,
									"end": 9639,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9596,
									"end": 9639,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "212"
								},
								{
									"begin": 9596,
									"end": 9639,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "213"
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 9619,
									"end": 9637,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "tag",
									"source": 13,
									"value": "213"
								},
								{
									"begin": 9619,
									"end": 9637,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9596,
									"end": 9639,
									"name": "tag",
									"source": 13,
									"value": "212"
								},
								{
									"begin": 9596,
									"end": 9639,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9668,
									"end": 9676,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9665,
									"end": 9666,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 9661,
									"end": 9677,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 9652,
									"end": 9677,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9652,
									"end": 9677,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9703,
									"end": 9706,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9696,
									"end": 9701,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9693,
									"end": 9707,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9690,
									"end": 9730,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9690,
									"end": 9730,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "214"
								},
								{
									"begin": 9690,
									"end": 9730,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9710,
									"end": 9728,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "215"
								},
								{
									"begin": 9710,
									"end": 9728,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 9710,
									"end": 9728,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9710,
									"end": 9728,
									"name": "tag",
									"source": 13,
									"value": "215"
								},
								{
									"begin": 9710,
									"end": 9728,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9690,
									"end": 9730,
									"name": "tag",
									"source": 13,
									"value": "214"
								},
								{
									"begin": 9690,
									"end": 9730,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9743,
									"end": 9748,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9743,
									"end": 9748,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 9743,
									"end": 9748,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9481,
									"end": 9758,
									"name": "tag",
									"source": 13,
									"value": "209"
								},
								{
									"begin": 9481,
									"end": 9758,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9481,
									"end": 9758,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9867,
									"end": 9869,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9857,
									"end": 9865,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9854,
									"end": 9870,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 9848,
									"end": 9851,
									"name": "PUSH",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 9842,
									"end": 9846,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9839,
									"end": 9852,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 9835,
									"end": 9871,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9817,
									"end": 9819,
									"name": "PUSH",
									"source": 13,
									"value": "4E"
								},
								{
									"begin": 9807,
									"end": 9815,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9804,
									"end": 9820,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 9799,
									"end": 9801,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 9793,
									"end": 9797,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9790,
									"end": 9802,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 9786,
									"end": 9821,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9770,
									"end": 9881,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 9767,
									"end": 10013,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9767,
									"end": 10013,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "216"
								},
								{
									"begin": 9767,
									"end": 10013,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9923,
									"end": 9931,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9917,
									"end": 9921,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9913,
									"end": 9932,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 9904,
									"end": 9932,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9904,
									"end": 9932,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9958,
									"end": 9961,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9951,
									"end": 9956,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9948,
									"end": 9962,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9945,
									"end": 9985,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9945,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "217"
								},
								{
									"begin": 9945,
									"end": 9985,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9965,
									"end": 9983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "218"
								},
								{
									"begin": 9965,
									"end": 9983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 9965,
									"end": 9983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9965,
									"end": 9983,
									"name": "tag",
									"source": 13,
									"value": "218"
								},
								{
									"begin": 9965,
									"end": 9983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9945,
									"end": 9985,
									"name": "tag",
									"source": 13,
									"value": "217"
								},
								{
									"begin": 9945,
									"end": 9985,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9998,
									"end": 10003,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 9998,
									"end": 10003,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9767,
									"end": 10013,
									"name": "tag",
									"source": 13,
									"value": "216"
								},
								{
									"begin": 9767,
									"end": 10013,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10038,
									"end": 10080,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "219"
								},
								{
									"begin": 10076,
									"end": 10079,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10066,
									"end": 10074,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10060,
									"end": 10064,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10057,
									"end": 10058,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 10038,
									"end": 10080,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 10038,
									"end": 10080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10038,
									"end": 10080,
									"name": "tag",
									"source": 13,
									"value": "219"
								},
								{
									"begin": 10038,
									"end": 10080,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10023,
									"end": 10080,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10023,
									"end": 10080,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10023,
									"end": 10080,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10023,
									"end": 10080,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10112,
									"end": 10116,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10107,
									"end": 10110,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10103,
									"end": 10117,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 10096,
									"end": 10101,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10093,
									"end": 10118,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 10090,
									"end": 10141,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 10090,
									"end": 10141,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "220"
								},
								{
									"begin": 10090,
									"end": 10141,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 10121,
									"end": 10139,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "221"
								},
								{
									"begin": 10121,
									"end": 10139,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 10121,
									"end": 10139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10121,
									"end": 10139,
									"name": "tag",
									"source": 13,
									"value": "221"
								},
								{
									"begin": 10121,
									"end": 10139,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10090,
									"end": 10141,
									"name": "tag",
									"source": 13,
									"value": "220"
								},
								{
									"begin": 10090,
									"end": 10141,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10170,
									"end": 10174,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10163,
									"end": 10168,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10159,
									"end": 10175,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 10150,
									"end": 10175,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10150,
									"end": 10175,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9108,
									"end": 10181,
									"name": "tag",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 9108,
									"end": 10181,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9108,
									"end": 10181,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 9108,
									"end": 10181,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9108,
									"end": 10181,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9108,
									"end": 10181,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9108,
									"end": 10181,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9108,
									"end": 10181,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10187,
									"end": 10273,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 10187,
									"end": 10273,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10222,
									"end": 10229,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10262,
									"end": 10266,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 10255,
									"end": 10260,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10251,
									"end": 10267,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 10240,
									"end": 10267,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10240,
									"end": 10267,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10187,
									"end": 10273,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10187,
									"end": 10273,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10187,
									"end": 10273,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10187,
									"end": 10273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10279,
									"end": 10560,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 10279,
									"end": 10560,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10337,
									"end": 10342,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10361,
									"end": 10384,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "224"
								},
								{
									"begin": 10379,
									"end": 10383,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10361,
									"end": 10384,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 10361,
									"end": 10384,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10361,
									"end": 10384,
									"name": "tag",
									"source": 13,
									"value": "224"
								},
								{
									"begin": 10361,
									"end": 10384,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10353,
									"end": 10384,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10353,
									"end": 10384,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10405,
									"end": 10430,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "225"
								},
								{
									"begin": 10421,
									"end": 10429,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10405,
									"end": 10430,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 10405,
									"end": 10430,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10405,
									"end": 10430,
									"name": "tag",
									"source": 13,
									"value": "225"
								},
								{
									"begin": 10405,
									"end": 10430,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10393,
									"end": 10430,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10393,
									"end": 10430,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10449,
									"end": 10553,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "226"
								},
								{
									"begin": 10486,
									"end": 10552,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10476,
									"end": 10484,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10470,
									"end": 10474,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10449,
									"end": 10553,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 10449,
									"end": 10553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10449,
									"end": 10553,
									"name": "tag",
									"source": 13,
									"value": "226"
								},
								{
									"begin": 10449,
									"end": 10553,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10440,
									"end": 10553,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10440,
									"end": 10553,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10279,
									"end": 10560,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10279,
									"end": 10560,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10279,
									"end": 10560,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10279,
									"end": 10560,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10279,
									"end": 10560,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10566,
									"end": 10746,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 10566,
									"end": 10746,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10614,
									"end": 10691,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10611,
									"end": 10612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10604,
									"end": 10692,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 10711,
									"end": 10715,
									"name": "PUSH",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 10708,
									"end": 10709,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 10701,
									"end": 10716,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 10735,
									"end": 10739,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 10732,
									"end": 10733,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10725,
									"end": 10740,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 10752,
									"end": 10937,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 10752,
									"end": 10937,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10792,
									"end": 10793,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10809,
									"end": 10829,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "229"
								},
								{
									"begin": 10827,
									"end": 10828,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10809,
									"end": 10829,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 10809,
									"end": 10829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10809,
									"end": 10829,
									"name": "tag",
									"source": 13,
									"value": "229"
								},
								{
									"begin": 10809,
									"end": 10829,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10804,
									"end": 10829,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10804,
									"end": 10829,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10843,
									"end": 10863,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "230"
								},
								{
									"begin": 10861,
									"end": 10862,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10843,
									"end": 10863,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 10843,
									"end": 10863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10843,
									"end": 10863,
									"name": "tag",
									"source": 13,
									"value": "230"
								},
								{
									"begin": 10843,
									"end": 10863,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10838,
									"end": 10863,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10838,
									"end": 10863,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10882,
									"end": 10883,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10872,
									"end": 10907,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "231"
								},
								{
									"begin": 10872,
									"end": 10907,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 10887,
									"end": 10905,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "232"
								},
								{
									"begin": 10887,
									"end": 10905,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 10887,
									"end": 10905,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10887,
									"end": 10905,
									"name": "tag",
									"source": 13,
									"value": "232"
								},
								{
									"begin": 10887,
									"end": 10905,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10872,
									"end": 10907,
									"name": "tag",
									"source": 13,
									"value": "231"
								},
								{
									"begin": 10872,
									"end": 10907,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10929,
									"end": 10930,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10926,
									"end": 10927,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10922,
									"end": 10931,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 10917,
									"end": 10931,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10917,
									"end": 10931,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10752,
									"end": 10937,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10752,
									"end": 10937,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10752,
									"end": 10937,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10752,
									"end": 10937,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10752,
									"end": 10937,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10943,
									"end": 11353,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 10943,
									"end": 11353,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10983,
									"end": 10990,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11006,
									"end": 11026,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "234"
								},
								{
									"begin": 11024,
									"end": 11025,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11006,
									"end": 11026,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 11006,
									"end": 11026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11006,
									"end": 11026,
									"name": "tag",
									"source": 13,
									"value": "234"
								},
								{
									"begin": 11006,
									"end": 11026,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11001,
									"end": 11026,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11001,
									"end": 11026,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11040,
									"end": 11060,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "235"
								},
								{
									"begin": 11058,
									"end": 11059,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11040,
									"end": 11060,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 11040,
									"end": 11060,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11040,
									"end": 11060,
									"name": "tag",
									"source": 13,
									"value": "235"
								},
								{
									"begin": 11040,
									"end": 11060,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11035,
									"end": 11060,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 11035,
									"end": 11060,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11095,
									"end": 11096,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11092,
									"end": 11093,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11088,
									"end": 11097,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 11117,
									"end": 11147,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "236"
								},
								{
									"begin": 11135,
									"end": 11146,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11117,
									"end": 11147,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 11117,
									"end": 11147,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11117,
									"end": 11147,
									"name": "tag",
									"source": 13,
									"value": "236"
								},
								{
									"begin": 11117,
									"end": 11147,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11106,
									"end": 11147,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11106,
									"end": 11147,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11296,
									"end": 11297,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11287,
									"end": 11294,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11283,
									"end": 11298,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 11280,
									"end": 11281,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 11277,
									"end": 11299,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 11257,
									"end": 11258,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11250,
									"end": 11259,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 11230,
									"end": 11313,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 11207,
									"end": 11346,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "237"
								},
								{
									"begin": 11207,
									"end": 11346,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 11326,
									"end": 11344,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "238"
								},
								{
									"begin": 11326,
									"end": 11344,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 11326,
									"end": 11344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11326,
									"end": 11344,
									"name": "tag",
									"source": 13,
									"value": "238"
								},
								{
									"begin": 11326,
									"end": 11344,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11207,
									"end": 11346,
									"name": "tag",
									"source": 13,
									"value": "237"
								},
								{
									"begin": 11207,
									"end": 11346,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10991,
									"end": 11353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10943,
									"end": 11353,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10943,
									"end": 11353,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10943,
									"end": 11353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10943,
									"end": 11353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10943,
									"end": 11353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11359,
									"end": 11477,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 11359,
									"end": 11477,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11446,
									"end": 11470,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "240"
								},
								{
									"begin": 11464,
									"end": 11469,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11446,
									"end": 11470,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 11446,
									"end": 11470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11446,
									"end": 11470,
									"name": "tag",
									"source": 13,
									"value": "240"
								},
								{
									"begin": 11446,
									"end": 11470,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11441,
									"end": 11444,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11434,
									"end": 11471,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 11359,
									"end": 11477,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11359,
									"end": 11477,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11359,
									"end": 11477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11483,
									"end": 11705,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 11483,
									"end": 11705,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11576,
									"end": 11580,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11614,
									"end": 11616,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 11603,
									"end": 11612,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11599,
									"end": 11617,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11591,
									"end": 11617,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11591,
									"end": 11617,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11627,
									"end": 11698,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "242"
								},
								{
									"begin": 11695,
									"end": 11696,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11684,
									"end": 11693,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11680,
									"end": 11697,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11671,
									"end": 11677,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 11627,
									"end": 11698,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 11627,
									"end": 11698,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11627,
									"end": 11698,
									"name": "tag",
									"source": 13,
									"value": "242"
								},
								{
									"begin": 11627,
									"end": 11698,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11483,
									"end": 11705,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 11483,
									"end": 11705,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11483,
									"end": 11705,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11483,
									"end": 11705,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11483,
									"end": 11705,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11711,
									"end": 11902,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 11711,
									"end": 11902,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11751,
									"end": 11754,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11770,
									"end": 11790,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "244"
								},
								{
									"begin": 11788,
									"end": 11789,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11770,
									"end": 11790,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 11770,
									"end": 11790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11770,
									"end": 11790,
									"name": "tag",
									"source": 13,
									"value": "244"
								},
								{
									"begin": 11770,
									"end": 11790,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11765,
									"end": 11790,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11765,
									"end": 11790,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11804,
									"end": 11824,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "245"
								},
								{
									"begin": 11822,
									"end": 11823,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11804,
									"end": 11824,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 11804,
									"end": 11824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11804,
									"end": 11824,
									"name": "tag",
									"source": 13,
									"value": "245"
								},
								{
									"begin": 11804,
									"end": 11824,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11799,
									"end": 11824,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 11799,
									"end": 11824,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11847,
									"end": 11848,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11844,
									"end": 11845,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11840,
									"end": 11849,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11833,
									"end": 11849,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11833,
									"end": 11849,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11868,
									"end": 11871,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 11865,
									"end": 11866,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11862,
									"end": 11872,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 11859,
									"end": 11895,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 11859,
									"end": 11895,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "246"
								},
								{
									"begin": 11859,
									"end": 11895,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 11875,
									"end": 11893,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "247"
								},
								{
									"begin": 11875,
									"end": 11893,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 11875,
									"end": 11893,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11875,
									"end": 11893,
									"name": "tag",
									"source": 13,
									"value": "247"
								},
								{
									"begin": 11875,
									"end": 11893,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11859,
									"end": 11895,
									"name": "tag",
									"source": 13,
									"value": "246"
								},
								{
									"begin": 11859,
									"end": 11895,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11711,
									"end": 11902,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 11711,
									"end": 11902,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11711,
									"end": 11902,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11711,
									"end": 11902,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11711,
									"end": 11902,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11908,
									"end": 12026,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 11908,
									"end": 12026,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11995,
									"end": 12019,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "249"
								},
								{
									"begin": 12013,
									"end": 12018,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11995,
									"end": 12019,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 11995,
									"end": 12019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11995,
									"end": 12019,
									"name": "tag",
									"source": 13,
									"value": "249"
								},
								{
									"begin": 11995,
									"end": 12019,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11990,
									"end": 11993,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11983,
									"end": 12020,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 11908,
									"end": 12026,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11908,
									"end": 12026,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11908,
									"end": 12026,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12032,
									"end": 12474,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 12032,
									"end": 12474,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12181,
									"end": 12185,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12219,
									"end": 12221,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 12208,
									"end": 12217,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12204,
									"end": 12222,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12196,
									"end": 12222,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 12196,
									"end": 12222,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12232,
									"end": 12303,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "251"
								},
								{
									"begin": 12300,
									"end": 12301,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12289,
									"end": 12298,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 12285,
									"end": 12302,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12276,
									"end": 12282,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 12232,
									"end": 12303,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 12232,
									"end": 12303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12232,
									"end": 12303,
									"name": "tag",
									"source": 13,
									"value": "251"
								},
								{
									"begin": 12232,
									"end": 12303,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12313,
									"end": 12385,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "252"
								},
								{
									"begin": 12381,
									"end": 12383,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 12370,
									"end": 12379,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 12366,
									"end": 12384,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12357,
									"end": 12363,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 12313,
									"end": 12385,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 12313,
									"end": 12385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12313,
									"end": 12385,
									"name": "tag",
									"source": 13,
									"value": "252"
								},
								{
									"begin": 12313,
									"end": 12385,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12395,
									"end": 12467,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "253"
								},
								{
									"begin": 12463,
									"end": 12465,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 12452,
									"end": 12461,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 12448,
									"end": 12466,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12439,
									"end": 12445,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 12395,
									"end": 12467,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 12395,
									"end": 12467,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12395,
									"end": 12467,
									"name": "tag",
									"source": 13,
									"value": "253"
								},
								{
									"begin": 12395,
									"end": 12467,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12032,
									"end": 12474,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 12032,
									"end": 12474,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 12032,
									"end": 12474,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12032,
									"end": 12474,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12032,
									"end": 12474,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12032,
									"end": 12474,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12032,
									"end": 12474,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12480,
									"end": 12702,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 12480,
									"end": 12702,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12573,
									"end": 12577,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12611,
									"end": 12613,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 12600,
									"end": 12609,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12596,
									"end": 12614,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12588,
									"end": 12614,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 12588,
									"end": 12614,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12624,
									"end": 12695,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "255"
								},
								{
									"begin": 12692,
									"end": 12693,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12681,
									"end": 12690,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 12677,
									"end": 12694,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12668,
									"end": 12674,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 12624,
									"end": 12695,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 12624,
									"end": 12695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12624,
									"end": 12695,
									"name": "tag",
									"source": 13,
									"value": "255"
								},
								{
									"begin": 12624,
									"end": 12695,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12480,
									"end": 12702,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 12480,
									"end": 12702,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 12480,
									"end": 12702,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12480,
									"end": 12702,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12480,
									"end": 12702,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1427"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1425"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1423"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 3232,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e1d951ad24e5b242d59fbe09145cfe04ae4ea37f3a54f755a9e941cd3b583f7464736f6c634300081a0033",
									".code": [
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "79CC6790"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "A920260B"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "E091A39B"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "EC8EBA14"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "F57D283E"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "A920260B"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "CA19C11C"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "CED0550F"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "992642E5"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "79CC6790"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "8456CB59"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "904835C4"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "91D14854"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "2A0ACC6A"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "3F4BA83A"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "3F4BA83A"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "42966C68"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "5C975ABB"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "2A0ACC6A"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "10002DBD"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "10002DBD"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 373,
											"end": 3232,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 1392,
											"end": 1665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1392,
											"end": 1665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 462,
											"end": 512,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 462,
											"end": 512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 462,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 462,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 462,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 462,
											"end": 512,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 462,
											"end": 512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 462,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 512,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 462,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 462,
											"end": 512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 462,
											"end": 512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 462,
											"end": 512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 462,
											"end": 512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 462,
											"end": 512,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 462,
											"end": 512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 462,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 512,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 462,
											"end": 512,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 462,
											"end": 512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 462,
											"end": 512,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 462,
											"end": 512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 462,
											"end": 512,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1387,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1318,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1318,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1318,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1318,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1318,
											"end": 1387,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1318,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1318,
											"end": 1387,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1312,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 1247,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1247,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 1247,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 1247,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1247,
											"end": 1312,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 1247,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1247,
											"end": 1312,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 1872,
											"end": 2277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 1872,
											"end": 2277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 586,
											"end": 621,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 586,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 586,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 670,
											"end": 703,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 670,
											"end": 703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 670,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 670,
											"end": 703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 670,
											"end": 703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 703,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 670,
											"end": 703,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 670,
											"end": 703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 670,
											"end": 703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 703,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2614,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2614,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2282,
											"end": 2608,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 2282,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2282,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 2282,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 2282,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2282,
											"end": 2608,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 2282,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2282,
											"end": 2608,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 518,
											"end": 580,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 518,
											"end": 580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 518,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 518,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 518,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 518,
											"end": 580,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 518,
											"end": 580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 518,
											"end": 580,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 518,
											"end": 580,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 518,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 518,
											"end": 580,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 518,
											"end": 580,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 518,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 518,
											"end": 580,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 518,
											"end": 580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 518,
											"end": 580,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 518,
											"end": 580,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 518,
											"end": 580,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 580,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 518,
											"end": 580,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 518,
											"end": 580,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 518,
											"end": 580,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 627,
											"end": 664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 627,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 627,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 627,
											"end": 664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 664,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 627,
											"end": 664,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 627,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 627,
											"end": 664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 664,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1671,
											"end": 1867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 1671,
											"end": 1867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1462,
											"end": 1472,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1423"
										},
										{
											"begin": 1455,
											"end": 1486,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1486,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1486,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 1487,
											"end": 1497,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1525,
											"end": 1533,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1427"
										},
										{
											"begin": 1512,
											"end": 1524,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1512,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 1512,
											"end": 1533,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1512,
											"end": 1533,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1512,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 1512,
											"end": 1533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1512,
											"end": 1533,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 1512,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 1455,
											"end": 1534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1455,
											"end": 1534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 1455,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1447,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1447,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1589,
											"end": 1593,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 1604,
											"end": 1614,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1615,
											"end": 1627,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 1583,
											"end": 1628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1583,
											"end": 1628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 1575,
											"end": 1658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 1575,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1392,
											"end": 1665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 462,
											"end": 512,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 462,
											"end": 512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 494,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 462,
											"end": 512,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 462,
											"end": 512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1387,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1318,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 494,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1370,
											"end": 1380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 1370,
											"end": 1378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 1370,
											"end": 1380,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1370,
											"end": 1380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 1370,
											"end": 1380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1318,
											"end": 1387,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1318,
											"end": 1387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1312,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 1247,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 494,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1305,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 1297,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 1297,
											"end": 1305,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1297,
											"end": 1305,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 1297,
											"end": 1305,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1247,
											"end": 1312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1247,
											"end": 1312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 494,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2031,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2024,
											"end": 2038,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2020,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2038,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 1993,
											"end": 2084,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 1993,
											"end": 2084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2271,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 2094,
											"end": 2271,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2130,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2137,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2114,
											"end": 2115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2114,
											"end": 2137,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2271,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 2094,
											"end": 2271,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2173,
											"end": 2185,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1425"
										},
										{
											"begin": 2166,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2166,
											"end": 2199,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 2200,
											"end": 2210,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2224,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2225,
											"end": 2226,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 2212,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2236,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2237,
											"end": 2238,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 2229,
											"end": 2239,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2239,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 2166,
											"end": 2240,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2240,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 2166,
											"end": 2240,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 2166,
											"end": 2240,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 2158,
											"end": 2260,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 2158,
											"end": 2260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2142,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2142,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2139,
											"end": 2142,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2142,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2142,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2142,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 2094,
											"end": 2271,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2271,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 2094,
											"end": 2271,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2094,
											"end": 2271,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 2277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 586,
											"end": 621,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1423"
										},
										{
											"begin": 586,
											"end": 621,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 586,
											"end": 621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 670,
											"end": 703,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 670,
											"end": 703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1427"
										},
										{
											"begin": 670,
											"end": 703,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 670,
											"end": 703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2699,
											"end": 2700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2696,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2684,
											"end": 2700,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 2676,
											"end": 2726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 2676,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2754,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2768,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2744,
											"end": 2768,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2768,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 2769,
											"end": 2779,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2788,
											"end": 2792,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2806,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 2744,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 2744,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 2744,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 2736,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 2736,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2872,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1423"
										},
										{
											"begin": 2855,
											"end": 2882,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2855,
											"end": 2882,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2882,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 2883,
											"end": 2893,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2907,
											"end": 2915,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1427"
										},
										{
											"begin": 2894,
											"end": 2906,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2894,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 2894,
											"end": 2915,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2894,
											"end": 2915,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2894,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 2894,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2894,
											"end": 2915,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 2894,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 2855,
											"end": 2916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 2855,
											"end": 2916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 2855,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 2847,
											"end": 2947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2614,
											"end": 2954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2282,
											"end": 2608,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 2282,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 556,
											"end": 580,
											"name": "PUSH",
											"source": 12,
											"value": "F877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2397,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1423"
										},
										{
											"begin": 2380,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2380,
											"end": 2408,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 2417,
											"end": 2421,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 2380,
											"end": 2423,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2423,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 2380,
											"end": 2423,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 2380,
											"end": 2423,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2350,
											"end": 2423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2350,
											"end": 2423,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2463,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2460,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2464,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 2433,
											"end": 2496,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 2433,
											"end": 2496,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2524,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2514,
											"end": 2534,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 2535,
											"end": 2545,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2546,
											"end": 2565,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 2514,
											"end": 2566,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2566,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 2514,
											"end": 2566,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2514,
											"end": 2566,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 2506,
											"end": 2601,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2506,
											"end": 2601,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2340,
											"end": 2608,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2282,
											"end": 2608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2282,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 518,
											"end": 580,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 518,
											"end": 580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 556,
											"end": 580,
											"name": "PUSH",
											"source": 12,
											"value": "F877234297EF562D54F0328F892ACFC1D6C1E44CA89F02E3A2C2A4736F6095B7"
										},
										{
											"begin": 518,
											"end": 580,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 518,
											"end": 580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 627,
											"end": 664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1425"
										},
										{
											"begin": 627,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 627,
											"end": 664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 494,
											"end": 512,
											"name": "PUSH",
											"source": 12,
											"value": "DF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1782,
											"end": 1794,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1425"
										},
										{
											"begin": 1775,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1775,
											"end": 1808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 1809,
											"end": 1821,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1425"
										},
										{
											"begin": 1822,
											"end": 1833,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1834,
											"end": 1840,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 1775,
											"end": 1841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1841,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1775,
											"end": 1841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 1775,
											"end": 1841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 1767,
											"end": 1860,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 1767,
											"end": 1860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 2807,
											"end": 2817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2807,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2798,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 2558,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2551,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3230,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 3065,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3193,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 3207,
											"end": 3211,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3215,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3193,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 3193,
											"end": 3223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3193,
											"end": 3223,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 3193,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2265,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2067,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 1234,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1242,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1244,
											"end": 1249,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 1220,
											"end": 1250,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4161,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4204,
											"end": 4206,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4201,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4183,
											"end": 4190,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4202,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4207,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 4210,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 4210,
											"end": 4289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4289,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 4210,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 4172,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4330,
											"end": 4331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 4400,
											"end": 4407,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4391,
											"end": 4397,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4380,
											"end": 4389,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4376,
											"end": 4398,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 4355,
											"end": 4408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 4355,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4345,
											"end": 4408,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4345,
											"end": 4408,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4418,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 4536,
											"end": 4541,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 4518,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 4518,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4513,
											"end": 4516,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4543,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4648,
											"end": 4652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4675,
											"end": 4684,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 4767,
											"end": 4768,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4756,
											"end": 4765,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4752,
											"end": 4769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 4699,
											"end": 4770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 4699,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5445,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5479,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5479,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 5582,
											"end": 5587,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 5564,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5557,
											"end": 5562,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5589,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5601,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5605,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5681,
											"end": 5710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5681,
											"end": 5710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 5746,
											"end": 5751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 5719,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5829,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 5874,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5860,
											"end": 5869,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5858,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5847,
											"end": 5870,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 5878,
											"end": 5957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5998,
											"end": 5999,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 6068,
											"end": 6075,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6059,
											"end": 6065,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6048,
											"end": 6057,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6044,
											"end": 6066,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 6023,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6076,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5969,
											"end": 6086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 6093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 6204,
											"end": 6209,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 6186,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6181,
											"end": 6184,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6099,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6356,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6343,
											"end": 6352,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6331,
											"end": 6357,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6331,
											"end": 6357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 6435,
											"end": 6436,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6420,
											"end": 6437,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 6367,
											"end": 6438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6519,
											"end": 6525,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6576,
											"end": 6578,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6564,
											"end": 6573,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6555,
											"end": 6562,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6551,
											"end": 6574,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6547,
											"end": 6579,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 6582,
											"end": 6661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6702,
											"end": 6703,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 6772,
											"end": 6779,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6763,
											"end": 6769,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6752,
											"end": 6761,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6748,
											"end": 6770,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 6727,
											"end": 6780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6780,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6673,
											"end": 6790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6829,
											"end": 6831,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 6900,
											"end": 6907,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6880,
											"end": 6889,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6876,
											"end": 6898,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 6855,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6800,
											"end": 6918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7010,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6999,
											"end": 7004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6995,
											"end": 7011,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 7011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 7011,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 7017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 7122,
											"end": 7127,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 7106,
											"end": 7128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7101,
											"end": 7104,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7094,
											"end": 7129,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7230,
											"end": 7234,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7268,
											"end": 7270,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7257,
											"end": 7266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7253,
											"end": 7271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7343,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7330,
											"end": 7347,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 7281,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7420,
											"end": 7426,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7471,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7457,
											"end": 7466,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7448,
											"end": 7455,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7467,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7440,
											"end": 7472,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 7475,
											"end": 7554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 7475,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 7437,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7595,
											"end": 7596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 7665,
											"end": 7672,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7656,
											"end": 7662,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7645,
											"end": 7654,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7641,
											"end": 7663,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 7620,
											"end": 7673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 7620,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7566,
											"end": 7683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 7813,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 7696,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7805,
											"end": 7806,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7802,
											"end": 7803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7795,
											"end": 7807,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7819,
											"end": 7999,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 7819,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7867,
											"end": 7944,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7857,
											"end": 7945,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7964,
											"end": 7968,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 7961,
											"end": 7962,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7954,
											"end": 7969,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7988,
											"end": 7992,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7985,
											"end": 7986,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7978,
											"end": 7993,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8005,
											"end": 8286,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 8005,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 8110,
											"end": 8114,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 8088,
											"end": 8115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8115,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 8088,
											"end": 8115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8080,
											"end": 8086,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8076,
											"end": 8116,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8218,
											"end": 8224,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8206,
											"end": 8216,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8203,
											"end": 8225,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8182,
											"end": 8200,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8170,
											"end": 8180,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8167,
											"end": 8201,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8164,
											"end": 8226,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8161,
											"end": 8249,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8161,
											"end": 8249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 8161,
											"end": 8249,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 8229,
											"end": 8247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 8229,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8161,
											"end": 8249,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 8161,
											"end": 8249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8269,
											"end": 8279,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8265,
											"end": 8267,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8258,
											"end": 8280,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8048,
											"end": 8286,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8005,
											"end": 8286,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8005,
											"end": 8286,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8005,
											"end": 8286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8292,
											"end": 8421,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 8292,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8326,
											"end": 8332,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8353,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 8353,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 8353,
											"end": 8373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8353,
											"end": 8373,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 8353,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8343,
											"end": 8373,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8343,
											"end": 8373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8382,
											"end": 8415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 8410,
											"end": 8414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8402,
											"end": 8408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8382,
											"end": 8415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 8382,
											"end": 8415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8382,
											"end": 8415,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 8382,
											"end": 8415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8292,
											"end": 8421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8292,
											"end": 8421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8292,
											"end": 8421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8292,
											"end": 8421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8738,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 8427,
											"end": 8738,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8504,
											"end": 8508,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8586,
											"end": 8592,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8583,
											"end": 8613,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8580,
											"end": 8636,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8580,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 8580,
											"end": 8636,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 8616,
											"end": 8634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8580,
											"end": 8636,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 8580,
											"end": 8636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8666,
											"end": 8670,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8658,
											"end": 8664,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8654,
											"end": 8671,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8646,
											"end": 8671,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8646,
											"end": 8671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8726,
											"end": 8730,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8720,
											"end": 8724,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8716,
											"end": 8731,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8708,
											"end": 8731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8708,
											"end": 8731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8738,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8738,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8744,
											"end": 8861,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 8744,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8853,
											"end": 8854,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8851,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8843,
											"end": 8855,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9594,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 8884,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8980,
											"end": 8985,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9005,
											"end": 9086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 9021,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 9078,
											"end": 9084,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 9021,
											"end": 9085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9085,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 9021,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9005,
											"end": 9086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 9005,
											"end": 9086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9005,
											"end": 9086,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 9005,
											"end": 9086,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8996,
											"end": 9086,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8996,
											"end": 9086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9106,
											"end": 9111,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9135,
											"end": 9141,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9128,
											"end": 9133,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9121,
											"end": 9142,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9169,
											"end": 9173,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9162,
											"end": 9167,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9158,
											"end": 9174,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9151,
											"end": 9174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9151,
											"end": 9174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9222,
											"end": 9226,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9214,
											"end": 9220,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9210,
											"end": 9227,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 9202,
											"end": 9208,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9198,
											"end": 9228,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9251,
											"end": 9254,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9243,
											"end": 9249,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9240,
											"end": 9255,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9237,
											"end": 9359,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9237,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 9237,
											"end": 9359,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9270,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 9270,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 9270,
											"end": 9349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9270,
											"end": 9349,
											"name": "tag",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 9270,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9237,
											"end": 9359,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 9237,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9385,
											"end": 9391,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9408,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9397,
											"end": 9400,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9394,
											"end": 9409,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9477,
											"end": 9480,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9506,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 9539,
											"end": 9542,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9506,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 9506,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9506,
											"end": 9543,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 9506,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9501,
											"end": 9504,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9494,
											"end": 9544,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9573,
											"end": 9577,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9568,
											"end": 9571,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9564,
											"end": 9578,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9557,
											"end": 9578,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9557,
											"end": 9578,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9444,
											"end": 9588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9428,
											"end": 9432,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9423,
											"end": 9426,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9412,
											"end": 9433,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9412,
											"end": 9433,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 9368,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9372,
											"end": 9393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8986,
											"end": 9594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8986,
											"end": 9594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9594,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9594,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9987,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 9617,
											"end": 9987,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9688,
											"end": 9693,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9737,
											"end": 9740,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9730,
											"end": 9734,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 9722,
											"end": 9728,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9718,
											"end": 9735,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9714,
											"end": 9741,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 9826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 9704,
											"end": 9826,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9745,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 9745,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 9745,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9745,
											"end": 9824,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 9745,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 9826,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 9704,
											"end": 9826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9862,
											"end": 9868,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9887,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 9977,
											"end": 9980,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 9975,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9962,
											"end": 9966,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 9960,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9950,
											"end": 9967,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9887,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 9887,
											"end": 9981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9887,
											"end": 9981,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 9887,
											"end": 9981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9878,
											"end": 9981,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9878,
											"end": 9981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9694,
											"end": 9987,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9987,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9987,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9987,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9987,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9993,
											"end": 10304,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 9993,
											"end": 10304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10070,
											"end": 10074,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10160,
											"end": 10178,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10152,
											"end": 10158,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10149,
											"end": 10179,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10146,
											"end": 10202,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10146,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 10146,
											"end": 10202,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 10182,
											"end": 10200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10146,
											"end": 10202,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 10146,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10232,
											"end": 10236,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10224,
											"end": 10230,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10220,
											"end": 10237,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 10212,
											"end": 10237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10212,
											"end": 10237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10292,
											"end": 10296,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10286,
											"end": 10290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10282,
											"end": 10297,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10274,
											"end": 10297,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10274,
											"end": 10297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9993,
											"end": 10304,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9993,
											"end": 10304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9993,
											"end": 10304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9993,
											"end": 10304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 11037,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 10327,
											"end": 11037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10423,
											"end": 10428,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10448,
											"end": 10529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 10464,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 10521,
											"end": 10527,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10464,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 10464,
											"end": 10528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10464,
											"end": 10528,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 10464,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10448,
											"end": 10529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 10448,
											"end": 10529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10448,
											"end": 10529,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 10448,
											"end": 10529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10439,
											"end": 10529,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10439,
											"end": 10529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10549,
											"end": 10554,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10578,
											"end": 10584,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10564,
											"end": 10585,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10612,
											"end": 10616,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10605,
											"end": 10610,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10601,
											"end": 10617,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10594,
											"end": 10617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10594,
											"end": 10617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10665,
											"end": 10669,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10657,
											"end": 10663,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 10670,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 10645,
											"end": 10651,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10641,
											"end": 10671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10694,
											"end": 10697,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10686,
											"end": 10692,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10683,
											"end": 10698,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10680,
											"end": 10802,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10680,
											"end": 10802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 10680,
											"end": 10802,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 10713,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 10713,
											"end": 10792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 10792,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 10713,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10680,
											"end": 10802,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 10680,
											"end": 10802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10828,
											"end": 10834,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10845,
											"end": 10851,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10840,
											"end": 10843,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10837,
											"end": 10852,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10920,
											"end": 10923,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10949,
											"end": 10986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 10982,
											"end": 10985,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10970,
											"end": 10980,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10949,
											"end": 10986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 10949,
											"end": 10986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10949,
											"end": 10986,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 10949,
											"end": 10986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10944,
											"end": 10947,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 10987,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11016,
											"end": 11020,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11011,
											"end": 11014,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11007,
											"end": 11021,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11000,
											"end": 11021,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11000,
											"end": 11021,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10887,
											"end": 11031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10871,
											"end": 10875,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10866,
											"end": 10869,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10862,
											"end": 10876,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10855,
											"end": 10876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 10811,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10815,
											"end": 10836,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 11037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 11037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 11037,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 11037,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 11037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 11037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 11037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 11037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11060,
											"end": 11430,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 11060,
											"end": 11430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11131,
											"end": 11136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11180,
											"end": 11183,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11173,
											"end": 11177,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11165,
											"end": 11171,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11178,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11157,
											"end": 11184,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11147,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 11147,
											"end": 11269,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11188,
											"end": 11267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 11188,
											"end": 11267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 11188,
											"end": 11267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11188,
											"end": 11267,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 11188,
											"end": 11267,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11147,
											"end": 11269,
											"name": "tag",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 11147,
											"end": 11269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11305,
											"end": 11311,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11292,
											"end": 11312,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11330,
											"end": 11424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 11420,
											"end": 11423,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11412,
											"end": 11418,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11405,
											"end": 11409,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11397,
											"end": 11403,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11410,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11330,
											"end": 11424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 11330,
											"end": 11424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11330,
											"end": 11424,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 11330,
											"end": 11424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11321,
											"end": 11424,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11321,
											"end": 11424,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11060,
											"end": 11430,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11060,
											"end": 11430,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11060,
											"end": 11430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11060,
											"end": 11430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11060,
											"end": 11430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 12330,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 11436,
											"end": 12330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11554,
											"end": 11560,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11562,
											"end": 11568,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11611,
											"end": 11613,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11599,
											"end": 11608,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11590,
											"end": 11597,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11586,
											"end": 11609,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11582,
											"end": 11614,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11579,
											"end": 11698,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11579,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 11579,
											"end": 11698,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11617,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 11617,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 11617,
											"end": 11696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11617,
											"end": 11696,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 11617,
											"end": 11696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11579,
											"end": 11698,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 11579,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11765,
											"end": 11766,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11754,
											"end": 11763,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11750,
											"end": 11767,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11737,
											"end": 11768,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11795,
											"end": 11813,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11787,
											"end": 11793,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11784,
											"end": 11814,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11781,
											"end": 11898,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11781,
											"end": 11898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 11781,
											"end": 11898,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11817,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 11817,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 11817,
											"end": 11896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11817,
											"end": 11896,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 11817,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11781,
											"end": 11898,
											"name": "tag",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 11781,
											"end": 11898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11922,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 11992,
											"end": 11999,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11983,
											"end": 11989,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11972,
											"end": 11981,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11968,
											"end": 11990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11922,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 11922,
											"end": 12000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11922,
											"end": 12000,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 11922,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11912,
											"end": 12000,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11912,
											"end": 12000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11708,
											"end": 12010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12077,
											"end": 12079,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12066,
											"end": 12075,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12062,
											"end": 12080,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12049,
											"end": 12081,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 12108,
											"end": 12126,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12100,
											"end": 12106,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12097,
											"end": 12127,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12211,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 12094,
											"end": 12211,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12130,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 12130,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 12130,
											"end": 12209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12130,
											"end": 12209,
											"name": "tag",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 12130,
											"end": 12209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12211,
											"name": "tag",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 12094,
											"end": 12211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12235,
											"end": 12313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 12305,
											"end": 12312,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12296,
											"end": 12302,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12285,
											"end": 12294,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12281,
											"end": 12303,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12235,
											"end": 12313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 12235,
											"end": 12313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12235,
											"end": 12313,
											"name": "tag",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 12235,
											"end": 12313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12225,
											"end": 12313,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12225,
											"end": 12313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12020,
											"end": 12323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 12330,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 12330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 12330,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 12330,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 12330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11436,
											"end": 12330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12336,
											"end": 12454,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 12336,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12423,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 12441,
											"end": 12446,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12423,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 12423,
											"end": 12447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12423,
											"end": 12447,
											"name": "tag",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 12423,
											"end": 12447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12418,
											"end": 12421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12411,
											"end": 12448,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12336,
											"end": 12454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12336,
											"end": 12454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12336,
											"end": 12454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12682,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 12460,
											"end": 12682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12553,
											"end": 12557,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12591,
											"end": 12593,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12580,
											"end": 12589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12576,
											"end": 12594,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12594,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12568,
											"end": 12594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12604,
											"end": 12675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 12672,
											"end": 12673,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12661,
											"end": 12670,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12674,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12648,
											"end": 12654,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12604,
											"end": 12675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 12604,
											"end": 12675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12604,
											"end": 12675,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 12604,
											"end": 12675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12682,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12682,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12756,
											"end": 12762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12764,
											"end": 12770,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12813,
											"end": 12815,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12801,
											"end": 12810,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12792,
											"end": 12799,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12788,
											"end": 12811,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12784,
											"end": 12816,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12819,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 12819,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 12819,
											"end": 12898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12819,
											"end": 12898,
											"name": "tag",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 12819,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 12781,
											"end": 12900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12939,
											"end": 12940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12964,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 13009,
											"end": 13016,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13000,
											"end": 13006,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12989,
											"end": 12998,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12985,
											"end": 13007,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12964,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 12964,
											"end": 13017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12964,
											"end": 13017,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 12964,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12954,
											"end": 13017,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12954,
											"end": 13017,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12910,
											"end": 13027,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13066,
											"end": 13068,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13092,
											"end": 13145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 13137,
											"end": 13144,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13128,
											"end": 13134,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13117,
											"end": 13126,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13092,
											"end": 13145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 13092,
											"end": 13145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13092,
											"end": 13145,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 13092,
											"end": 13145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13037,
											"end": 13155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 13162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13168,
											"end": 13348,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 13168,
											"end": 13348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13216,
											"end": 13293,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13213,
											"end": 13214,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13206,
											"end": 13294,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13313,
											"end": 13317,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 13310,
											"end": 13311,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13303,
											"end": 13318,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13337,
											"end": 13341,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13334,
											"end": 13335,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13327,
											"end": 13342,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13398,
											"end": 13404,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13435,
											"end": 13436,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 13429,
											"end": 13433,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13425,
											"end": 13437,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13415,
											"end": 13437,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13415,
											"end": 13437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13482,
											"end": 13483,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13476,
											"end": 13480,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13472,
											"end": 13484,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13503,
											"end": 13521,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13493,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 13493,
											"end": 13574,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13559,
											"end": 13563,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 13551,
											"end": 13557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13547,
											"end": 13564,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13537,
											"end": 13564,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13537,
											"end": 13564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13493,
											"end": 13574,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 13493,
											"end": 13574,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13621,
											"end": 13623,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13613,
											"end": 13619,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13610,
											"end": 13624,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13590,
											"end": 13608,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13587,
											"end": 13625,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13584,
											"end": 13668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 13584,
											"end": 13668,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13640,
											"end": 13658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 13640,
											"end": 13658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 13640,
											"end": 13658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13640,
											"end": 13658,
											"name": "tag",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 13640,
											"end": 13658,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13584,
											"end": 13668,
											"name": "tag",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 13584,
											"end": 13668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13405,
											"end": 13674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13354,
											"end": 13674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13680,
											"end": 13860,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 13680,
											"end": 13860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13728,
											"end": 13805,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13725,
											"end": 13726,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13718,
											"end": 13806,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13825,
											"end": 13829,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 13822,
											"end": 13823,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13815,
											"end": 13830,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13849,
											"end": 13853,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13846,
											"end": 13847,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13839,
											"end": 13854,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14276,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 13866,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13906,
											"end": 13913,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 13947,
											"end": 13948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 13929,
											"end": 13949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "tag",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13924,
											"end": 13949,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13924,
											"end": 13949,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13963,
											"end": 13983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 13981,
											"end": 13982,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13963,
											"end": 13983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 13963,
											"end": 13983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13963,
											"end": 13983,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 13963,
											"end": 13983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13958,
											"end": 13983,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13958,
											"end": 13983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14018,
											"end": 14019,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14015,
											"end": 14016,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14011,
											"end": 14020,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 14040,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 14058,
											"end": 14069,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14040,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 14040,
											"end": 14070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14040,
											"end": 14070,
											"name": "tag",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 14040,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14029,
											"end": 14070,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14029,
											"end": 14070,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14219,
											"end": 14220,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14210,
											"end": 14217,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14206,
											"end": 14221,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 14203,
											"end": 14204,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14200,
											"end": 14222,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 14180,
											"end": 14181,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14173,
											"end": 14182,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14153,
											"end": 14236,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 14130,
											"end": 14269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 14130,
											"end": 14269,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 14249,
											"end": 14267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "tag",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14130,
											"end": 14269,
											"name": "tag",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 14130,
											"end": 14269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13914,
											"end": 14276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14276,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14276,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14431,
											"end": 14435,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14469,
											"end": 14471,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14458,
											"end": 14467,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14454,
											"end": 14472,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14446,
											"end": 14472,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14446,
											"end": 14472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 14550,
											"end": 14551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14539,
											"end": 14548,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14535,
											"end": 14552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14526,
											"end": 14532,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 14482,
											"end": 14553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14553,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 14482,
											"end": 14553,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14563,
											"end": 14635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 14631,
											"end": 14633,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14620,
											"end": 14629,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14616,
											"end": 14634,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14613,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14563,
											"end": 14635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 14563,
											"end": 14635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14563,
											"end": 14635,
											"name": "tag",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 14563,
											"end": 14635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14645,
											"end": 14717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 14713,
											"end": 14715,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14702,
											"end": 14711,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14698,
											"end": 14716,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14689,
											"end": 14695,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14645,
											"end": 14717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 14645,
											"end": 14717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14645,
											"end": 14717,
											"name": "tag",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 14645,
											"end": 14717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14282,
											"end": 14724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14730,
											"end": 14846,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 14730,
											"end": 14846,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14800,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 14815,
											"end": 14820,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14800,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 14800,
											"end": 14821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14800,
											"end": 14821,
											"name": "tag",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 14800,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14793,
											"end": 14798,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14790,
											"end": 14822,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 14780,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 14780,
											"end": 14840,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14836,
											"end": 14837,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14833,
											"end": 14834,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14826,
											"end": 14838,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14780,
											"end": 14840,
											"name": "tag",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 14780,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14730,
											"end": 14846,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14730,
											"end": 14846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14852,
											"end": 14989,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 14852,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14906,
											"end": 14911,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14937,
											"end": 14943,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14931,
											"end": 14944,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14922,
											"end": 14944,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14922,
											"end": 14944,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14953,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 14977,
											"end": 14982,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14953,
											"end": 14983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 14953,
											"end": 14983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14953,
											"end": 14983,
											"name": "tag",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 14953,
											"end": 14983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14852,
											"end": 14989,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14852,
											"end": 14989,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14852,
											"end": 14989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14852,
											"end": 14989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14852,
											"end": 14989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14995,
											"end": 15340,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 14995,
											"end": 15340,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15062,
											"end": 15068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15111,
											"end": 15113,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15099,
											"end": 15108,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15090,
											"end": 15097,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15086,
											"end": 15109,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15082,
											"end": 15114,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 15079,
											"end": 15198,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15079,
											"end": 15198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 15079,
											"end": 15198,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15117,
											"end": 15196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 15117,
											"end": 15196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 15117,
											"end": 15196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15117,
											"end": 15196,
											"name": "tag",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 15117,
											"end": 15196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15079,
											"end": 15198,
											"name": "tag",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 15079,
											"end": 15198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15237,
											"end": 15238,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15262,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 15315,
											"end": 15322,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15306,
											"end": 15312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15295,
											"end": 15304,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15291,
											"end": 15313,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15262,
											"end": 15323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 15262,
											"end": 15323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15262,
											"end": 15323,
											"name": "tag",
											"source": 13,
											"value": "630"
										},
										{
											"begin": 15262,
											"end": 15323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15252,
											"end": 15323,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15252,
											"end": 15323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15208,
											"end": 15333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14995,
											"end": 15340,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14995,
											"end": 15340,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14995,
											"end": 15340,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14995,
											"end": 15340,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14995,
											"end": 15340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15346,
											"end": 15523,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 15346,
											"end": 15523,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15486,
											"end": 15515,
											"name": "PUSH",
											"source": 13,
											"value": "537461626C6520636F696E207472616E73666572206661696C65640000000000"
										},
										{
											"begin": 15482,
											"end": 15483,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15474,
											"end": 15480,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15470,
											"end": 15484,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15463,
											"end": 15516,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15346,
											"end": 15523,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15346,
											"end": 15523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15674,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 15756,
											"end": 15758,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 15751,
											"end": 15754,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 15692,
											"end": 15759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 15692,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15685,
											"end": 15759,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15685,
											"end": 15759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 15857,
											"end": 15860,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 15768,
											"end": 15861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "tag",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 15768,
											"end": 15861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15886,
											"end": 15888,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15881,
											"end": 15884,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15877,
											"end": 15889,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15870,
											"end": 15889,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15870,
											"end": 15889,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15529,
											"end": 15895,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15529,
											"end": 15895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16067,
											"end": 16071,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16105,
											"end": 16107,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16094,
											"end": 16103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16090,
											"end": 16108,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16082,
											"end": 16108,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16082,
											"end": 16108,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16154,
											"end": 16163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16148,
											"end": 16152,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16144,
											"end": 16164,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16140,
											"end": 16141,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16129,
											"end": 16138,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16125,
											"end": 16142,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16118,
											"end": 16165,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 16308,
											"end": 16312,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 16182,
											"end": 16313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "tag",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 16182,
											"end": 16313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16174,
											"end": 16313,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16174,
											"end": 16313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15901,
											"end": 16320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15901,
											"end": 16320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16326,
											"end": 16658,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 16326,
											"end": 16658,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16447,
											"end": 16451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16485,
											"end": 16487,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16474,
											"end": 16483,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16470,
											"end": 16488,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16462,
											"end": 16488,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16462,
											"end": 16488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 16566,
											"end": 16567,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16555,
											"end": 16564,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16551,
											"end": 16568,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16542,
											"end": 16548,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 16498,
											"end": 16569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "tag",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16579,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 16647,
											"end": 16649,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16636,
											"end": 16645,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16632,
											"end": 16650,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16623,
											"end": 16629,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16579,
											"end": 16651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 16579,
											"end": 16651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16579,
											"end": 16651,
											"name": "tag",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 16579,
											"end": 16651,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16326,
											"end": 16658,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16326,
											"end": 16658,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16326,
											"end": 16658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16326,
											"end": 16658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16326,
											"end": 16658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16326,
											"end": 16658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16664,
											"end": 16840,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 16664,
											"end": 16840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16804,
											"end": 16832,
											"name": "PUSH",
											"source": 13,
											"value": "426F6E6420746F6B656E207472616E73666572206661696C6564000000000000"
										},
										{
											"begin": 16800,
											"end": 16801,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16792,
											"end": 16798,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16788,
											"end": 16802,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16781,
											"end": 16833,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16664,
											"end": 16840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16664,
											"end": 16840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16846,
											"end": 17212,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 16846,
											"end": 17212,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16988,
											"end": 16991,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17009,
											"end": 17076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 17073,
											"end": 17075,
											"name": "PUSH",
											"source": 13,
											"value": "1A"
										},
										{
											"begin": 17068,
											"end": 17071,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17009,
											"end": 17076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 17009,
											"end": 17076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17009,
											"end": 17076,
											"name": "tag",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 17009,
											"end": 17076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17002,
											"end": 17076,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17002,
											"end": 17076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17085,
											"end": 17178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 17174,
											"end": 17177,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17085,
											"end": 17178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 17085,
											"end": 17178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17085,
											"end": 17178,
											"name": "tag",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 17085,
											"end": 17178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17203,
											"end": 17205,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17198,
											"end": 17201,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17194,
											"end": 17206,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17187,
											"end": 17206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17187,
											"end": 17206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16846,
											"end": 17212,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16846,
											"end": 17212,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16846,
											"end": 17212,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16846,
											"end": 17212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17218,
											"end": 17637,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 17218,
											"end": 17637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17384,
											"end": 17388,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17422,
											"end": 17424,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17411,
											"end": 17420,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17407,
											"end": 17425,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17399,
											"end": 17425,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17399,
											"end": 17425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17471,
											"end": 17480,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17465,
											"end": 17469,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17461,
											"end": 17481,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17457,
											"end": 17458,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17446,
											"end": 17455,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17442,
											"end": 17459,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17435,
											"end": 17482,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17499,
											"end": 17630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 17625,
											"end": 17629,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17499,
											"end": 17630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 17499,
											"end": 17630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17499,
											"end": 17630,
											"name": "tag",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 17499,
											"end": 17630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17491,
											"end": 17630,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17491,
											"end": 17630,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17218,
											"end": 17637,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17218,
											"end": 17637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17218,
											"end": 17637,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17218,
											"end": 17637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17643,
											"end": 17871,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 17643,
											"end": 17871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17783,
											"end": 17817,
											"name": "PUSH",
											"source": 13,
											"value": "546F6B656E20686F6C6465727320616E6420616D6F756E7473206C656E677468"
										},
										{
											"begin": 17779,
											"end": 17780,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17771,
											"end": 17777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17767,
											"end": 17781,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17760,
											"end": 17818,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17852,
											"end": 17863,
											"name": "PUSH",
											"source": 13,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17847,
											"end": 17849,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17839,
											"end": 17845,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17835,
											"end": 17850,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17828,
											"end": 17864,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17643,
											"end": 17871,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17643,
											"end": 17871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17877,
											"end": 18243,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 17877,
											"end": 18243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18019,
											"end": 18022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18040,
											"end": 18107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 18104,
											"end": 18106,
											"name": "PUSH",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 18099,
											"end": 18102,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18040,
											"end": 18107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 18040,
											"end": 18107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18040,
											"end": 18107,
											"name": "tag",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 18040,
											"end": 18107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18033,
											"end": 18107,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18033,
											"end": 18107,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18116,
											"end": 18209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 18205,
											"end": 18208,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18116,
											"end": 18209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 18116,
											"end": 18209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18116,
											"end": 18209,
											"name": "tag",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 18116,
											"end": 18209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18234,
											"end": 18236,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18229,
											"end": 18232,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18225,
											"end": 18237,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18218,
											"end": 18237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18218,
											"end": 18237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17877,
											"end": 18243,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17877,
											"end": 18243,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17877,
											"end": 18243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17877,
											"end": 18243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18249,
											"end": 18668,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 18249,
											"end": 18668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18415,
											"end": 18419,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18453,
											"end": 18455,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18442,
											"end": 18451,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18438,
											"end": 18456,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18430,
											"end": 18456,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18430,
											"end": 18456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18502,
											"end": 18511,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18496,
											"end": 18500,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18492,
											"end": 18512,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18488,
											"end": 18489,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18477,
											"end": 18486,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18473,
											"end": 18490,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18466,
											"end": 18513,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18530,
											"end": 18661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 18656,
											"end": 18660,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18530,
											"end": 18661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 18530,
											"end": 18661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18530,
											"end": 18661,
											"name": "tag",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 18530,
											"end": 18661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18522,
											"end": 18661,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18522,
											"end": 18661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18249,
											"end": 18668,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18249,
											"end": 18668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18249,
											"end": 18668,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18249,
											"end": 18668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18674,
											"end": 18854,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 18674,
											"end": 18854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18722,
											"end": 18799,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18719,
											"end": 18720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18712,
											"end": 18800,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18819,
											"end": 18823,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 18816,
											"end": 18817,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 18809,
											"end": 18824,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18843,
											"end": 18847,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 18840,
											"end": 18841,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18833,
											"end": 18848,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18860,
											"end": 19025,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 18860,
											"end": 19025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19000,
											"end": 19017,
											"name": "PUSH",
											"source": 13,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 18996,
											"end": 18997,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18988,
											"end": 18994,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18984,
											"end": 18998,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18977,
											"end": 19018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18860,
											"end": 19025,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18860,
											"end": 19025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19031,
											"end": 19397,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 19031,
											"end": 19397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19173,
											"end": 19176,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19194,
											"end": 19261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 19258,
											"end": 19260,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 19253,
											"end": 19256,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19194,
											"end": 19261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 19194,
											"end": 19261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19194,
											"end": 19261,
											"name": "tag",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 19194,
											"end": 19261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19187,
											"end": 19261,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19187,
											"end": 19261,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19270,
											"end": 19363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 19359,
											"end": 19362,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19270,
											"end": 19363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 19270,
											"end": 19363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19270,
											"end": 19363,
											"name": "tag",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 19270,
											"end": 19363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19388,
											"end": 19390,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19383,
											"end": 19386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19379,
											"end": 19391,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19372,
											"end": 19391,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19372,
											"end": 19391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19031,
											"end": 19397,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19031,
											"end": 19397,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19031,
											"end": 19397,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19031,
											"end": 19397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19403,
											"end": 19822,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 19403,
											"end": 19822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19569,
											"end": 19573,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19607,
											"end": 19609,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19596,
											"end": 19605,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19592,
											"end": 19610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19584,
											"end": 19610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19584,
											"end": 19610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19656,
											"end": 19665,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19650,
											"end": 19654,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19646,
											"end": 19666,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19642,
											"end": 19643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19631,
											"end": 19640,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19627,
											"end": 19644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19620,
											"end": 19667,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19684,
											"end": 19815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 19810,
											"end": 19814,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19684,
											"end": 19815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 19684,
											"end": 19815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19684,
											"end": 19815,
											"name": "tag",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 19684,
											"end": 19815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19676,
											"end": 19815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19676,
											"end": 19815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19403,
											"end": 19822,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19403,
											"end": 19822,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19403,
											"end": 19822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19403,
											"end": 19822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19828,
											"end": 20000,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 19828,
											"end": 20000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19968,
											"end": 19992,
											"name": "PUSH",
											"source": 13,
											"value": "43616E277420636C61696D207A65726F20636F696E7300000000000000000000"
										},
										{
											"begin": 19964,
											"end": 19965,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19956,
											"end": 19962,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19952,
											"end": 19966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19945,
											"end": 19993,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19828,
											"end": 20000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19828,
											"end": 20000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20006,
											"end": 20372,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 20006,
											"end": 20372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20148,
											"end": 20151,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20169,
											"end": 20236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 20233,
											"end": 20235,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 20228,
											"end": 20231,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20169,
											"end": 20236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 20169,
											"end": 20236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20169,
											"end": 20236,
											"name": "tag",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 20169,
											"end": 20236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20162,
											"end": 20236,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20162,
											"end": 20236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20245,
											"end": 20338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 20334,
											"end": 20337,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20245,
											"end": 20338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 20245,
											"end": 20338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20245,
											"end": 20338,
											"name": "tag",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 20245,
											"end": 20338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20363,
											"end": 20365,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20358,
											"end": 20361,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20354,
											"end": 20366,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20347,
											"end": 20366,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20347,
											"end": 20366,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20006,
											"end": 20372,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20006,
											"end": 20372,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20006,
											"end": 20372,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20006,
											"end": 20372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20378,
											"end": 20797,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 20378,
											"end": 20797,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20544,
											"end": 20548,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20582,
											"end": 20584,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20571,
											"end": 20580,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20567,
											"end": 20585,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20559,
											"end": 20585,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20559,
											"end": 20585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20631,
											"end": 20640,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20625,
											"end": 20629,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20621,
											"end": 20641,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20617,
											"end": 20618,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20606,
											"end": 20615,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20602,
											"end": 20619,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20595,
											"end": 20642,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20659,
											"end": 20790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 20785,
											"end": 20789,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20659,
											"end": 20790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 20659,
											"end": 20790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20659,
											"end": 20790,
											"name": "tag",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 20659,
											"end": 20790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20651,
											"end": 20790,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20651,
											"end": 20790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20378,
											"end": 20797,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20378,
											"end": 20797,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20378,
											"end": 20797,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20378,
											"end": 20797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20803,
											"end": 20946,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 20803,
											"end": 20946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20860,
											"end": 20865,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20891,
											"end": 20897,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20885,
											"end": 20898,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20876,
											"end": 20898,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20876,
											"end": 20898,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20907,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 20934,
											"end": 20939,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20907,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 20907,
											"end": 20940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20907,
											"end": 20940,
											"name": "tag",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 20907,
											"end": 20940,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20803,
											"end": 20946,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20803,
											"end": 20946,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20803,
											"end": 20946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20803,
											"end": 20946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20803,
											"end": 20946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20952,
											"end": 21303,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 20952,
											"end": 21303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21022,
											"end": 21028,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21071,
											"end": 21073,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21059,
											"end": 21068,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21050,
											"end": 21057,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21046,
											"end": 21069,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21042,
											"end": 21074,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 21039,
											"end": 21158,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21039,
											"end": 21158,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 21039,
											"end": 21158,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21077,
											"end": 21156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 21077,
											"end": 21156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 21077,
											"end": 21156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21077,
											"end": 21156,
											"name": "tag",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 21077,
											"end": 21156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21039,
											"end": 21158,
											"name": "tag",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 21039,
											"end": 21158,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21197,
											"end": 21198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21222,
											"end": 21286,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 21278,
											"end": 21285,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21269,
											"end": 21275,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21258,
											"end": 21267,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21254,
											"end": 21276,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21222,
											"end": 21286,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 21222,
											"end": 21286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21222,
											"end": 21286,
											"name": "tag",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 21222,
											"end": 21286,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21212,
											"end": 21286,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21212,
											"end": 21286,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21168,
											"end": 21296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20952,
											"end": 21303,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20952,
											"end": 21303,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20952,
											"end": 21303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20952,
											"end": 21303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20952,
											"end": 21303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21309,
											"end": 21487,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 21309,
											"end": 21487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21449,
											"end": 21479,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F20696E766573746F722066756E647320617661696C61626C652E00000000"
										},
										{
											"begin": 21445,
											"end": 21446,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21437,
											"end": 21443,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21433,
											"end": 21447,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21426,
											"end": 21480,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21309,
											"end": 21487,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21309,
											"end": 21487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21493,
											"end": 21859,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 21493,
											"end": 21859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21635,
											"end": 21638,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21656,
											"end": 21723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 21720,
											"end": 21722,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 21715,
											"end": 21718,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21656,
											"end": 21723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 21656,
											"end": 21723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21656,
											"end": 21723,
											"name": "tag",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 21656,
											"end": 21723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21649,
											"end": 21723,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21649,
											"end": 21723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21732,
											"end": 21825,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "674"
										},
										{
											"begin": 21821,
											"end": 21824,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21732,
											"end": 21825,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 21732,
											"end": 21825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21732,
											"end": 21825,
											"name": "tag",
											"source": 13,
											"value": "674"
										},
										{
											"begin": 21732,
											"end": 21825,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21850,
											"end": 21852,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21845,
											"end": 21848,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21841,
											"end": 21853,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21834,
											"end": 21853,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21834,
											"end": 21853,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21493,
											"end": 21859,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21493,
											"end": 21859,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21493,
											"end": 21859,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21493,
											"end": 21859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21865,
											"end": 22284,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 21865,
											"end": 22284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22031,
											"end": 22035,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22069,
											"end": 22071,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22058,
											"end": 22067,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22054,
											"end": 22072,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22046,
											"end": 22072,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22046,
											"end": 22072,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22118,
											"end": 22127,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22112,
											"end": 22116,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22108,
											"end": 22128,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 22104,
											"end": 22105,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22093,
											"end": 22102,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22089,
											"end": 22106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22082,
											"end": 22129,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22146,
											"end": 22277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "676"
										},
										{
											"begin": 22272,
											"end": 22276,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22146,
											"end": 22277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 22146,
											"end": 22277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22146,
											"end": 22277,
											"name": "tag",
											"source": 13,
											"value": "676"
										},
										{
											"begin": 22146,
											"end": 22277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22138,
											"end": 22277,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22138,
											"end": 22277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21865,
											"end": 22284,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21865,
											"end": 22284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21865,
											"end": 22284,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21865,
											"end": 22284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22290,
											"end": 22471,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 22290,
											"end": 22471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22430,
											"end": 22463,
											"name": "PUSH",
											"source": 13,
											"value": "4661696C656420746F207472616E7366657220737461626C6520636F696E7300"
										},
										{
											"begin": 22426,
											"end": 22427,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22418,
											"end": 22424,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22414,
											"end": 22428,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22407,
											"end": 22464,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22290,
											"end": 22471,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22290,
											"end": 22471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22477,
											"end": 22843,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 22477,
											"end": 22843,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22619,
											"end": 22622,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22640,
											"end": 22707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 22704,
											"end": 22706,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 22699,
											"end": 22702,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22640,
											"end": 22707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 22640,
											"end": 22707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22640,
											"end": 22707,
											"name": "tag",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 22640,
											"end": 22707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22633,
											"end": 22707,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22633,
											"end": 22707,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22716,
											"end": 22809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "680"
										},
										{
											"begin": 22805,
											"end": 22808,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22716,
											"end": 22809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 22716,
											"end": 22809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22716,
											"end": 22809,
											"name": "tag",
											"source": 13,
											"value": "680"
										},
										{
											"begin": 22716,
											"end": 22809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22834,
											"end": 22836,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22829,
											"end": 22832,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22825,
											"end": 22837,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22818,
											"end": 22837,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22818,
											"end": 22837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22477,
											"end": 22843,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22477,
											"end": 22843,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22477,
											"end": 22843,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22477,
											"end": 22843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22849,
											"end": 23268,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 22849,
											"end": 23268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23015,
											"end": 23019,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23053,
											"end": 23055,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23042,
											"end": 23051,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23038,
											"end": 23056,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23030,
											"end": 23056,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23030,
											"end": 23056,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23102,
											"end": 23111,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23096,
											"end": 23100,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23092,
											"end": 23112,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23088,
											"end": 23089,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23077,
											"end": 23086,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23073,
											"end": 23090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23066,
											"end": 23113,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23130,
											"end": 23261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "682"
										},
										{
											"begin": 23256,
											"end": 23260,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23130,
											"end": 23261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 23130,
											"end": 23261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23130,
											"end": 23261,
											"name": "tag",
											"source": 13,
											"value": "682"
										},
										{
											"begin": 23130,
											"end": 23261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23122,
											"end": 23261,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23122,
											"end": 23261,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22849,
											"end": 23268,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22849,
											"end": 23268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22849,
											"end": 23268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22849,
											"end": 23268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23274,
											"end": 23716,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 23274,
											"end": 23716,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23423,
											"end": 23427,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23461,
											"end": 23463,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 23450,
											"end": 23459,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23446,
											"end": 23464,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23438,
											"end": 23464,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23438,
											"end": 23464,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23474,
											"end": 23545,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "684"
										},
										{
											"begin": 23542,
											"end": 23543,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23531,
											"end": 23540,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23527,
											"end": 23544,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23518,
											"end": 23524,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23474,
											"end": 23545,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 23474,
											"end": 23545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23474,
											"end": 23545,
											"name": "tag",
											"source": 13,
											"value": "684"
										},
										{
											"begin": 23474,
											"end": 23545,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23555,
											"end": 23627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "685"
										},
										{
											"begin": 23623,
											"end": 23625,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23612,
											"end": 23621,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23608,
											"end": 23626,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23599,
											"end": 23605,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23555,
											"end": 23627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 23555,
											"end": 23627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23555,
											"end": 23627,
											"name": "tag",
											"source": 13,
											"value": "685"
										},
										{
											"begin": 23555,
											"end": 23627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23637,
											"end": 23709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "686"
										},
										{
											"begin": 23705,
											"end": 23707,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 23694,
											"end": 23703,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23690,
											"end": 23708,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23681,
											"end": 23687,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23637,
											"end": 23709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 23637,
											"end": 23709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23637,
											"end": 23709,
											"name": "tag",
											"source": 13,
											"value": "686"
										},
										{
											"begin": 23637,
											"end": 23709,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23274,
											"end": 23716,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 23274,
											"end": 23716,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23274,
											"end": 23716,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23274,
											"end": 23716,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23274,
											"end": 23716,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23274,
											"end": 23716,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23274,
											"end": 23716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23722,
											"end": 24054,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 23722,
											"end": 24054,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23843,
											"end": 23847,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23881,
											"end": 23883,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 23870,
											"end": 23879,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23866,
											"end": 23884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23858,
											"end": 23884,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23858,
											"end": 23884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23894,
											"end": 23965,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "688"
										},
										{
											"begin": 23962,
											"end": 23963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23951,
											"end": 23960,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23947,
											"end": 23964,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23938,
											"end": 23944,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23894,
											"end": 23965,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 23894,
											"end": 23965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23894,
											"end": 23965,
											"name": "tag",
											"source": 13,
											"value": "688"
										},
										{
											"begin": 23894,
											"end": 23965,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23975,
											"end": 24047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 24043,
											"end": 24045,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24032,
											"end": 24041,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24028,
											"end": 24046,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24019,
											"end": 24025,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23975,
											"end": 24047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 23975,
											"end": 24047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23975,
											"end": 24047,
											"name": "tag",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 23975,
											"end": 24047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23722,
											"end": 24054,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23722,
											"end": 24054,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23722,
											"end": 24054,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23722,
											"end": 24054,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23722,
											"end": 24054,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23722,
											"end": 24054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24060,
											"end": 24251,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 24060,
											"end": 24251,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24100,
											"end": 24103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24119,
											"end": 24139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "691"
										},
										{
											"begin": 24137,
											"end": 24138,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24119,
											"end": 24139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 24119,
											"end": 24139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24119,
											"end": 24139,
											"name": "tag",
											"source": 13,
											"value": "691"
										},
										{
											"begin": 24119,
											"end": 24139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24114,
											"end": 24139,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24114,
											"end": 24139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24153,
											"end": 24173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "692"
										},
										{
											"begin": 24171,
											"end": 24172,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24153,
											"end": 24173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 24153,
											"end": 24173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24153,
											"end": 24173,
											"name": "tag",
											"source": 13,
											"value": "692"
										},
										{
											"begin": 24153,
											"end": 24173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24148,
											"end": 24173,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24148,
											"end": 24173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24196,
											"end": 24197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24193,
											"end": 24194,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24189,
											"end": 24198,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24182,
											"end": 24198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24182,
											"end": 24198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24217,
											"end": 24220,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 24214,
											"end": 24215,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24211,
											"end": 24221,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 24208,
											"end": 24244,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24208,
											"end": 24244,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "693"
										},
										{
											"begin": 24208,
											"end": 24244,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 24224,
											"end": 24242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "694"
										},
										{
											"begin": 24224,
											"end": 24242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 24224,
											"end": 24242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24224,
											"end": 24242,
											"name": "tag",
											"source": 13,
											"value": "694"
										},
										{
											"begin": 24224,
											"end": 24242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24208,
											"end": 24244,
											"name": "tag",
											"source": 13,
											"value": "693"
										},
										{
											"begin": 24208,
											"end": 24244,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24060,
											"end": 24251,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24060,
											"end": 24251,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24060,
											"end": 24251,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24060,
											"end": 24251,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24060,
											"end": 24251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN()": "2a0acc6a",
							"BOND_ISSUER()": "e091a39b",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"buyBond(uint256)": "10002dbd",
							"claimFaceValue(uint256)": "ca19c11c",
							"claimInvestorFunds()": "ced0550f",
							"decimals()": "313ce567",
							"distributeInterest(address,uint256)": "f57d283e",
							"distributeInterestAll(address[],uint256[])": "904835c4",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"interestCoin()": "ec8eba14",
							"name()": "06fdde03",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"stableCoin()": "992642e5",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unitSize()": "a920260b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"administrator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bondIssuer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stableCoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_interestCoin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"faceValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestFrequency\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maturityDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unitSize\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BOND_ISSUER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"name\":\"buyBond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTokens\",\"type\":\"uint256\"}],\"name\":\"claimFaceValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimInvestorFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenHolders\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"distributeInterestAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableCoin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"BonDeFiTokenSiemens\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x82ace977cd220ae16f1d6af65ae586113e082ce71c1fdfb89bfb2391f4bc13b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e8db55b83ac0beb84c910b05563508ca8e144bcdf4b836bcbbdbc28da5b670\",\"dweb:/ipfs/QmYeH9GihjyRL4yVE52TTvz6hay4CkTzyyKe9pLd2i34EY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "contracts/MyToken.sol:BonDeFiTokenSiemens",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "contracts/MyToken.sol:BonDeFiTokenSiemens",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "contracts/MyToken.sol:BonDeFiTokenSiemens",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "contracts/MyToken.sol:BonDeFiTokenSiemens",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "contracts/MyToken.sol:BonDeFiTokenSiemens",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1253,
								"contract": "contracts/MyToken.sol:BonDeFiTokenSiemens",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 26,
								"contract": "contracts/MyToken.sol:BonDeFiTokenSiemens",
								"label": "_roles",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/MyToken.sol:BonDeFiTokenSiemens",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/MyToken.sol:BonDeFiTokenSiemens",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/MyToken.sol:17:5:\n   |\n17 |     uint256 totalInterest,uint256 interestFrequency, uint256 maturityDate, uint256 _unitSize) \n   |     ^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 851,
					"file": "contracts/MyToken.sol",
					"start": 830
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/MyToken.sol:17:27:\n   |\n17 |     uint256 totalInterest,uint256 interestFrequency, uint256 maturityDate, uint256 _unitSize) \n   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 877,
					"file": "contracts/MyToken.sol",
					"start": 852
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/MyToken.sol:17:54:\n   |\n17 |     uint256 totalInterest,uint256 interestFrequency, uint256 maturityDate, uint256 _unitSize) \n   |                                                      ^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 899,
					"file": "contracts/MyToken.sol",
					"start": 879
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1244
						],
						"ERC165": [
							1385
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1245,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1244,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1386,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1385,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1244,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1385,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1385,
								1397,
								378,
								1244
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1384
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1384,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1226,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1226,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 516,
							"src": "278:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 516,
							"src": "2186:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 516,
							"src": "4424:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1244
						],
						"ERC20": [
							1030
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1214
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1109,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 518,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1215,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 520,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1214,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1245,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1244,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 516,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1244,
										"src": "1428:7:3"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 529,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "1437:6:3"
									},
									"id": 530,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 531,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1214,
										"src": "1445:14:3"
									},
									"id": 532,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 533,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1461:12:3"
									},
									"id": 534,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030,
								420,
								1214,
								1108,
								1244
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 537,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 536,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 544,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 543,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 542,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 540,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 547,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 549,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 567,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 1030,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1201
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 573,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 572,
												"id": 574,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 1030,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1207
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 582,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 1030,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1213
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 588,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 1030,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 600,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 601,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 1030,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 611,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 613,
													"indexExpression": {
														"id": 612,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 614,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 1030,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 628,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 625,
												"id": 638,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 1030,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 650,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 652,
														"indexExpression": {
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 654,
													"indexExpression": {
														"id": 653,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 655,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 1030,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1095
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 669,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 921,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 666,
												"id": 679,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 1030,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 711,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 1030,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 730,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 729,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 735,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 739,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 745,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 1030,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																782
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 782,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 807,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 786,
															"initialValue": {
																"baseExpression": {
																	"id": 783,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"id": 784,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 787,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 797,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 791,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 792,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 793,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 790,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 795,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 806,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 798,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 800,
																			"indexExpression": {
																				"id": 799,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 801,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 802,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 805,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 776,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 809,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 810,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 827,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 821,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 826,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 819,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 815,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 831,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 1030,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 851,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 857,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 860,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 1030,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 1030,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 913,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 981,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 1030,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 946,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 940,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 939,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 945,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 948,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 955,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 954,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 960,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 963,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 966,
															"indexExpression": {
																"id": 964,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 967,
														"indexExpression": {
															"id": 965,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 968,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 971,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 975,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 972,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 1030,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 999,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1005,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1015,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 1014,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1009,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1010,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1008,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1013,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 1025,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1020,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1016,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				921,
																				981
																			],
																			"referencedDeclaration": 981,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 1030,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1031,
							"src": "1401:9741:3",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						]
					},
					"id": 1109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1033,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1042,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1051,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 1108,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 1108,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 1108,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 1108,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 1108,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 1108,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1109,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1244
						],
						"ERC20": [
							1030
						],
						"ERC20Burnable": [
							1154
						]
					},
					"id": 1155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 1031,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1111,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1030,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1155,
							"sourceUnit": 1245,
							"src": "186:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1113,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1244,
										"src": "194:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1116,
										"name": "Context",
										"nameLocations": [
											"483:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1244,
										"src": "483:7:5"
									},
									"id": 1117,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:5"
								},
								{
									"baseName": {
										"id": 1118,
										"name": "ERC20",
										"nameLocations": [
											"492:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "492:5:5"
									},
									"id": 1119,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:5"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1115,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1154,
							"linearizedBaseContracts": [
								1154,
								1030,
								420,
								1214,
								1108,
								1244
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "662:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1126,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "678:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "692:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1125,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "672:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "672:26:5"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:5",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "632:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:5"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:5"
									},
									"scope": 1154,
									"src": "618:87:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "1086:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1141,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "1112:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1142,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "1121:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "1135:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1140,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "1096:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1148,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "1157:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1149,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "1166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1147,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "1151:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:5"
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1039:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1056:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:5"
									},
									"scope": 1154,
									"src": "1021:158:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1155,
							"src": "448:733:5",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "124:1058:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20": [
							1030
						],
						"ERC20Pausable": [
							1188
						],
						"Pausable": [
							1361
						]
					},
					"id": 1189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1156,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1158,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 1031,
							"src": "150:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1157,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1030,
										"src": "158:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 1160,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 1362,
							"src": "186:53:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1159,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1361,
										"src": "194:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1162,
										"name": "ERC20",
										"nameLocations": [
											"964:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "964:5:6"
									},
									"id": 1163,
									"nodeType": "InheritanceSpecifier",
									"src": "964:5:6"
								},
								{
									"baseName": {
										"id": 1164,
										"name": "Pausable",
										"nameLocations": [
											"971:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1361,
										"src": "971:8:6"
									},
									"id": 1165,
									"nodeType": "InheritanceSpecifier",
									"src": "971:8:6"
								}
							],
							"canonicalName": "ERC20Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1161,
								"nodeType": "StructuredDocumentation",
								"src": "241:687:6",
								"text": " @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 1188,
							"linearizedBaseContracts": [
								1188,
								1361,
								1030,
								420,
								1214,
								1108,
								1244
							],
							"name": "ERC20Pausable",
							"nameLocation": "947:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										837
									],
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "1210:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "1234:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1182,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "1240:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "1244:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1178,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1220:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$1188_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1226:7:6",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 837,
														"src": "1220:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1220:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "1220:30:6"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "986:121:6",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1176,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1175,
												"name": "whenNotPaused",
												"nameLocations": [
													"1196:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1286,
												"src": "1196:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1196:13:6"
										}
									],
									"name": "_update",
									"nameLocation": "1121:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1174,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1187:8:6"
									},
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1137:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1129:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1151:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1143:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1163:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1155:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:41:6"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1210:0:6"
									},
									"scope": 1188,
									"src": "1112:145:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1189,
							"src": "929:330:6",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419,
								1266,
								1269
							],
							"usedEvents": [
								1042,
								1051,
								1258,
								1263
							]
						}
					],
					"src": "124:1136:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						],
						"IERC20Metadata": [
							1214
						]
					},
					"id": 1215,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1215,
							"sourceUnit": 1109,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1191,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1194,
										"name": "IERC20",
										"nameLocations": [
											"305:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "305:6:7"
									},
									"id": 1195,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1193,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:7",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1214,
							"linearizedBaseContracts": [
								1214,
								1108
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:7"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "416:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:7"
									},
									"scope": 1214,
									"src": "377:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:7"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "539:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:7"
									},
									"scope": 1214,
									"src": "498:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:7"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "673:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1210,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:7"
									},
									"scope": 1214,
									"src": "630:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1215,
							"src": "277:405:7",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "125:558:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1244
						]
					},
					"id": 1245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1216,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1217,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1244,
							"linearizedBaseContracts": [
								1244
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1222,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1221,
												"id": 1224,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1244,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1231,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1230,
												"id": 1233,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1228,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1244,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1239,
												"id": 1241,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1244,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1245,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1244
						],
						"Pausable": [
							1361
						]
					},
					"id": 1362,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1362,
							"sourceUnit": 1245,
							"src": "128:45:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1247,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1244,
										"src": "136:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1250,
										"name": "Context",
										"nameLocations": [
											"645:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1244,
										"src": "645:7:9"
									},
									"id": 1251,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:9"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1249,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:9",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1361,
							"linearizedBaseContracts": [
								1361,
								1244
							],
							"name": "Pausable",
							"nameLocation": "633:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1253,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1361,
									"src": "659:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1252,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:9",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1258,
									"name": "Paused",
									"nameLocation": "770:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "777:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:9"
									},
									"src": "764:30:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:9",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1263,
									"name": "Unpaused",
									"nameLocation": "881:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "890:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:9"
									},
									"src": "875:32:9"
								},
								{
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:9",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1266,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:9"
									},
									"src": "994:22:9"
								},
								{
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:9",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1269,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:9"
									},
									"src": "1107:22:9"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "1221:32:9",
										"statements": [
											{
												"expression": {
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1273,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "1231:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:9"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:9",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1278,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:9"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:9"
									},
									"scope": 1361,
									"src": "1207:46:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "1464:47:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1281,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "1474:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:9"
											},
											{
												"id": 1284,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:9"
											}
										]
									},
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:9",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1286,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:9"
									},
									"src": "1439:72:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "1711:44:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1289,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "1721:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:9"
											},
											{
												"id": 1292,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:9"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:9",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1294,
									"name": "whenPaused",
									"nameLocation": "1698:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:9"
									},
									"src": "1689:66:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "1903:31:9",
										"statements": [
											{
												"expression": {
													"id": 1300,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1253,
													"src": "1920:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1301,
												"nodeType": "Return",
												"src": "1913:14:9"
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:9",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:9"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1897:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:9"
									},
									"scope": 1361,
									"src": "1850:84:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "2053:77:9",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1307,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "2067:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "IfStatement",
												"src": "2063:61:9",
												"trueBody": {
													"id": 1312,
													"nodeType": "Block",
													"src": "2077:47:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1309,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "2098:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1311,
															"nodeType": "RevertStatement",
															"src": "2091:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:9",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:9"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:9"
									},
									"scope": 1361,
									"src": "2002:128:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "2250:78:9",
										"statements": [
											{
												"condition": {
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:9",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1319,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "2265:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1326,
												"nodeType": "IfStatement",
												"src": "2260:62:9",
												"trueBody": {
													"id": 1325,
													"nodeType": "Block",
													"src": "2275:47:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1322,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "2296:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1324,
															"nodeType": "RevertStatement",
															"src": "2289:22:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:9",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:9"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:9"
									},
									"scope": 1361,
									"src": "2202:126:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "2512:66:9",
										"statements": [
											{
												"expression": {
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1334,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "2522:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1339,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "2558:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1338,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "2551:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "EmitStatement",
												"src": "2546:25:9"
											}
										]
									},
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:9",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1332,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1331,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1286,
												"src": "2498:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:9"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:9"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:9"
									},
									"scope": 1361,
									"src": "2463:115:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "2758:69:9",
										"statements": [
											{
												"expression": {
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1350,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "2768:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1355,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "2807:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1354,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "2798:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "EmitStatement",
												"src": "2793:27:9"
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:9",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1347,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1294,
												"src": "2747:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:9"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:9"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:9"
									},
									"scope": 1361,
									"src": "2710:117:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1362,
							"src": "615:2214:9",
							"usedErrors": [
								1266,
								1269
							],
							"usedEvents": [
								1258,
								1263
							]
						}
					],
					"src": "102:2728:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1385
						],
						"IERC165": [
							1397
						]
					},
					"id": 1386,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1363,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1386,
							"sourceUnit": 1398,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1364,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1397,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1367,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1397,
										"src": "687:7:10"
									},
									"id": 1368,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1366,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1385,
							"linearizedBaseContracts": [
								1385,
								1397
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1396
									],
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1376,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1378,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1397_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1397_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1377,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1397",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1375,
												"id": 1382,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1370,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 1385,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1386,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1397
						]
					},
					"id": 1398,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1387,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1388,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1397,
							"linearizedBaseContracts": [
								1397
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1390,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1393,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 1397,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1398,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"contracts/MyToken.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"BonDeFiTokenSiemens": [
							1723
						],
						"Context": [
							1244
						],
						"ERC165": [
							1385
						],
						"ERC20": [
							1030
						],
						"ERC20Burnable": [
							1154
						],
						"ERC20Pausable": [
							1188
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1214
						],
						"Pausable": [
							1361
						]
					},
					"id": 1724,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1399,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1724,
							"sourceUnit": 1031,
							"src": "107:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1401,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1724,
							"sourceUnit": 1155,
							"src": "163:74:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"id": 1402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1724,
							"sourceUnit": 1189,
							"src": "238:74:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1403,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1724,
							"sourceUnit": 296,
							"src": "313:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1404,
										"name": "ERC20",
										"nameLocations": [
											"405:5:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "405:5:12"
									},
									"id": 1405,
									"nodeType": "InheritanceSpecifier",
									"src": "405:5:12"
								},
								{
									"baseName": {
										"id": 1406,
										"name": "ERC20Burnable",
										"nameLocations": [
											"412:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1154,
										"src": "412:13:12"
									},
									"id": 1407,
									"nodeType": "InheritanceSpecifier",
									"src": "412:13:12"
								},
								{
									"baseName": {
										"id": 1408,
										"name": "ERC20Pausable",
										"nameLocations": [
											"427:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "427:13:12"
									},
									"id": 1409,
									"nodeType": "InheritanceSpecifier",
									"src": "427:13:12"
								},
								{
									"baseName": {
										"id": 1410,
										"name": "AccessControl",
										"nameLocations": [
											"442:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "442:13:12"
									},
									"id": 1411,
									"nodeType": "InheritanceSpecifier",
									"src": "442:13:12"
								}
							],
							"canonicalName": "BonDeFiTokenSiemens",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1723,
							"linearizedBaseContracts": [
								1723,
								295,
								1385,
								1397,
								378,
								1188,
								1361,
								1154,
								1030,
								420,
								1214,
								1108,
								1244
							],
							"name": "BonDeFiTokenSiemens",
							"nameLocation": "382:19:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "2a0acc6a",
									"id": 1416,
									"mutability": "constant",
									"name": "ADMIN",
									"nameLocation": "486:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 1723,
									"src": "462:50:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1412,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "462:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e",
												"id": 1414,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "504:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
													"typeString": "literal_string \"ADMIN\""
												},
												"value": "ADMIN"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
													"typeString": "literal_string \"ADMIN\""
												}
											],
											"id": 1413,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "494:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1415,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "494:18:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e091a39b",
									"id": 1421,
									"mutability": "constant",
									"name": "BOND_ISSUER",
									"nameLocation": "542:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 1723,
									"src": "518:62:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1417,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "518:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "424f4e445f495353554552",
												"id": 1419,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "566:13:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7",
													"typeString": "literal_string \"BOND_ISSUER\""
												},
												"value": "BOND_ISSUER"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_f877234297ef562d54f0328f892acfc1d6c1e44ca89f02e3a2c2a4736f6095b7",
													"typeString": "literal_string \"BOND_ISSUER\""
												}
											],
											"id": 1418,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "556:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1420,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "556:24:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "992642e5",
									"id": 1423,
									"mutability": "immutable",
									"name": "stableCoin",
									"nameLocation": "611:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1723,
									"src": "586:35:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1422,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "586:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec8eba14",
									"id": 1425,
									"mutability": "immutable",
									"name": "interestCoin",
									"nameLocation": "652:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1723,
									"src": "627:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1424,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "627:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a920260b",
									"id": 1427,
									"mutability": "immutable",
									"name": "unitSize",
									"nameLocation": "695:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 1723,
									"src": "670:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1426,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "670:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "974:267:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1453,
															"name": "ADMIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "995:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1454,
															"name": "administrator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "1002:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1452,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "984:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "984:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "984:32:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1458,
															"name": "BOND_ISSUER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "1037:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1459,
															"name": "bondIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "1050:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1457,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1026:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1026:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "1026:35:12"
											},
											{
												"expression": {
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1462,
														"name": "stableCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "1071:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1463,
														"name": "_stableCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "1084:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1071:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "1071:24:12"
											},
											{
												"expression": {
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1466,
														"name": "interestCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "1105:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1467,
														"name": "_interestCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "1120:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1105:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "1105:28:12"
											},
											{
												"expression": {
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1470,
														"name": "unitSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "1143:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1471,
														"name": "_unitSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "1154:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1143:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1473,
												"nodeType": "ExpressionStatement",
												"src": "1143:20:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1475,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1179:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1183:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1179:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1477,
																			"name": "faceValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1437,
																			"src": "1192:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1478,
																			"name": "_unitSize",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1445,
																			"src": "1204:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1192:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1480,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1191:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1217:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1482,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "1223:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1223:10:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1217:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1191:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1474,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "1173:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1173:61:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "ExpressionStatement",
												"src": "1173:61:12"
											}
										]
									},
									"id": 1489,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "426f6e4465466920546f6b656e205369656d656e73",
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "935:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_337768d938ed818c060e518328408cc2365f8706c011d479ca2819ea566f6b68",
														"typeString": "literal_string \"BonDeFi Token Siemens\""
													},
													"value": "BonDeFi Token Siemens"
												},
												{
													"hexValue": "42445349454d",
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "960:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f6f0bd49ad8261fd967beb6e5d977fc9a10fd1187289ab751d279379ca500fa7",
														"typeString": "literal_string \"BDSIEM\""
													},
													"value": "BDSIEM"
												}
											],
											"id": 1450,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1447,
												"name": "ERC20",
												"nameLocations": [
													"929:5:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "929:5:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "929:40:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "administrator",
												"nameLocation": "729:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "721:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "bondIssuer",
												"nameLocation": "752:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "744:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "_stableCoin",
												"nameLocation": "772:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "764:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "_interestCoin",
												"nameLocation": "792:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "784:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "faceValue",
												"nameLocation": "815:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "807:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "807:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "totalInterest",
												"nameLocation": "838:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "830:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "interestFrequency",
												"nameLocation": "860:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "852:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "maturityDate",
												"nameLocation": "887:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "879:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "_unitSize",
												"nameLocation": "909:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "901:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "901:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:199:12"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "974:0:12"
									},
									"scope": 1723,
									"src": "709:532:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "1287:25:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1495,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "1297:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1297:8:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "1297:8:12"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1492,
													"name": "ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1416,
													"src": "1280:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1493,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1491,
												"name": "onlyRole",
												"nameLocations": [
													"1271:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1271:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1271:15:12"
										}
									],
									"name": "pause",
									"nameLocation": "1256:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:2:12"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1287:0:12"
									},
									"scope": 1723,
									"src": "1247:65:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "1360:27:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1505,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "1370:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1370:10:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "ExpressionStatement",
												"src": "1370:10:12"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1502,
													"name": "ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1416,
													"src": "1353:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1503,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1501,
												"name": "onlyRole",
												"nameLocations": [
													"1344:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1344:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1344:15:12"
										}
									],
									"name": "unpause",
									"nameLocation": "1327:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1334:2:12"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:0:12"
									},
									"scope": 1723,
									"src": "1318:69:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "1437:228:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1519,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1487:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1491:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1487:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1523,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1506:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiTokenSiemens_$1723",
																				"typeString": "contract BonDeFiTokenSiemens"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiTokenSiemens_$1723",
																				"typeString": "contract BonDeFiTokenSiemens"
																			}
																		],
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1498:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1521,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1498:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1498:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1525,
																		"name": "amountTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1511,
																		"src": "1512:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1526,
																		"name": "unitSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1427,
																		"src": "1525:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1512:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1516,
																			"name": "stableCoin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1423,
																			"src": "1462:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1515,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "1455:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1455:18:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1108",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1474:12:12",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1107,
																"src": "1455:31:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1455:79:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461626c6520636f696e207472616e73666572206661696c6564",
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1535:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																"typeString": "literal_string \"Stable coin transfer failed\""
															},
															"value": "Stable coin transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																"typeString": "literal_string \"Stable coin transfer failed\""
															}
														],
														"id": 1514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1447:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1447:118:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "1447:118:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1537,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1604:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1608:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1604:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1539,
																	"name": "amountTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1511,
																	"src": "1615:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1534,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1589:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiTokenSiemens_$1723",
																				"typeString": "contract BonDeFiTokenSiemens"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiTokenSiemens_$1723",
																				"typeString": "contract BonDeFiTokenSiemens"
																			}
																		],
																		"id": 1533,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "1583:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$1030_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1583:11:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1030",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1595:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 640,
																"src": "1583:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1583:45:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6e6420746f6b656e207472616e73666572206661696c6564",
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1629:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																"typeString": "literal_string \"Bond token transfer failed\""
															},
															"value": "Bond token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																"typeString": "literal_string \"Bond token transfer failed\""
															}
														],
														"id": 1532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1575:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1575:83:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1543,
												"nodeType": "ExpressionStatement",
												"src": "1575:83:12"
											}
										]
									},
									"functionSelector": "10002dbd",
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyBond",
									"nameLocation": "1401:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "amountTokens",
												"nameLocation": "1417:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "1409:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:22:12"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:12"
									},
									"scope": 1723,
									"src": "1392:273:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "1757:110:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1560,
																	"name": "interestCoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "1809:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1561,
																	"name": "tokenHolder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "1822:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1562,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1549,
																	"src": "1834:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1557,
																			"name": "interestCoin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1425,
																			"src": "1782:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1556,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "1775:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1775:20:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1108",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1796:12:12",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1107,
																"src": "1775:33:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1775:66:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1842:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1767:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1767:93:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "1767:93:12"
											}
										]
									},
									"functionSelector": "f57d283e",
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1552,
													"name": "ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1416,
													"src": "1751:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1553,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1551,
												"name": "onlyRole",
												"nameLocations": [
													"1742:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1742:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1742:15:12"
										}
									],
									"name": "distributeInterest",
									"nameLocation": "1680:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "1707:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "1699:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1727:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "1719:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:36:12"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1757:0:12"
									},
									"scope": 1723,
									"src": "1671:196:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "1983:294:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1581,
																	"name": "tokenHolders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1571,
																	"src": "2001:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2014:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2001:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1583,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "2024:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2032:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2024:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2001:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20686f6c6465727320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2040:43:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f",
																"typeString": "literal_string \"Token holders and amounts length mismatch\""
															},
															"value": "Token holders and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_31587750037a1c195628ee5fbf1aaac7f01a1728f164ea654f28aedc2c500e6f",
																"typeString": "literal_string \"Token holders and amounts length mismatch\""
															}
														],
														"id": 1580,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1993:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:91:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "1993:91:12"
											},
											{
												"body": {
													"id": 1617,
													"nodeType": "Block",
													"src": "2144:127:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1605,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2200:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2204:6:12",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2200:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 1607,
																					"name": "tokenHolders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1571,
																					"src": "2212:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1609,
																				"indexExpression": {
																					"id": 1608,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1590,
																					"src": "2225:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2212:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 1610,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1574,
																					"src": "2229:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1612,
																				"indexExpression": {
																					"id": 1611,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1590,
																					"src": "2237:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2229:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1602,
																						"name": "interestCoin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1425,
																						"src": "2173:12:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1601,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "2166:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 1603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2166:20:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1108",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2187:12:12",
																			"memberName": "transferFrom",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1107,
																			"src": "2166:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,address,uint256) external returns (bool)"
																			}
																		},
																		"id": 1613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2166:74:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"id": 1614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2242:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		},
																		"value": "Transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		}
																	],
																	"id": 1600,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2158:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2158:102:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1616,
															"nodeType": "ExpressionStatement",
															"src": "2158:102:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1593,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "2114:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1594,
															"name": "tokenHolders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "2118:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2131:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2118:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2114:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1618,
												"initializationExpression": {
													"assignments": [
														1590
													],
													"declarations": [
														{
															"constant": false,
															"id": 1590,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2107:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1618,
															"src": "2099:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1589,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2099:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1592,
													"initialValue": {
														"hexValue": "30",
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2111:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2099:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2139:3:12",
														"subExpression": {
															"id": 1597,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "2139:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1599,
													"nodeType": "ExpressionStatement",
													"src": "2139:3:12"
												},
												"nodeType": "ForStatement",
												"src": "2094:177:12"
											}
										]
									},
									"functionSelector": "904835c4",
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1577,
													"name": "ADMIN",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1416,
													"src": "1976:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1578,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1576,
												"name": "onlyRole",
												"nameLocations": [
													"1967:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1967:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1967:15:12"
										}
									],
									"name": "distributeInterestAll",
									"nameLocation": "1881:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "tokenHolders",
												"nameLocation": "1920:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "1903:29:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1569,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1903:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1570,
													"nodeType": "ArrayTypeName",
													"src": "1903:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1951:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "1934:24:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1572,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1934:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1573,
													"nodeType": "ArrayTypeName",
													"src": "1934:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:57:12"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:0:12"
									},
									"scope": 1723,
									"src": "1872:405:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "2340:268:12",
										"statements": [
											{
												"assignments": [
													1627
												],
												"declarations": [
													{
														"constant": false,
														"id": 1627,
														"mutability": "mutable",
														"name": "amountInvestorCoins",
														"nameLocation": "2358:19:12",
														"nodeType": "VariableDeclaration",
														"scope": 1657,
														"src": "2350:27:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2350:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1637,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1634,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2417:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BonDeFiTokenSiemens_$1723",
																		"typeString": "contract BonDeFiTokenSiemens"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BonDeFiTokenSiemens_$1723",
																		"typeString": "contract BonDeFiTokenSiemens"
																	}
																],
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2409:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1632,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2409:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2409:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1629,
																	"name": "stableCoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "2387:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1628,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "2380:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2380:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1108",
																"typeString": "contract IERC20"
															}
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2399:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1065,
														"src": "2380:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2380:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2350:73:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1639,
																"name": "amountInvestorCoins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "2441:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2463:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2441:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20696e766573746f722066756e647320617661696c61626c652e",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2465:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15",
																"typeString": "literal_string \"No investor funds available.\""
															},
															"value": "No investor funds available."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b4f28c9bb95099659870589179b94ce75c6e5c75c2bbbdaa7182565b71a1b15",
																"typeString": "literal_string \"No investor funds available.\""
															}
														],
														"id": 1638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2433:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2433:63:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "2433:63:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1650,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2535:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2539:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2535:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1652,
																	"name": "amountInvestorCoins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "2546:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1647,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiTokenSiemens_$1723",
																				"typeString": "contract BonDeFiTokenSiemens"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiTokenSiemens_$1723",
																				"typeString": "contract BonDeFiTokenSiemens"
																			}
																		],
																		"id": 1646,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "2514:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$1030_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2514:11:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1030",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2526:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 640,
																"src": "2514:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2514:52:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f207472616e7366657220737461626c6520636f696e73",
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2567:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b",
																"typeString": "literal_string \"Failed to transfer stable coins\""
															},
															"value": "Failed to transfer stable coins"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b49fb61337b4b6ced5fd1eb610b79644b1717c50dc2994e98b6c77012af868b",
																"typeString": "literal_string \"Failed to transfer stable coins\""
															}
														],
														"id": 1645,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2506:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2506:95:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1656,
												"nodeType": "ExpressionStatement",
												"src": "2506:95:12"
											}
										]
									},
									"functionSelector": "ced0550f",
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1623,
													"name": "BOND_ISSUER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1421,
													"src": "2328:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1624,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1622,
												"name": "onlyRole",
												"nameLocations": [
													"2319:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2319:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2319:21:12"
										}
									],
									"name": "claimInvestorFunds",
									"nameLocation": "2291:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2309:2:12"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:0:12"
									},
									"scope": 1723,
									"src": "2282:326:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "2666:288:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1664,
																"name": "amountTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1660,
																"src": "2684:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2699:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2684:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e277420636c61696d207a65726f20636f696e73",
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2701:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464",
																"typeString": "literal_string \"Can't claim zero coins\""
															},
															"value": "Can't claim zero coins"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c68c60abd3481800ee541765146ec7885e2096ddd0eecb41ba0ab6c9b914c464",
																"typeString": "literal_string \"Can't claim zero coins\""
															}
														],
														"id": 1663,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2676:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2676:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "2676:50:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1675,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2769:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2773:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2769:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1679,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2788:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiTokenSiemens_$1723",
																				"typeString": "contract BonDeFiTokenSiemens"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiTokenSiemens_$1723",
																				"typeString": "contract BonDeFiTokenSiemens"
																			}
																		],
																		"id": 1678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2780:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1677,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2780:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2780:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1681,
																	"name": "amountTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "2794:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1672,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2750:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BonDeFiTokenSiemens_$1723",
																				"typeString": "contract BonDeFiTokenSiemens"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BonDeFiTokenSiemens_$1723",
																				"typeString": "contract BonDeFiTokenSiemens"
																			}
																		],
																		"id": 1671,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "2744:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$1030_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2744:11:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$1030",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2756:12:12",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 713,
																"src": "2744:24:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2744:63:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f6e6420746f6b656e207472616e73666572206661696c6564",
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2808:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																"typeString": "literal_string \"Bond token transfer failed\""
															},
															"value": "Bond token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3188e568da3578bd8f812837e3c23e6f30efb8618c3bff9b3b6799ac6cd27764",
																"typeString": "literal_string \"Bond token transfer failed\""
															}
														],
														"id": 1670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2736:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2736:101:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "2736:101:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1691,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2883:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2887:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2883:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1693,
																		"name": "amountTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1660,
																		"src": "2894:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1694,
																		"name": "unitSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1427,
																		"src": "2907:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2894:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1688,
																			"name": "stableCoin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1423,
																			"src": "2862:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1687,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "2855:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$1108_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2855:18:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1108",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2874:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1075,
																"src": "2855:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2855:61:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461626c6520636f696e207472616e73666572206661696c6564",
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2917:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																"typeString": "literal_string \"Stable coin transfer failed\""
															},
															"value": "Stable coin transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32ea1f7031fb50651d23736f869463ff7914e6920eeafbfc4247f2b6618fa59d",
																"typeString": "literal_string \"Stable coin transfer failed\""
															}
														],
														"id": 1686,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2847:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2847:100:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1699,
												"nodeType": "ExpressionStatement",
												"src": "2847:100:12"
											}
										]
									},
									"functionSelector": "ca19c11c",
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimFaceValue",
									"nameLocation": "2623:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "amountTokens",
												"nameLocation": "2646:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "2638:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:22:12"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2666:0:12"
									},
									"scope": 1723,
									"src": "2614:340:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										837,
										1187
									],
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "3183:47:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1716,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "3207:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1717,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "3213:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1718,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "3217:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1713,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3193:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_BonDeFiTokenSiemens_$1723_$",
																"typeString": "type(contract super BonDeFiTokenSiemens)"
															}
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3199:7:12",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "3193:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3193:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1720,
												"nodeType": "ExpressionStatement",
												"src": "3193:30:12"
											}
										]
									},
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "3074:7:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1711,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1709,
												"name": "ERC20",
												"nameLocations": [
													"3157:5:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "3157:5:12"
											},
											{
												"id": 1710,
												"name": "ERC20Pausable",
												"nameLocations": [
													"3164:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1188,
												"src": "3164:13:12"
											}
										],
										"src": "3148:30:12"
									},
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3090:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "3082:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3104:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "3096:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3096:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3116:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "3108:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3108:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3081:41:12"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3183:0:12"
									},
									"scope": 1723,
									"src": "3065:165:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1724,
							"src": "373:2859:12",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419,
								1266,
								1269
							],
							"usedEvents": [
								317,
								326,
								335,
								1042,
								1051,
								1258,
								1263
							]
						}
					],
					"src": "81:3152:12"
				},
				"id": 12
			}
		}
	}
}